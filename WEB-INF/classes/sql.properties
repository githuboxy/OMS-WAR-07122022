################################################################################################################
----------------------------------------------------- Report  ---------------------------------------------------
################################################################################################################

sql.getIssuerCurrentHolder=SELECT p.*, SUM (p.amount) OVER (PARTITION BY p.programid, p.cassiiacctnbr) investorAmount,SUM (p.amount) OVER (PARTITION BY p.programid ) issuerAmount,  SUM (p.amount) OVER ()grandTotal from (SELECT ism.issueid issueId, ism.programid programId,prodname prodName,issuerName, fn_decrypt (am.cassiiacctnbr, 1) cassiiAcctNbr, am.shortName salesPerson, ism.traderid traderId,    ism.status,      DECODE (TRUNC (ism.createddate, 'YYYY'),    TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'),      TO_CHAR (ism.createddate, 'fmmm/dd/yy')   ) tradeDate,     ism.orgsettletdate settlementDate,    TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturityDate,  TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityEndDate,   DECODE (TRUNC (settlementdate, 'YYYY'),    TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd'),  TO_CHAR (settlementdate, 'fmmm/dd/yy')      ) settlementDateStr,     DECODE (TRUNC (maturitydate, 'YYYY'),    TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd'),     TO_CHAR (maturitydate, 'fmmm/dd/yy')  ) mat,    ism.amount, ism.bid price, st.descr    FROM vw_cptradehistory_t ism,     fo_program_m isr,      fo_trader_books_m trb,     fo_product_m prd,     fo_tm_tradestatus_m st,     fo_accountmaster_m am     WHERE ism.programid = isr.programid    AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype      AND trb.bookid = isr.defaultbookid      AND TRIM (ism.status) = st.statusid      AND ism.transtype = '85'       AND st.status = 'Y'   AND ism.status = 'A'   AND subacctcassii IS NULL       AND isr.status = 'Y'   AND published = 'Y'   AND ism.acctnbr = am.acctnbr       AND am.status = 'Y'   and am.programid is null       union  SELECT ism.issueid issueId, ism.programid programId, prodname prodName,issuername issuerName,  fn_decrypt (am.cassiiacctnbr, 1) cassiiAcctNbr, am.SHORTNAME salesPerson, ism.traderid traderId,   ism.status,       DECODE (TRUNC (ism.createddate, 'YYYY'),    TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'),      TO_CHAR (ism.createddate, 'fmmm/dd/yy')  ) tradeDate,      ism.originalsettlementdate settlementDate,    TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturityDate,   TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityEndDate,  DECODE (TRUNC (settlementdate, 'YYYY'),     TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd'),   TO_CHAR (settlementdate, 'fmmm/dd/yy')       ) settlementDateStr,    DECODE (TRUNC (maturitydate, 'YYYY'),     TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd'),      TO_CHAR (maturitydate, 'fmmm/dd/yy')  ) mat,      ism.amount, ism.bid price, st.descr      FROM vw_cdtradehistory_t ism,    fo_program_m isr,      fo_trader_books_m trb,    fo_product_m prd,      fo_tm_tradestatus_m st,    fo_accountmaster_m am    WHERE prd.prodid = ism.producttype    AND ism.programid = isr.programid    AND st.statusid = TRIM (ism.status)     AND trb.bookid = isr.defaultbookid     AND ism.acctnbr = am.acctnbr    AND ism.status = 'A'      AND subacctcassii IS NULL    AND st.status = 'Y'      AND published = 'Y'      AND am.status = 'Y'   and am.programid is null      )p   order by issuername, salesperson, prodname

# sql.getInvHistoryReport = SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum	FROM (SELECT ism.prodid, ism.programid, ism.issuenumber,  isr.shortname isrshrtname, ism.issueid,ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid, ism.traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield,0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype 	AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid	 AND ism.transtype = '85' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y'  AND published = 'Y'  AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('6/16/20','fmmm/dd/yy')AND TO_DATE('12/23/20','fmmm/dd/yy')) 	UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,  ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker,ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,	 am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE (TRUNC (ism.originalsettlementdate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.originalsettlementdate,'fmmm/dd'),		 TO_CHAR (ism.originalsettlementdate,		 'fmmm/dd/yy')) settlementdatestr,		 ism.createddate,				 DECODE (TRUNC (ism.createddate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.createddate,'fmmm/dd'),			 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,	 DECODE (TRUNC (ism.maturitydate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),									   		TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,	 ism.bid, ism.offer, ism.accruedinterest,	 NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag,	 ism.rootcusip, ism.issuetype, ism.rateflag,	 ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,	 ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,	 ism.traderid, ism.traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,		 ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid,		 isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag,	 '' subjectflag,TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate,						   		0 traderacruedint, 0 offeryield, 0 bidyield,	 0 minimumpiece, ism.price, ism.bidyeild,	 TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber				 FROM vw_cdtradehistory_t ism,			 fo_program_m isr,				 fo_product_m prd,				 fo_tm_tradestatus_m st,				 fo_accountmaster_m am,				 fo_trader_books_m trb				 WHERE prd.prodid = ism.producttype		 AND ism.programid = isr.programid			 AND st.statusid = TRIM (ism.status)  AND trb.bookid = isr.defaultbookid   AND ism.transtype = '85'  AND ism.acctnbr = am.acctnbr			 AND ism.status NOT IN ('AT', 'AC')		 AND subacctcassii IS NULL			 AND st.status = 'Y'				 AND published = 'Y' AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('6/16/20','fmmm/dd/yy')AND TO_DATE('12/23/20','fmmm/dd/yy'))			   		) a,fo_up_product_d UP,				 fo_group_m g					 WHERE UP.loginid = '85992721'			 AND g.companyid = '43839171'			 AND g.prodid = a.prodid				 AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y  AND UP.status = 'Y' ORDER BY a.createddate DESC)

sql.getIssuerCurrentHolderDetailsForInvestor=SELECT p.* FROM (SELECT ism.issueid issueid, ism.programid programid, prodname prodname, ism.producttype, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) cassiinbr, am.shortname investorname, ism.traderid traderid, ism.status, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) tradedate, ism.orgsettletdate settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, DECODE (TRUNC (settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd' ), TO_CHAR (settlementdate, 'fmmm/dd/yy') ) settledate, DECODE (TRUNC (maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd' ), TO_CHAR (maturitydate, 'fmmm/dd/yy') ) mat, ism.amount, ism.bid price, st.descr FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.accttype = 'C' AND am.programid IS NULL UNION SELECT ism.issueid issueid, ism.programid programid, prodname prodname, ism.producttype, isr.issuerid issuerid, issuername issuername, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.shortname investorname, ism.traderid traderid, ism.status, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) tradedate, ism.originalsettlementdate settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, DECODE (TRUNC (settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd' ), TO_CHAR (settlementdate, 'fmmm/dd/yy') ) settlementdatestr, DECODE (TRUNC (maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd' ), TO_CHAR (maturitydate, 'fmmm/dd/yy') ) mat, ism.amount, ism.bid price, st.descr FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.programid IS NULL AND am.accttype = 'C' AND ism.maturitydate >= TRUNC (SYSDATE) UNION SELECT ism.issueid issueid, ism.programid programid, prodname prodname, ism.producttype, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) cassiinbr, am.shortname investorname, ism.traderid traderid, ism.status, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) tradedate, ism.settlementdate settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturityenddate, DECODE (TRUNC (settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd' ), TO_CHAR (settlementdate, 'fmmm/dd/yy') ) settledate, DECODE (TRUNC (maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd' ), TO_CHAR (maturitydate, 'fmmm/dd/yy') ) mat, ism.amount, ism.bid price, st.descr FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.accttype = 'C' AND am.programid IS NULL UNION SELECT ism.issueid issueid, ism.programid programid, prodname prodname, ism.producttype, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) cassiinbr, am.shortname investorname, ism.traderid traderid, ism.status, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) tradedate, ism.orgsettletdate settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, DECODE (TRUNC (settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd' ), TO_CHAR (settlementdate, 'fmmm/dd/yy') ) settledate, DECODE (TRUNC (maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd' ), TO_CHAR (maturitydate, 'fmmm/dd/yy') ) mat, ism.amount, ism.bid price, st.descr FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.accttype = 'C' AND am.programid IS NULL) p WHERE 1 = 1
sql.getIssuerCurrentHolderDetailsForInvestorFinal  = ORDER BY issuerName,     investorName,     prodName
#sql.getIssuerDetailsForCurrentHolder=SELECT DISTINCT p.issuerId,   p.issuerName,   SUM (p.amount) OVER (PARTITION BY p.issuerid ) issuerAmount,   SUM (p.amount) OVER ()grandTotal FROM   (SELECT ism.issueid issueId,     isr.issuerid issuerId,     issuerName,     ism.amount   FROM vw_cptradehistory_t ism,     fo_program_m isr,     fo_trader_books_m trb,     fo_product_m prd,     fo_tm_tradestatus_m st,     fo_accountmaster_m am   WHERE ism.programid   = isr.programid   AND prd.prodid        = isr.producttype   AND trb.bookid        = isr.defaultbookid   AND TRIM (ism.status) = st.statusid   AND ism.transtype     = '85'   AND st.status         = 'Y'   AND ism.status        = 'A'   AND subacctcassii    IS NULL   AND isr.status        = 'Y'   AND published         = 'Y'   AND ism.acctnbr       = am.acctnbr   AND am.status         = 'Y'   AND am.programid     IS NULL   UNION   SELECT ism.issueid issueId,     isr.issuerid issuerId,     issuername issuerName,    ism.amount       FROM vw_cdtradehistory_t ism,     fo_program_m isr,     fo_trader_books_m trb,     fo_product_m prd,     fo_tm_tradestatus_m st,     fo_accountmaster_m am   WHERE prd.prodid   = ism.producttype   AND ism.programid  = isr.programid   AND st.statusid    = TRIM (ism.status)   AND trb.bookid     = isr.defaultbookid   AND ism.acctnbr    = am.acctnbr   AND ism.status     = 'A'   AND subacctcassii IS NULL   AND st.status      = 'Y'   AND published      = 'Y'   AND am.status      = 'Y'   AND am.programid  IS NULL   )P ORDER BY issuername
#sql.getIssuerDetailsForCurrentHolder=SELECT DISTINCT p.issuerid, upper(p.issuername) issuername, SUM (p.amount) OVER (PARTITION BY p.issuerid) issueramount, SUM (p.amount) OVER () grandtotal FROM (SELECT isr.issuerid issuerid, isrm.countrycode countrycode, isr.issuername, ism.amount FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND am.accttype = 'C' AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, isrm.countrycode, isr.issuername issuername, ism.amount FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.accttype = 'C' AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, isrm.countrycode, isr.issuername issuername, ism.amount FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND am.accttype = 'C' AND am.programid IS NULL) p ORDER BY issuername
sql.getIssuerDetailsForCurrentHolder=SELECT DISTINCT p.issuerid,  upper(p.issuername) issuername,  nvl(currencycode,'USD')  currency, SUM (p.amount) OVER (PARTITION BY p.issuerid) issueramount,  SUM (p.amount) OVER () grandtotal FROM  (SELECT  isr.issuerid issuerid,    isrm.countrycode countrycode,    isr.issuername,    ism.amount,     (select currencycode from fo_currency_m where countrycode = isrm.countrycode and status = 'Y' and rownum=1) currencycode,ism.issueid, ism.prodid  FROM vw_cptradehistory_t ism,    fo_program_m isr,    fo_trader_books_m trb,    fo_product_m prd,    fo_tm_tradestatus_m st,    fo_accountmaster_m am,    fo_issuermaster_m isrm  WHERE ism.programid   = isr.programid  AND isr.issuerid      = isrm.issuerid  AND prd.prodid        = isr.producttype  AND trb.bookid        = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND isrm.countrycode  =    CASE      WHEN 'All' = ?      THEN isrm.countrycode      ELSE ?    END AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.transtype  = '85'  AND st.status      = 'Y'  AND ism.status     = 'A'  AND subacctcassii IS NULL  AND isr.status     = 'Y'  AND published      = 'Y'  AND ism.acctnbr    = am.acctnbr  AND am.status      = 'Y'  AND am.accttype    = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid  IS NULL  UNION  SELECT isr.issuerid issuerid,    isrm.countrycode,    isr.issuername issuername,    ism.amount,     (select currencycode from fo_currency_m where countrycode = isrm.countrycode and status = 'Y' and rownum=1) currencycode,ism.issueid,ism.prodid  FROM vw_cdtradehistory_t ism,    fo_program_m isr,    fo_trader_books_m trb,    fo_product_m prd,    fo_tm_tradestatus_m st,    fo_accountmaster_m am,    fo_issuermaster_m isrm  WHERE prd.prodid     = ism.producttype  AND ism.programid    = isr.programid  AND isr.issuerid     = isrm.issuerid  AND st.statusid      = TRIM (ism.status)  AND trb.bookid       = isr.defaultbookid  AND ism.acctnbr      = am.acctnbr  AND isrm.countrycode =    CASE      WHEN 'All' = ?      THEN isrm.countrycode      ELSE ?    END AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.status     = 'A'  AND subacctcassii IS NULL  AND st.status      = 'Y'  AND published      = 'Y'  AND am.status      = 'Y'  AND am.accttype    = 'C' and ISM.MATURITYDATE >= trunc(sysdate)  AND am.programid  IS NULL  UNION  SELECT   isr.issuerid issuerid,    isrm.countrycode,    isr.issuername issuername,    ism.amount,    (select currencycode from fo_currency_m where countrycode = isrm.countrycode and status = 'Y' and rownum=1) currencycode,ism.issueid,ism.prodid  FROM vw_tradehistory_t ism,    fo_program_m isr,    fo_trader_books_m trb,    fo_product_m prd,    fo_tm_tradestatus_m st,    fo_accountmaster_m am,    fo_issuermaster_m isrm  WHERE prd.prodid     = ism.producttype  AND ism.programid    = isr.programid  AND isr.issuerid     = isrm.issuerid  AND st.statusid      = TRIM (ism.status)  AND trb.bookid       = isr.defaultbookid  AND ism.acctnbr      = am.acctnbr  AND isrm.countrycode =    CASE      WHEN 'All' = ?      THEN isrm.countrycode      ELSE ?    END AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.status     = 'A'  AND subacctcassii IS NULL  AND st.status      = 'Y'  AND am.status      = 'Y'  AND am.accttype    = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid  IS NULL union SELECT  isr.issuerid issuerid,    isrm.countrycode countrycode,    isr.issuername,    ism.amount,     (select currencycode from fo_currency_m where countrycode = isrm.countrycode and status = 'Y' and rownum=1) currencycode,ism.issueid,ism.prodid  FROM vw_adntradehistory_t ism,    fo_program_m isr,    fo_trader_books_m trb,    fo_product_m prd,    fo_tm_tradestatus_m st,    fo_accountmaster_m am,    fo_issuermaster_m isrm  WHERE ism.programid   = isr.programid  AND isr.issuerid      = isrm.issuerid  AND prd.prodid        = isr.producttype  AND trb.bookid        = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND isrm.countrycode  =    CASE      WHEN 'All' = ?      THEN isrm.countrycode      ELSE ?    END AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.transtype  = '85'  AND st.status      = 'Y'  AND ism.status     = 'A'  AND subacctcassii IS NULL  AND isr.status     = 'Y'  AND published      = 'Y'  AND ism.acctnbr    = am.acctnbr  AND am.status      = 'Y'  AND am.accttype    = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid  IS NULL  ) p ORDER BY upper(issuername)
sql.getCountryIssuerDetailsForCurrentHolder=SELECT DISTINCT p.issuerid, upper(p.issuername) issuername, p.countrycode, SUM (p.amount) OVER (PARTITION BY p.issuerid) issueramount, SUM (p.amount) OVER (PARTITION BY p.countrycode) countryamount, SUM (p.amount) OVER () grandtotal FROM (SELECT ism.issueid issueid, isr.issuerid issuerid, isrm.countrycode countrycode, isr.issuername, ism.amount FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND am.accttype = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, isrm.countrycode, isr.issuername issuername, ism.amount FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.accttype = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, isrm.countrycode, isr.issuername issuername, ism.amount FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isrm.countrycode = CASE WHEN 'All' = ? THEN isrm.countrycode ELSE ? END AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND am.accttype = 'C' and ISM.MATURITYDATE >= trunc(sysdate) AND am.programid IS NULL) p ORDER BY upper(p.issuername)
sql.getInvestorDetailsForSelectedIssuer=SELECT DISTINCT p.investorid investorid, p.investorname investor, SUM (p.amount) OVER (PARTITION BY investorid) investoramount FROM (SELECT ism.issueid issueid, isr.issuerid issuerid, ism.producttype, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.shortname investorname, ism.amount FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND am.accttype = 'C' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, ism.producttype, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.shortname investorname, ism.amount FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.accttype = 'C' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, ism.producttype, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.shortname investorname, ism.amount FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND am.accttype = 'C' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, ism.producttype, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.shortname investorname, ism.amount FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND am.accttype = 'C' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL) p

# sql.getIssuerHisReportDetailsOne = SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt,    ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum    FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.orgsettletdate,'fmmm/dd'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate,'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, ism.offeryield, ism.bidyield, ism.minimumpiece, NVL (ism.price, 0) price, 0 bidyeild, '' dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid     AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = ? AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' 
# sql.getIssuerHisReportDetailsTwo = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.DISPSETTLEMENTDATE settlementdatestr,ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd, ism.DISPMATURITYDATE mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag, TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.transtype = ? AND TRIM (am.programid) IS NOT NULL AND ism.status NOT IN ('AT', 'AC')    AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND ism.maturitydateflag = 'N' 
# sql.getIssuerHisReportDetailsThree = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))) a, fo_up_product_d UP, fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' ORDER BY a.createddate DESC)

sql.getIssuerHistoryReportDataOne= SELECT   t.*, COUNT (*) OVER () AS cnt,ROW_NUMBER () OVER (ORDER BY t.createddate DESC) rnum	 FROM (  SELECT distinct a.* FROM (SELECT distinct ism.prodid, ism.programid, ism.issuenumber,isr.shortname isrshrtname, ism.issueid,ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker,ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,ism.traderacruedint, ism.offeryield, ism.bidyield, ism.minimumpiece, NVL (ism.price, 0) price,0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_issues_m ism,fo_program_m isr,fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st, fo_accountmaster_m am , fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND isr.issuerid = isrm.issuerid AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid 
sql.getIssuerHistoryReportDataTwo= AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'  AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION SELECT distinct ism.prodid, ism.programid, ism.issuenumber,isr.shortname isrshrtname, ism.issueid, ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'),  TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat, ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid,            NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield, 0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM vw_cptradehistory_t ism,fo_program_m isr,fo_trader_books_m trb,fo_product_m prd, fo_tm_tradestatus_m st,fo_accountmaster_m am,fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND isr.issuerid = isrm.issuerid 
sql.getIssuerHistoryReportDataThree= AND st.status = 'Y'	AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION  SELECT distinct ism.prodid, ism.programid, ism.issuenumber,isr.shortname isrshrtname, ism.issueid, ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.originalsettlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.originalsettlementdate,'fmmm/dd'),TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat, ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield,0 minimumpiece, ism.price, ism.bidyeild,TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM vw_cdtradehistory_t ism, fo_program_m isr,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am,fo_trader_books_m trb,fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND isr.issuerid = isrm.issuerid 
sql.getIssuerHistoryReportDataFour= AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y'   AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION  SELECT distinct ism.prodid, ism.programid, ism.issuenumber,isr.shortname isrshrtname, ism.issueid, ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip,ism.DISPSETTLEMENTDATE settlementdatestr,ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,ism.DISPMATURITYDATE mat,ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid,            NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag, TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild,TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM fo_cdissues_m ism,fo_program_m isr,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am, fo_trader_books_m trb ,fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isr.issuerid = isrm.issuerid 
sql.getIssuerHistoryReportDataFive= AND TRIM (am.programid) IS NOT NULL AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.status = 'Y' AND ism.maturitydateflag = 'N' AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))
sql.getIssuerHistoryReportDataSix = ) a, fo_up_product_d UP,fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' ORDER BY a.createddate DESC) t
sql.getIssuerHistoryReportDataADNBUY = UNION SELECT DISTINCT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1 ) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE (TRUNC (ism.orgsettletdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd' ), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) ) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest ), 0 ) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy' ) asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1 ) || ' ' || fn_decrypt (lastname, 1 ) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby )), 'N/A' ) traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, ism.offeryield, ism.bidyield, ism.minimumpiece, NVL (ism.price, 0) price, 0 bidyeild, '' dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND isr.issuerid = isrm.issuerid AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' AND (TRUNC (ism.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy') )
sql.getIssuerHistoryReportDataADNSELL = UNION SELECT DISTINCT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1 ) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE (TRUNC (ism.orgsettletdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd' ), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) ) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest ), 0 ) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy' ) asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1 ) || ' ' || fn_decrypt (lastname, 1 ) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby )), 'N/A' ) traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, 0 offeryield, bidyield, 0 minimumpiece, ism.price, 0 bidyeild, '' dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND isr.issuerid = isrm.issuerid AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy') )
sql.getIssuerHistoryReportDataFRBUY = UNION SELECT DISTINCT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1 ) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, '' settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) trd, '' mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest ), 0 ) moneyamt, '' asofdatestr, '' notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, '' SOURCE, '' rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1 ) || ' ' || fn_decrypt (lastname, 1 ) FROM fo_member_m WHERE loginid = NVL (ism.traderid, ism.createdby )), 'N/A' ) traderloginname, '' sploginid, '' sploginname, 0 offeringlimit, 0 minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy' ) dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND isr.issuerid = isrm.issuerid AND TRIM (am.programid) IS NOT NULL AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y' AND ism.refissueid <> '00000000' AND (TRUNC (ism.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy') )
sql.getIssuerHistoryReportDataFRSELL = UNION SELECT DISTINCT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1 ) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, '' settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) trd, '' mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest ), 0 ) moneyamt, '' asofdatestr, '' notes, ism.transtype, '' offerflag, ism.rootcusip, ism.issuetype, 0 rateflag, 0 amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, '' SOURCE, '' rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1 ) || ' ' || fn_decrypt (lastname, 1 ) FROM fo_member_m WHERE loginid = NVL (ism.traderid, ism.createdby )), 'N/A' ) traderloginname, '' sploginid, '' sploginname, 0 offeringlimit, 0 minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy' ) dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM vw_tradehistory_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb, fo_issuermaster_m isrm WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND isr.issuerid = isrm.issuerid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy') )

sql.getIssHistoryReportOne = SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum	FROM (SELECT isr.issuerid, ism.prodid, ism.programid, ism.issuenumber,  isr.shortname isrshrtname, ism.issueid,ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield,0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am ,fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype 	AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid	 AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y'  AND published = 'Y'  AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
sql.getIssHistoryReportTwo =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) 	UNION SELECT isr.issuerid,ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,  ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker,ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,	 am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE (TRUNC (ism.originalsettlementdate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.originalsettlementdate,'fmmm/dd'),		 TO_CHAR (ism.originalsettlementdate,		 'fmmm/dd/yy')) settlementdatestr,		 ism.createddate,				 DECODE (TRUNC (ism.createddate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.createddate,'fmmm/dd'),			 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,	 DECODE (TRUNC (ism.maturitydate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),									   		TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,	 ism.bid, ism.offer, ism.accruedinterest,	 NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag,	 ism.rootcusip, ism.issuetype, ism.rateflag,	 ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,	 ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,	 ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,		 ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid,		 isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag,	 '' subjectflag,TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate,						   		0 traderacruedint, 0 offeryield, 0 bidyield,	 0 minimumpiece, ism.price, ism.bidyeild,	 TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber				 FROM fo_cdissues_m ism,			 fo_program_m isr,				 fo_product_m prd,				 fo_tm_tradestatus_m st,				 fo_accountmaster_m am,				 fo_trader_books_m trb,fo_issuermaster_m isrm			 WHERE prd.prodid = ism.producttype		 AND ism.programid = isr.programid	AND isr.issuerid = isrm.issuerid AND st.statusid = TRIM (ism.status)  AND trb.bookid = isr.defaultbookid   AND ism.transtype = '10'  AND TRIM (am.programid) IS NOT NULL AND ism.acctnbr = am.acctnbr			 AND ism.status NOT IN ('AT', 'AC')		 AND subacctcassii IS NULL			 AND st.status = 'Y'				 AND published = 'Y' AND am.status = 'Y'  AND ism.maturitydateflag = 'N'
#sql.getIssHistoryReportThree =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))			   		) a,fo_up_product_d UP,				 fo_group_m g					 WHERE UP.loginid = '85992721'			 AND g.companyid = '43839171'			 AND g.prodid = a.prodid				 AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y'	 AND UP.status = 'Y' ORDER BY a.createddate DESC)
sql.getIssHistoryReportThree= AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) 	UNION SELECT isr.issuerid,ism.prodid, ism.programid, ism.issuenumber,  isr.shortname isrshrtname, ism.issueid,ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield,0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am ,fo_issuermaster_m isrm WHERE ism.programid = isr.programid AND isr.issuerid = isrm.issuerid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype 	AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid	 AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y'  AND published = 'Y'  AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
sql.getIssHistoryReportFour =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))			   		) a,fo_up_product_d UP,				 fo_group_m g					 WHERE UP.loginid = '85992721'			 AND g.companyid = '43839171'			 AND g.prodid = a.prodid				 AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y'	 AND UP.status = 'Y' 

sql.getInvHistoryReportOne = SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum	FROM (SELECT ism.prodid, ism.programid, ism.issuenumber,  isr.shortname isrshrtname, ism.issueid,ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield,0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype 	AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid	AND isr.issuerid = isrm.issuerid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y'  AND published = 'Y'  AND ism.acctnbr = am.acctnbr  AND am.status = 'Y'
sql.getInvHistoryReportTwo =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) 	UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,  ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker,ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,	 am.acctnbr, am.acctname, ism.producttype, ism.cusip, DECODE (TRUNC (ism.originalsettlementdate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.originalsettlementdate,'fmmm/dd'),		 TO_CHAR (ism.originalsettlementdate,		 'fmmm/dd/yy')) settlementdatestr,		 ism.createddate,				 DECODE (TRUNC (ism.createddate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR		 (ism.createddate,'fmmm/dd'),			 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,	 DECODE (TRUNC (ism.maturitydate, 'YYYY'),	 TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),									   		TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,	 ism.bid, ism.offer, ism.accruedinterest,	 NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag,	 ism.rootcusip, ism.issuetype, ism.rateflag,	 ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount,	 ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason,	 ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid, ism.sploginname, ism.offeringlimit,		 ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid,		 isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag,	 '' subjectflag,TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate,						   		0 traderacruedint, 0 offeryield, 0 bidyield,	 0 minimumpiece, ism.price, ism.bidyeild,	 TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber				 FROM vw_cdtradehistory_t ism,			 fo_program_m isr,				 fo_product_m prd,				 fo_tm_tradestatus_m st,				 fo_accountmaster_m am,				 fo_trader_books_m trb,  fo_issuermaster_m isrm				 WHERE prd.prodid = ism.producttype		 AND ism.programid = isr.programid			 AND st.statusid = TRIM (ism.status)  AND trb.bookid = isr.defaultbookid AND isr.issuerid = isrm.issuerid  AND ism.transtype = '85'  AND ism.acctnbr = am.acctnbr			 AND ism.status NOT IN ('AT', 'AC')		 AND subacctcassii IS NULL			 AND st.status = 'Y'				 AND published = 'Y' AND am.status = 'Y'
sql.getInvHistoryReportThree=AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) 	UNION SELECT ism.prodid, ism.programid, ism.issuenumber,  isr.shortname isrshrtname, ism.issueid,ism.refissueid,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,am.acctnbr, am.acctname, ism.producttype, ism.cusip,DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr,ism.createddate,DECODE (TRUNC (ism.createddate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'),TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'),TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,ism.bid, ism.offer, ism.accruedinterest,NVL ((amount * 1000 - accruedinterest), 0) moneyamt,TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,ism.notes, ism.transtype, ism.offerflag,ism.rootcusip, ism.issuetype, ism.rateflag,ism.amountflag, isr.countrycode, ism.dispbiddiscount,ism.dispbidyield, ism.dispofferdiscount,ism.dispofferyield, bookno, bookname, ism.status,prd.prodcode, ism.SOURCE, ism.rejectreason,ism.traderid, NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,ism.sploginname, ism.offeringlimit,ism.minimumpiecesize, ism.currencycode, isr.cptype,prd.prodname prodname, trb.bookid,isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,0 traderacruedint, 0 offeryield, bidyield,0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,TO_NUMBER (prd.sortorder) sortorder, isr.cassii,isr.masteracctnumber FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am, fo_issuermaster_m isrm WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype 	AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid	AND isr.issuerid = isrm.issuerid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y'  AND published = 'Y'  AND ism.acctnbr = am.acctnbr  AND am.status = 'Y'
sql.getInvHistoryReportFour =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))			   		) a,fo_up_product_d UP,				 fo_group_m g					 WHERE UP.loginid = '85992721'			 AND g.companyid = '43839171'			 AND g.prodid = a.prodid				 AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y'	 AND UP.status = 'Y' ORDER BY a.createddate DESC)

sql.getCusipHistoryReportOne = SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt,ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum	FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip,   DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR	 (ism.orgsettletdate,'fmmm/dd'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR   (ism.maturitydate,'fmmm/dd'),            TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,            NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname,ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, ism.proceedsflag,  ism.subjectflag,   TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate, 		 ism.traderacruedint, ism.offeryield, ism.bidyield,   ism.minimumpiece, NVL (ism.price, 0) price,  0 bidyeild, '' dateddate, 		 TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM fo_issues_m ism,   fo_program_m isr,   fo_trader_books_m trb,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am   WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y'   AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND isr.status = 'Y'   AND published = 'Y'   AND ism.acctnbr = am.acctnbr 		 AND am.status = 'Y'   AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
sql.getCusipHistoryReportTwo =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		UNION  		 SELECT ism.prodid, ism.programid, ism.issuenumber,   isr.shortname isrshrtname, ism.issueid, ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,   isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,  fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,  am.acctnbr, am.acctname, ism.producttype, ism.cusip,   DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),    		TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, 		 ism.createddate,   DECODE (TRUNC (ism.createddate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), 		 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,  DECODE (TRUNC (ism.maturitydate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), 		 TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,  ism.bid, ism.offer, ism.accruedinterest,  NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag,  ism.rootcusip, ism.issuetype, ism.rateflag,  ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, '' proceedsflag,  '' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,  0 traderacruedint, 0 offeryield, bidyield,  0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,   TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM vw_cptradehistory_t ism, 		 fo_program_m isr,   fo_trader_books_m trb,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am   WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid   AND st.status = 'Y'   AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND isr.status = 'Y'   AND published = 'Y'   AND ism.acctnbr = am.acctnbr 		 AND am.status = 'Y'   
sql.getCusipHistoryReportThree = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		UNION  		 SELECT ism.prodid, ism.programid, ism.issuenumber,   isr.shortname isrshrtname, ism.issueid, ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,   isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,  fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,  am.acctnbr, am.acctname, ism.producttype, ism.cusip,   DECODE  		 (TRUNC (ism.originalsettlementdate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.originalsettlementdate,'fmmm/dd'), TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy')) settlementdatestr, ism.createddate,   DECODE (TRUNC (ism.createddate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate,'fmmm/dd'), 		 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,  DECODE (TRUNC (ism.maturitydate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), 		 TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,  ism.bid, ism.offer, ism.accruedinterest,  NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag,  ism.rootcusip, ism.issuetype, ism.rateflag,  ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, '' proceedsflag,  '' subjectflag,TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate,		 0 traderacruedint, 0 offeryield, 0 bidyield,  0 minimumpiece, ism.price, ism.bidyeild,  TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate,   TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM vw_cdtradehistory_t ism, 		 fo_program_m isr,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am,   fo_trader_books_m trb   WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid 		 AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid  		 AND ism.acctnbr = am.acctnbr 		 AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND st.status = 'Y'   AND published = 'Y'   AND am.status = 'Y'    
sql.getCusipHistoryReportFour = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		UNION  		 SELECT ism.prodid, ism.programid, ism.issuenumber,   isr.shortname isrshrtname, ism.issueid, ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,   isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,  fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,  am.acctnbr, am.acctname, ism.producttype, ism.cusip,   ism.DISPSETTLEMENTDATE settlementdatestr,ism.createddate,  DECODE (TRUNC (ism.createddate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), 		 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,  ism.DISPMATURITYDATE mat,  ism.bid, ism.offer, ism.accruedinterest,  NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag,  ism.rootcusip, ism.issuetype, ism.rateflag,  ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, '' proceedsflag,'' subjectflag, 		 TO_CHAR (ism.originalsettlementdate,'fmmm/dd/yy') orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield,  0 minimumpiece, ism.price, ism.bidyeild,  TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate,   TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM fo_cdissues_m ism,   fo_program_m isr,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am,   fo_trader_books_m trb   WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid 		 AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND TRIM (am.programid) IS NOT NULL AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND st.status = 'Y'   AND published = 'Y'   AND am.status = 'Y'   AND am.status = 'Y'   AND ism.maturitydateflag = 'N'
sql.getCusipHistoryReportFive =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		) a,fo_up_product_d UP,   fo_group_m g  WHERE UP.loginid = ? 		 AND g.companyid = ?		 AND g.prodid = a.prodid   AND g.groupid = UP.groupid 	AND a.currencycode = g.currencycode AND g.status = 'Y'   AND UP.status = 'Y'  ORDER BY a.createddate DESC)
sql.getCusipHistoryReportsix =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		UNION  		 SELECT ism.prodid, ism.programid, ism.issuenumber,   isr.shortname isrshrtname, ism.issueid, ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate,   isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount,  fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr,  am.acctnbr, am.acctname, ism.producttype, ism.cusip,   DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.orgsettletdate,'fmmm/dd'),    		TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, 		 ism.createddate,   DECODE (TRUNC (ism.createddate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), 		 TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd,  DECODE (TRUNC (ism.maturitydate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), 		 TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat,  ism.bid, ism.offer, ism.accruedinterest,  NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag,  ism.rootcusip, ism.issuetype, ism.rateflag,  ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, '' proceedsflag,  '' subjectflag,TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate,  0 traderacruedint, 0 offeryield, bidyield,  0 minimumpiece, ism.price, 0 bidyeild, '' dateddate,   TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM vw_adntradehistory_t ism, 		 fo_program_m isr,   fo_trader_books_m trb,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am   WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid   AND st.status = 'Y'   AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND isr.status = 'Y'   AND published = 'Y'   AND ism.acctnbr = am.acctnbr 		 AND am.status = 'Y'   
sql.getCusipHistoryReportseven =AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy'))    		UNION  SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid,ism.refissueid,  TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.TICKER ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip,   DECODE(TRUNC (ism.orgsettletdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR	 (ism.orgsettletdate,'fmmm/dd'), TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy')) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy')) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR   (ism.maturitydate,'fmmm/dd'),            TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt,   TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr,   ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount,   ism.dispbidyield, ism.dispofferdiscount,  ism.dispofferyield, bookno, bookname, ism.status,   prd.prodcode, ism.SOURCE, ism.rejectreason,  ism.traderid,             NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (ism.sploginid, ism.createdby)),'N/A') traderloginname, ism.sploginid,   ism.sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype,   prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize,   NVL (incamount, 0) incamount, ism.proceedsflag,  ism.subjectflag,   TO_CHAR (ism.orgsettletdate,'fmmm/dd/yy') orgsettletdate, 		 ism.traderacruedint, ism.offeryield, ism.bidyield,   ism.minimumpiece, NVL (ism.price, 0) price,  0 bidyeild, '' dateddate, 		 TO_NUMBER (prd.sortorder) sortorder, isr.cassii,   isr.masteracctnumber   FROM fo_adn_issues_m ism,   fo_program_m isr,   fo_trader_books_m trb,   fo_product_m prd,   fo_tm_tradestatus_m st,   fo_accountmaster_m am   WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y'   AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL 		 AND isr.status = 'Y'   AND published = 'Y'   AND ism.acctnbr = am.acctnbr 		 AND am.status = 'Y'   AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
sql.getCusipHistoryFRTrade = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, '' settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, '' mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, '' asofdatestr, '' notes, ism.transtype, '' offerflag, ism.rootcusip, ism.issuetype, 0 rateflag, 0 amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, '' SOURCE, '' rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) FROM fo_member_m WHERE loginid = NVL (ism.traderid, ism.createdby)), 'N/A' ) traderloginname, '' sploginid, '' sploginname, 0 offeringlimit, 0 minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y'
sql.getCusipHistoryFRSale = AND (TRUNC (ism.createddate) BETWEEN TO_DATE(?,'fmmm/dd/yy')AND TO_DATE(?,'fmmm/dd/yy')) UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, '' settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, '' mat, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, '' asofdatestr, '' notes, ism.transtype, '' offerflag, ism.rootcusip, ism.issuetype, 0 rateflag, 0 amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, '' SOURCE, '' rejectreason, ism.traderid, NVL ((SELECT fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) FROM fo_member_m WHERE loginid = NVL (ism.traderid, ism.createdby)), 'N/A' ) traderloginname, '' sploginid, '' sploginname, 0 offeringlimit, 0 minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, 0 offeryield, 0 bidyield, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, TO_NUMBER (prd.sortorder) sortorder, isr.cassii, isr.masteracctnumber FROM vw_tradehistory_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y'

##sql.getForwardTradeProduct =  SELECT   a.producttype,prodname,DECODE (transtype, '10', 'B', 'S') transtype, amount,ABS (SUM (DECODE (transtype, '10', 1, -1) * amount) OVER (PARTITION BY prodname)) totalsize FROM (SELECT issueid, programid, refissueid, transtype, amount,producttype, settlementdate, maturitydate, bid FROM fo_issues_m ism WHERE ism.transtype = '10' AND ism.refissueid = '0000' AND ism.status = 'A' AND ism.settlementdate >= TRUNC (SYSDATE) UNION SELECT issueid, programid, refissueid, transtype, amount, producttype, settlementdate, maturitydate, bid FROM fo_cdissues_m ism WHERE ism.transtype = '10' AND ism.refissueid <> '0000' AND ism.status = 'A' AND maturitydateflag = 'M' AND ism.settlementdate >= TRUNC (SYSDATE) UNION SELECT issueid, programid, refissueid, transtype, amount, producttype, settlementdate, maturitydate, bid FROM vw_cdtradehistory_t t WHERE t.status = 'A' AND t.transtype = '85' AND t.settlementdate >= TRUNC (SYSDATE) UNION SELECT issueid, programid, refissueid, transtype, amount, producttype, settlementdate, maturitydate, bid FROM vw_cptradehistory_t t WHERE t.status = 'A' AND t.transtype = '85' AND t.settlementdate >= TRUNC (SYSDATE)) a, fo_program_m isr, fo_product_m prd WHERE a.programid = isr.programid AND a.producttype = prd.prodid ORDER BY prodname, transtype
sql.getForwardTradeProduct =  SELECT   a.producttype, prodname, ABS (SUM (DECODE (transtype, '10', 1, -1) * amount))  amount, ABS (SUM (DECODE (transtype, '10', 1, -1) * amount)) totalsize   FROM (SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM fo_issues_m ism          WHERE ism.transtype = '10'            AND ism.refissueid = '0000'            AND ism.status = 'A'            AND ism.settlementdate >= TRUNC (SYSDATE)   union SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM fo_adn_issues_m ism          WHERE ism.transtype = '10'            AND ism.refissueid = '0000'            AND ism.status = 'A'            AND ism.settlementdate >= TRUNC (SYSDATE)       UNION         SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM fo_cdissues_m ism          WHERE ism.transtype = '10'            AND ism.refissueid <> '0000'            AND ism.status = 'A'            AND maturitydateflag = 'M'            AND ism.settlementdate >= TRUNC (SYSDATE)         UNION         SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM vw_cdtradehistory_t t          WHERE t.status = 'A'            AND t.transtype = '85'            AND t.settlementdate >= TRUNC (SYSDATE)         UNION         SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM vw_cptradehistory_t t          WHERE t.status = 'A'            AND t.transtype = '85'            AND t.settlementdate >= TRUNC (SYSDATE) union  SELECT issueid, programid, refissueid, transtype, amount,                producttype, settlementdate, maturitydate, bid           FROM vw_adntradehistory_t t          WHERE t.status = 'A'            AND t.transtype = '85'            AND t.settlementdate >= TRUNC (SYSDATE)) a,        fo_program_m isr,        fo_product_m prd  WHERE a.programid = isr.programid  AND a.producttype = prd.prodid  group by a.producttype, prodname ORDER BY prodname

sql.getForwardTradeData = SELECT   a.producttype, isr.programid, prodname, isr.TICKER ticker, issuername,  bid AS price, settlementdate,   DECODE (TRUNC (settlementdate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR (settlementdate, 'fmmm/dd'), TO_CHAR (settlementdate, 'fmmm/dd/yy')) settlementdatestr,   maturitydate, DECODE (TRUNC (maturitydate, 'YYYY'),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR (maturitydate, 'fmmm/dd'),TO_CHAR (maturitydate, 'fmmm/dd/yy')) mat, DECODE (transtype, '10', 'B', 'S') transtype, amount  FROM (SELECT issueid, programid, refissueid, transtype, amount, producttype, settlementdate, maturitydate, bid     FROM fo_issues_m ism 	    WHERE ism.transtype = '10'       AND ism.refissueid = '0000'       AND ism.status = 'A' 	      AND ism.settlementdate >= TRUNC (SYSDATE)	 union SELECT issueid, programid, refissueid, transtype, amount, producttype, settlementdate, maturitydate, bid     FROM fo_adn_issues_m ism 	    WHERE ism.transtype = '10'       AND ism.refissueid = '0000'       AND ism.status = 'A' 	      AND ism.settlementdate >= TRUNC (SYSDATE)	  UNION     SELECT issueid, programid, refissueid, transtype, amount,          producttype, settlementdate, maturitydate, bid     FROM fo_cdissues_m ism         WHERE ism.transtype = '10'       AND ism.refissueid <> '0000'       AND ism.status = 'A'           AND maturitydateflag = 'M'       AND ism.settlementdate >= TRUNC (SYSDATE)       UNION     SELECT issueid, programid, refissueid, transtype, amount,          producttype, settlementdate, maturitydate, bid     FROM vw_cdtradehistory_t t     WHERE t.status = 'A'           AND t.transtype = '85'       AND t.settlementdate >= TRUNC (SYSDATE)       UNION     SELECT issueid, programid, refissueid, transtype, amount,          producttype, settlementdate, maturitydate, bid     FROM vw_cptradehistory_t t     WHERE t.status = 'A'           AND t.transtype = '85'       AND t.settlementdate >= TRUNC (SYSDATE) union SELECT issueid, programid, refissueid, transtype, amount,          producttype, settlementdate, maturitydate, bid     FROM vw_adntradehistory_t t     WHERE t.status = 'A'           AND t.transtype = '85'       AND t.settlementdate >= TRUNC (SYSDATE)) a,      fo_program_m isr,           fo_product_m prd  WHERE a.programid = isr.programid AND a.producttype = prd.prodid AND a.producttype=?  ORDER BY prodname, transtype
sql.getTraderBooks =SELECT distinct * from (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')
sql.getSupportTraderBooks =SELECT distinct * from (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid  AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid  AND trb.status = 'Y' AND mb.status = 'Y')
sql.getTraderBookIds =SELECT distinct bookid from (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')
sql.getSalesPersonBooks =SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROWNUM rnum FROM (SELECT p.*, fn_decrypt (q.loginname, 1) loginname FROM fo_sales_books_m p, fo_member_m q WHERE p.status = 'Y' AND p.salespersonid = q.loginid) a)
sql.getTradeHistoryDataOne = select * from (SELECT t.*,COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY t.createddate DESC) rnum FROM (SELECT   a.* FROM ( SELECT isr.programid programid, isr.issuername issuername, am.shortname shortname, isr.TICKER TICKER, prd.prodname prodname, prd.prodid prodid, trb.bookname bookname, ism.bid bid, ism.issueid, ism.refissueid, prd.prodcode, trb.bookid, ism.amount amount, fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate,'fmmm/dd'), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy')) settlementdate,ism.settle settle, DECODE (ism.maturitydate,ism.maturityenddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), TO_CHAR (ism.maturitydate,'fmmm/dd/yy')), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'),TO_CHAR (ism.maturityenddate, 'fmmm'), DECODE(TRUNC (ism.maturitydate,'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), TO_CHAR (ism.maturitydate,'fm/dd/yy')) || '-' || DECODE (TRUNC (ism.maturityenddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturityenddate, 'fmmm/dd'), TO_CHAR (ism.maturityenddate, 'fm/dd/yy')), DECODE (TRUNC (ism.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturitydate,'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')) || '-' || DECODE (TRUNC (ism.maturityenddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturityenddate,'fmmm/dd'), TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy')))) formatmatdate, ism.transtype, ism.issuetype, ism.createddate, ism.maxamount maxamount,ism.status, st.descr, isr.defaultbookid, ism.CURRENCYCODE CURRENCYCODE,(select fn_decrypt(firstname,1)|| ' '||fn_decrypt(lastname,1) from fo_member_m where loginid=ism.createdby) createdby FROM fo_issues_m ism,fo_program_m isr, fo_trader_books_m trb, fo_product_m prd,fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid	 AND ism.status = st.statusid AND ism.transtype = '10'  AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.ACCTNBR = am.ACCTNBR  and    SUBACCTCASSII is null    AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) 
sql.getTradeHistorySdate =   AND (TRUNC (isr.SETTLEMENTDATE) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy'))
sql.getTradeHistoryMdate =   AND (TRUNC (isr.MATURITYDATE) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy'))
sql.getTradeHistoryCdate =   AND (TRUNC (isr.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy'))
sql.getTradeHistoryPSdate =   AND (TRUNC (isr.SETTLEMENTDATE) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy'))
sql.getTradeHistoryPMdate =    AND (TRUNC (isr.MATURITYDATE) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy'))
sql.getTradeHistoryPCdate =   AND (TRUNC (isr.createddate) BETWEEN TO_DATE (?, 'fmmm/dd/yy') AND TO_DATE (?, 'fmmm/dd/yy')) 
sql.getTradeHistoryDataTwo = union SELECT isr.programid programid, isr.issuername issuername, am.shortname, isr.TICKER TICKER, prd.prodname prodname, prd.prodid prodid, trb.bookname bookname, ism.bid bid, ism.issueid, ism.refissueid, prd.prodcode, trb.bookid, ism.amount amount, fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, DECODE (TRUNC (ism.settlementdate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate,'fmmm/dd'), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy')) settlementdate,ism.settle settle, DECODE (ism.maturitydate,ism.maturityenddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy')), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), DECODE (TRUNC (ism.maturitydate, 'YYYY' ), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fm/dd/yy')) || '-' || DECODE (TRUNC (ism.maturityenddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturityenddate, 'fmmm/dd' ), TO_CHAR (ism.maturityenddate, 'fm/dd/yy' ) ), DECODE (TRUNC (ism.maturitydate, 'YYYY' ), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) || '-' || DECODE (TRUNC (ism.maturityenddate, 'YYYY' ),  TRUNC (SYSDATE, 'YYYY'), TO_CHAR(ism.maturityenddate, 'fmmm/dd' ), TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy'  ) ) ) ) formatmatdate, ism.transtype, ism.issuetype, ism.createddate, ism.maxamount maxamount,ism.status, st.descr, isr.defaultbookid, ism.CURRENCYCODE CURRENCYCODE,(select fn_decrypt(firstname,1)|| ' '||fn_decrypt(lastname,1) from fo_member_m where  loginid=ism.createdby) createdby FROM fo_cp_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_sales_books_m sb WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND sb.salespersonid = ism.sploginid AND ism.status = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.ACCTNBR = am.ACCTNBR  and    SUBACCTCASSII is null    AND am.status = 'Y' 
sql.getTradeHistoryDataThree = union SELECT isr.programid programid,ism.ISSUERNAME, am.shortname,ism.TICKER TICKER, prd.prodname prodname, prd.prodid prodid, trb.bookname bookname, isr.bid bid, isr.issueid, isr.refissueid, prd.prodcode, trb.bookid, isr.amount amount, fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr,DECODE (TRUNC (isr.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (isr.settlementdate,'fmmm/dd'),TO_CHAR (isr.settlementdate, 'fmmm/dd/yy')) settlementdate, isr.settle settle,DECODE (TRUNC (isr.maturitydate, 'YYYY'),TRUNC (SYSDATE, 'YYYY'), TO_CHAR (isr.maturitydate, 'fmmm/dd'), TO_CHAR (isr.maturitydate, 'fmmm/dd/yy')) formatmatdate,isr.transtype, 'I' issuetype, isr.createddate, isr.maxamount maxamount, isr.status, st.descr, ism.defaultbookid,isr.CURRENCYCODE CURRENCYCODE, (select fn_decrypt(firstname,1)|| ' '||fn_decrypt(lastname,1) from fo_member_m where loginid=isr.createdby) createdby  FROM fo_cd_trading_t isr,fo_program_m ism,fo_product_m prd,fo_tm_tradestatus_m st, fo_accountmaster_m am,fo_trader_books_m trb,fo_sales_books_m sb WHERE prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.programid = isr.programid AND st.statusid = isr.status  AND trb.bookid = ism.defaultbookid  AND sb.salespersonid = isr.sploginid AND isr.ACCTNBR = am.ACCTNBR and    SUBACCTCASSII is null    AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' 
sql.getTradeHistoryDataFour = union  SELECT isr.programid programid,ism.ISSUERNAME,am.shortname, ism.TICKER TICKER, prd.prodname prodname, prd.prodid prodid, trb.bookname bookname, isr.bid bid, isr.issueid, isr.refissueid,prd.prodcode, trb.bookid, isr.amount amount,  fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr,isr.DISPSETTLEMENTDATE settlementdate,    isr.settle settle, isr.DISPMATURITYDATE formatmatdate,isr.transtype, 'I' issuetype,isr.createddate, isr.maxamount maxamount, isr.status, st.descr, ism.defaultbookid,isr.CURRENCYCODE CURRENCYCODE,(select fn_decrypt(firstname,1)|| ' '||fn_decrypt(lastname,1)  from fo_member_m where loginid=isr.createdby) createdby FROM fo_cdissues_m isr, fo_program_m ism,fo_product_m prd,fo_tm_tradestatus_m st,fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.programid = isr.programid AND st.statusid = isr.status AND trb.bookid = ism.defaultbookid     AND isr.ACCTNBR = am.ACCTNBR AND TRIM (am.programid) IS NOT NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' and    SUBACCTCASSII is null  
sql.getTradeHistoryDataFive = ) a, fo_up_product_d UP,fo_group_m g WHERE UP.loginid = '85992721' and g.companyid = '43839171' AND g.prodid = a.prodid     AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' ORDER BY TICKER, settlementdate DESC)t 
sql.getProducts = SELECT DISTINCT p.prodid, p.parentid, p.dispprodname, p.prodcode, p.prodname,  g.groupid, g.currencycode, p.sortorder FROM fo_up_product_d UP, fo_product_m p, fo_group_m g  WHERE UP.loginid = '85992721' AND g.companyid = '43839171' AND g.prodid = p.prodid AND g.groupid = UP.groupid AND g.status = 'Y' AND UP.status = 'Y' AND p.status = 'Y' AND parentid NOT IN (SELECT prodid FROM fo_product_m) ORDER BY dispprodname ASC
sql.getEODPositionsReport = Select * from ( SELECT  a.issuername  customername,a.transtype, a.status,'' ticker, decode(trunc(a.SETTLEMENTDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(a.SETTLEMENTDATE,'fmmm/dd'), TO_CHAR (a.SETTLEMENTDATE, 'fmmm/dd/yy'))sdate,     decode(trunc(a.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(a.MATURITYDATE,'fmmm/dd'), TO_CHAR (a.MATURITYDATE, 'fmmm/dd/yy'))edate,    (a.MATURITYDATE - eoddate) daysleft,'Y' availabletoday,nvl(a.availabletoday ,0) loanavailable,a.bid, a.offer offerrate,         NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (a.sploginid, a.createdby)),'N/A') traderloginname FROM ( select * from (SELECT     pm.* ,''discount, 0 discountprice, isr.issuername FROM fo_program_m isr,fo_issues_m pm  WHERE pm.status in ('A','S')  AND pm.transtype = '10' and pm.programid = isr.programid and pm.MATURITYDATE > TO_DATE(?,'fmmm/dd/yy')  
sql.getEODPositionsReportOne =   START WITH pm.refissueid = '0000' CONNECT BY PRIOR pm.issueid = pm.refissueid) ORDER BY maturitydate,refissueid) a, fo_issues_eodbalance_d b WHERE eoddate = TO_DATE(?,'fmmm/dd/yy')  AND a.issueid = b.issueid)  where loanavailable <>0 GROUP BY   customername,  transtype, status,  ticker,  sdate,  edate, daysleft,  availabletoday, loanavailable, bid, offerrate,  traderloginname
sql.getEODPositionsReportTwo=  START WITH pm.refissueid = '0000' CONNECT BY PRIOR pm.issueid = pm.refissueid  union SELECT pm.* ,isr.issuername    FROM fo_program_m isr,fo_adn_issues_m pm WHERE pm.status    IN ('A','S') AND pm.transtype    = '10' AND pm.programid    = isr.programid AND pm.MATURITYDATE > TO_DATE(?,'fmmm/dd/yy')
sql.getEODPositionsReportthree =   START WITH pm.refissueid = '0000' CONNECT BY PRIOR pm.issueid = pm.refissueid) ORDER BY maturitydate,refissueid) a)  where loanavailable >0 GROUP BY   customername,  transtype, status,  ticker,  sdate,  edate, daysleft,  availabletoday, loanavailable, bid, offerrate,  traderloginname
sql.getEODPositionsReportToday = Select * from ( SELECT  a.issuername  customername,a.transtype, a.status,'' ticker, decode(trunc(a.SETTLEMENTDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(a.SETTLEMENTDATE,'fmmm/dd'), TO_CHAR (a.SETTLEMENTDATE, 'fmmm/dd/yy'))sdate,     decode(trunc(a.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(a.MATURITYDATE,'fmmm/dd'), TO_CHAR (a.MATURITYDATE, 'fmmm/dd/yy'))edate,    (a.MATURITYDATE - TO_DATE(?,'fmmm/dd/yy')) daysleft,'Y' availabletoday,nvl(a.availabletoday ,0) loanavailable,a.bid, a.offer offerrate,         NVL ((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = NVL (a.sploginid, a.createdby)),'N/A') traderloginname FROM ( select * from (SELECT     pm.* ,''discount, 0 discountprice, isr.issuername FROM fo_program_m isr,fo_issues_m pm  WHERE pm.status in ('A','S')  AND pm.transtype = '10' and pm.programid = isr.programid and pm.MATURITYDATE > TO_DATE(?,'fmmm/dd/yy')  
sql.getMetricsByVenueReportOne = SELECT DISTINCT COUNT(*)over(partition BY source,status)statuscnt,   COUNT(              *)over(partition BY source)cnt,   status,SUM(amount) over(partition BY source)amount,  source,   transtype,loginname FROM   (SELECT amount,     transtype,     trim(a.status) status,     trim(source)source,     a.createddate, (select fn_decrypt(loginname,1)loginname from fo_member_m m where m.loginid=a.createdby and m.status='Y')loginname  FROM vw_cptradehistory_t a,   fo_trader_books_m b,   fo_program_m c,   fo_product_m d,   fo_accountmaster_m e,   fo_tm_tradestatus_m f WHERE a.programid  =c.programid AND c.defaultbookid=b.bookid AND a.producttype  =d.prodid AND a.acctnbr      =e.acctnbr AND TRIM(a.status) = f.statusid AND a.status      IN ('A','R','P') AND TRUNC(a.createddate) BETWEEN TO_DATE(?,'mm/dd/yy') AND TO_DATE(?,'mm/dd/yy') 
sql.getMetricsByVenueReportTwo = SELECT amount, transtype, trim(a.status) status, trim(source)source, a.createddate,(select fn_decrypt(loginname,1)loginname from fo_member_m m where m.loginid=a.createdby and m.status='Y')loginname FROM  vw_cdtradehistory_t a, fo_trader_books_m b, fo_program_m c, fo_product_m d, fo_accountmaster_m e, fo_tm_tradestatus_m f WHERE a.programid  =c.programid AND c.defaultbookid=b.bookid AND a.producttype  =d.prodid AND a.acctnbr      =e.acctnbr AND TRIM(a.status) = f.statusid AND a.status      IN ('A','R','P') AND TRUNC(a.createddate) BETWEEN TO_DATE(?,'mm/dd/yy') AND TO_DATE(?,'mm/dd/yy')  
sql.getMetricsByVenueReportThree = SELECT amount, transtype, trim(a.status) status, trim(source)source, a.createddate,(select fn_decrypt(loginname,1)loginname from fo_member_m m where m.loginid=a.createdby and m.status='Y')loginname FROM fo_trading_t a , fo_trader_books_m b, fo_program_m c, fo_product_m d, fo_accountmaster_m e, fo_tm_tradestatus_m f WHERE a.programid  =c.programid AND c.defaultbookid=b.bookid AND a.producttype  =d.prodid AND a.acctnbr      =e.acctnbr AND TRIM(a.status) = f.statusid AND a.status      IN ('A','R','P') AND TRUNC(a.createddate) BETWEEN TO_DATE(?,'mm/dd/yy') AND TO_DATE(?,'mm/dd/yy')) WHERE 1=1 
sql.getMetricsByVenueReportFour = SELECT amount,     transtype,     trim(a.status) status,     trim(source)source,     a.createddate, (select fn_decrypt(loginname,1)loginname from fo_member_m m where m.loginid=a.createdby and m.status='Y')loginname  FROM vw_adntradehistory_t a,   fo_trader_books_m b,   fo_program_m c,   fo_product_m d,   fo_accountmaster_m e,   fo_tm_tradestatus_m f WHERE a.programid  =c.programid AND c.defaultbookid=b.bookid AND a.producttype  =d.prodid AND a.acctnbr      =e.acctnbr AND TRIM(a.status) = f.statusid AND a.status      IN ('A','R','P') AND TRUNC(a.createddate) BETWEEN TO_DATE(?,'mm/dd/yy') AND TO_DATE(?,'mm/dd/yy') 

sql.getCDProfitAndLossDeta = SELECT   t.issueid, programid, (originalamount* 1000)originalamount, dollarpx, currentbid,	      remainingdays, TO_CHAR (settlementdate, 'fmmm/dd/yy') settlementdate,	      TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate,	      NVL (currentamount*1000, 0) currentamount,	      ((currentamount - originalamount)*1000) sellamount,	      (NVL (accumulativeaccrued, 0)*1000) accumulativeaccrued, (NVL (accumulativereal, 0)*1000) accumulativereal,	      (NVL (accumulativeunreal, 0)*1000) accumulativeunreal, (markingpandl*1000)markingpandl,	      TO_CHAR (modifieddate, 'fmmm/dd/yy') modifieddate, (realizedpandlfromsell*1000)realizedpandlfromsell,	      (realunreal*1000)realunreal, 	      (accumulativeunreal+accumulativereal)*1000 accumulativerealunreal,count(*) over (order by modifieddate desc ) rn	      FROM fo_cdissues_tracking_d t	      WHERE transactiontype = 'E' AND issueid = ?	      ORDER BY settlementdate
sql.getCDBuyAndSell = SELECT  *  FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.ORIGINALSETTLEMENTDATE, 'fmmm/dd/yy') ORIGINALSETTLEMENTDATE ,  createddate,  TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate,  a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status,     a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount,  a.bid, 'B' AS transtype,  (SELECT distinct avgbid 	     FROM fo_cdissues_m     WHERE issueid = ?) avgbid, (SELECT distinct amount    FROM fo_cdissues_m     WHERE issueid = ?) totamt, (SELECT distinct bid     FROM fo_cdissues_m     WHERE issueid = ?) masterbid   FROM fo_cdissues_m a   WHERE a.status = 'A' AND a.refissueid = ?	  UNION  SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.ORIGINALSETTLEMENTDATE, 'fmmm/dd/yy') ORIGINALSETTLEMENTDATE,      createddate,  TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate,  b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status,  b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid FROM vw_cdtradehistory_t b WHERE b.status = 'A' AND b.refissueid = ? )  ORDER BY ORIGINALSETTLEMENTDATE,transtype
sql.getCPProfitAndLossDeta = SELECT   t.issueid, programid, (originalamount* 1000)originalamount, dollarpx, currentbid,	      remainingdays, TO_CHAR (settlementdate, 'fmmm/dd/yy') settlementdate,	      TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate,	      NVL (currentamount*1000, 0) currentamount,	      ((currentamount - originalamount)*1000) sellamount,	      (NVL (accretion, 0)*1000) accretion, (NVL (realized, 0)*1000) realized,	      (NVL (unrealized, 0)*1000) unrealized, (markingpandl*1000)markingpandl,	      TO_CHAR (modifieddate, 'fmmm/dd/yy') modifieddate, (realizedfromsell*1000)realizedfromsell,	      (realunreal*1000)realunreal, (accumulativeunreal*1000)accumulativeunreal,	      (accumulativereal*1000)accumulativereal,	      (accumulativeunreal+accumulativereal)*1000 accumulativerealunreal,count(*) over (order by modifieddate desc ) rn	      FROM fo_cpissues_tracking_d t	      WHERE transactiontype = 'E' AND issueid = ?	      ORDER BY settlementdate
sql.getCPBuyAndSell = SELECT  *      FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.orgsettletdate, 'fmmm/dd/yy') orgsettletdate ,   createddate,  TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate,   a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status,  a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount, a.bid, 'B' AS transtype, (SELECT avgbid FROM fo_issues_m WHERE issueid = ?) avgbid, (SELECT amount FROM fo_issues_m	  WHERE issueid = ?) totamt, (SELECT bid FROM fo_issues_m	 WHERE issueid = ?) masterbid  FROM fo_issues_m a	  WHERE a.status = 'A' AND a.refissueid = ?  UNION   SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, createddate,	 TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate, b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status, b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid  FROM vw_cptradehistory_t b  WHERE b.status = 'A' AND b.refissueid = ?) ORDER BY orgsettletdate,transtype

sql.getTimelineReportDailyOne= SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM ( DECODE (b.maturitydate, a.cdate, 1, 0)) OVER (PARTITION BY programid, a.cdate) reccount,  SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.cdate) amount, a.cdate, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid, 
sql.getTLRDailyOne =  isr.ticker, isr.shortname isrshrtname, ism.producttype, ism.maturitydate, amount, ism.currencycode FROM
sql.getTimelineReportDailyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st  WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND isr.producttype = ? AND ism.transtype = '85'
sql.getTimelineReporDailyThree =   ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' ) b,  (SELECT TO_DATE(?,?) + ROWNUM - 1 AS cdate  from dual connect by level <= 7  )a
sql.getTimelineReporDailyFour  =    order by a.cdate  )	  PIVOT ( min(cdate) , sum(amount) Amount , sum(reccount) amtcnt  
sql.getTimelineReporWeeklyOne= SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.wk) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0) ) OVER (PARTITION BY programid, a.wk) reccount, a.wk, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid,
sql.getTLRWeeklyOne    = isr.ticker, isr.shortname isrshrtname, ism.producttype,  TRUNC (ism.maturitydate, 'IW' ) maturitydate, amount, ism.currencycode FROM 
sql.getTimelineReporWeeklyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND isr.producttype = ? AND ism.transtype = '85'
sql.getTimelineReporWeeklyThree =  ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' 	)b,	  (SELECT cdate, to_char(cdate,'IW') WK	  from (SELECT TO_DATE(?,?) + ROWNUM - 1 AS cdate FROM all_objects WHERE ROWNUM <= 35 )  )a 
sql.getTimelineReporMonthlyOne=SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.cdate,b.ticker) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0) ) OVER (PARTITION BY programid, a.cdate,b.ticker) reccount, a.cdate, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid,b.ticker) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid,
sql.getTLRMonthlyOne  = isr.ticker, isr.shortname isrshrtname, ism.producttype,  TRUNC (ism.maturitydate, 'MM' ) maturitydate, amount, ism.currencycode FROM 
sql.getTimelineReporMonthlyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y'  AND subacctcassii IS NULL AND ism.status IN ('A')  AND isr.producttype = ? AND ism.transtype = '85'
sql.getTimelineReporMonthlyThree   =   ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' 	)b, (SELECT ADD_MONTHS(TRUNC(TO_DATE(?,?),'MM'),ROWNUM-1) cdate  from dual connect by level <= 6   )a 
sql.getTimelineReporMonthlyFour =   order by a.cdate  )	  PIVOT	 ( min(cdate) , sum(amount) Amount,sum(reccount) amtcnt 
sql.getTimelineReporQuarterlyOne=SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, a.cdate, a.mon, a.yr, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0)) OVER (PARTITION BY programid, a.qrt,b.ticker) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0)) OVER (PARTITION BY programid, a.qrt,b.ticker)    amountcnt, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0  )) OVER (PARTITION BY programid,b.ticker) grandtotal, qrt  FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid,  
sql.getTLRQuarterlyOne= isr.ticker, isr.shortname isrshrtname, ism.producttype, TRUNC (ism.maturitydate, 'MM') maturitydate, amount, ism.currencycode FROM 
sql.getTimelineReporQuarterlyTwo=fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A')  AND isr.producttype = ? AND ism.transtype = '85' 
sql.getTimelineReporQuarterlyThree  =  ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' )b, (SELECT cdate, TO_CHAR (cdate, 'Q') qrt,  TO_CHAR (cdate, 'Mon') mon, TO_CHAR (cdate, 'yyyy') yr	 FROM (SELECT ADD_MONTHS	  (TRUNC (TO_DATE (?, ?	 ),  'MM' ), ROWNUM - 1	  ) cdate FROM all_objects  WHERE ROWNUM <= 12)) a
  
  
sql.getMaturityForecastDailyOne= SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM ( DECODE (b.maturitydate, a.cdate, 1, 0)) OVER (PARTITION BY programid, a.cdate) reccount,  SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.cdate) amount, a.cdate, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid, ism.programid, isr.ticker, isr.shortname isrshrtname, ism.producttype, isr.issuername, ism.maturitydate, amount, ism.currencycode FROM
sql.getMaturityForecastDailyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st  WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND isr.producttype = ? AND ism.transtype = '85'
sql.getMaturityForecastDailyThree =   ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' ) b,  (SELECT TO_DATE(?,?) + ROWNUM - 1 AS cdate  from dual connect by level <= 7  )a
sql.getMaturityForecastDailyFour  =    order by a.cdate  )	  PIVOT ( min(cdate) , sum(amount) Amount , sum(reccount) amtcnt  
sql.getMaturityForecastWeeklyOne= SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.wk) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0) ) OVER (PARTITION BY programid, a.wk) reccount, a.wk, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid, ism.programid, isr.ticker, isr.shortname isrshrtname, ism.producttype, isr.issuername, TRUNC (ism.maturitydate, 'IW' ) maturitydate, amount, ism.currencycode FROM 
sql.getMaturityForecastWeeklyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND isr.producttype = ? AND ism.transtype = '85'
sql.getMaturityForecastWeeklyThree =  ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' 	)b,	  (SELECT cdate, to_char(cdate,'IW') WK	  from (SELECT TO_DATE(?,?) + ROWNUM - 1 AS cdate FROM all_objects WHERE ROWNUM <= 35 )  )a 
sql.getMaturityForecastMonthlyOne=SELECT * FROM (SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid, a.cdate) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0) ) OVER (PARTITION BY programid, a.cdate) reccount, a.cdate, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0) ) OVER (PARTITION BY programid) grandtotal FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid, ism.programid, isr.ticker, isr.shortname isrshrtname, ism.producttype, isr.issuername, TRUNC (ism.maturitydate, 'MM' ) maturitydate, amount, ism.currencycode FROM 
sql.getMaturityForecastMonthlyTwo= fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y'  AND subacctcassii IS NULL AND ism.status IN ('A')  AND isr.producttype = ? AND ism.transtype = '85'
sql.getMaturityForecastMonthlyThree   =   ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' 	)b, (SELECT ADD_MONTHS(TRUNC(TO_DATE(?,?),'MM'),ROWNUM-1) cdate  from dual connect by level <= 6   )a 
sql.getMaturityForecastMonthlyFour =   order by a.cdate  )	  PIVOT	 ( min(cdate) , sum(amount) Amount,sum(reccount) amtcnt 
sql.getMaturityForecastQuarterlyOne=SELECT DISTINCT b.prodid, b.issuername, b.ticker, b.programid, b.producttype, a.cdate, a.mon, a.yr, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0)) OVER (PARTITION BY programid, a.qrt) amount,SUM (DECODE (b.maturitydate, a.cdate, 1, 0)) OVER (PARTITION BY programid, a.qrt)    amountcnt, SUM (DECODE (b.maturitydate, a.cdate, b.amount, 0  )) OVER (PARTITION BY programid) grandtotal, qrt  FROM (SELECT DISTINCT tt.issueid, tt.prodid, tt.issuername, tt.ticker, tt.programid, tt.producttype, tt.maturitydate, tt.amount FROM (SELECT ism.issueid, ism.prodid, ism.programid, isr.ticker, isr.shortname isrshrtname, ism.producttype, isr.issuername, TRUNC (ism.maturitydate, 'MM') maturitydate, amount, ism.currencycode FROM 
sql.getMaturityForecastQuarterlyTwo=fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND ism.prodid = isr.producttype AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A')  AND isr.producttype = ? AND ism.transtype = '85' 
sql.getMaturityForecastQuarterlyThree  =  ) tt, fo_up_product_d UP, fo_group_m g WHERE  up.loginid = ? AND    g.companyid = ? AND    g.prodid = tt.prodid AND    g.groupid = up.groupid AND g.currencycode = tt.currencycode AND    g.status = 'Y' AND    up.status = 'Y' )b, (SELECT cdate, TO_CHAR (cdate, 'Q') qrt,  TO_CHAR (cdate, 'Mon') mon, TO_CHAR (cdate, 'yyyy') yr	 FROM (SELECT ADD_MONTHS	  (TRUNC (TO_DATE (?, ?	 ),  'MM' ), ROWNUM - 1	  ) cdate FROM all_objects  WHERE ROWNUM <= 12)) a
      
sql.getGridUploadReportData=SELECT UPLOADID, TO_CHAR (uploaddate, 'fmmm/dd/yy HH:MI:SS AM') uploaddate, FILENAME, (select fn_decrypt(m.loginname,1) from fo_member_m m where up.uploadedby = m.loginid)uploadedby, SOURCE, TIMESTAMP,RAWFILENAME, REASON, TOTALCNT, SUCCESSCNT, EXPCNT,case STATUS when 'Y' then  'Success' else 'Failure' end STATUS, case PRODUCTTYPE     when '2900' then  'Euro Commercial Paper' when '2200' then 'Euro Certificate of Deposits' end PRODUCTTYPE,EXCEPTIONFILE FROM fo_grid_upload_m up where  (TRUNC (uploaddate) BETWEEN TO_DATE (?,'fmmm/dd/yy') AND TO_DATE (?,'fmmm/dd/yy') )

sql.getCPBuyAndSellOne = SELECT  * FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.orgsettletdate, 'fmmm/dd/yy') orgsettletdate , a.createddate,a.cusip,fm.ISSUERNAME, trb.bookname,prd.prodname,ticker,a.availablecredit, TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate, a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status, a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount, a.bid, 'B' AS transtype,(SELECT sum(avgbid)  FROM fo_issues_m  WHERE issueid = ? ) avgbid,(SELECT sum(amount) FROM fo_issues_m  WHERE issueid = ? ) totamt,(SELECT sum(bid)  FROM fo_issues_m WHERE issueid = ? ) masterbid  FROM fo_issues_m a ,fo_product_m prd,fo_trader_books_m trb,  fo_program_m fm	  
sql.getCPBuyAndSellFinal = AND prd.prodid = a.producttype AND trb.BOOKID = fm.DEFAULTBOOKID   AND a.PROGRAMID = fm.PROGRAMID UNION    SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.orgsettletdate, 'fmmm/dd/yy') orgsettletdate,b.createddate,b.cusip,prg.ISSUERNAME, trab.bookname,pord.prodname,ticker,b.availablecredit,  TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate,  b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status,  b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,	                  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid  FROM vw_cptradehistory_t b ,fo_product_m pord,  fo_trader_books_m trab,  fo_program_m prg   WHERE b.status = 'A' AND b.refissueid = ? AND pord.prodid = b.producttype	 AND trab.BOOKID = prg.DEFAULTBOOKID AND b.PROGRAMID = prg.PROGRAMID)  ORDER BY orgsettletdate,transtype
sql.getCPBuyAndSellThree = WHERE a.status = 'A' AND a.refissueid = '0000'  AND a.issuetype = 'F'	 and a.issueid=?
sql.getCPBuyAndSellFour  =  WHERE a.status = 'A' AND a.refissueid = ?
sql.getCDBuyAndSellOne = SELECT  * FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.ORIGINALSETTLEMENTDATE, 'fmmm/dd/yy') ORIGINALSETTLEMENTDATE ,  a.createddate,a.cusip,fm.ISSUERNAME, trb.bookname,prd.prodname,ticker,a.availablecredit,TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate, a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status,a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount,  a.bid, 'B' AS transtype,(SELECT distinct avgbid FROM fo_cdissues_m  WHERE issueid = ?) avgbid,  (SELECT distinct amount FROM fo_cdissues_m WHERE issueid = ?) totamt,  (SELECT distinct bid	 FROM fo_cdissues_m  WHERE issueid = ?) masterbid   FROM fo_cdissues_m a ,fo_product_m prd, fo_trader_books_m trb,  fo_program_m fm 
sql.getCDBuyAndSellFinal = AND prd.prodid = a.producttype AND trb.BOOKID = fm.DEFAULTBOOKID  AND a.PROGRAMID = fm.PROGRAMID          UNION  SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.ORIGINALSETTLEMENTDATE, 'fmmm/dd/yy') ORIGINALSETTLEMENTDATE,b.createddate,b.cusip,prg.ISSUERNAME, trab.bookname,pord.prodname,ticker,b.availablecredit, TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate,	 b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status,  b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid            FROM vw_cdtradehistory_t b            ,fo_product_m pord, fo_trader_books_m trab,  fo_program_m prg  WHERE b.status = 'A' AND b.refissueid = ?  AND pord.prodid = b.producttype  AND trab.BOOKID = prg.DEFAULTBOOKID AND b.PROGRAMID = prg.PROGRAMID	 )	 ORDER BY ORIGINALSETTLEMENTDATE,transtype
sql.getCDBuyAndSellTwo  =  WHERE	a.status = 'A' and a.issueid=? and maturitydateflag='M'
sql.getCDBuyAndSellThree = WHERE a.status = 'A' AND a.refissueid = ? 
sql.geInvestorCurrentHolderData=SELECT DISTINCT p.investorid, p.investorname investor, SUM (p.amount) OVER (PARTITION BY p.investorid) investoramount, SUM (p.amount) OVER () grandtotal FROM (SELECT ism.issueid, ism.programid, prodname, isr.issuername, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.acctname investorname,ism.prodid FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND am.status = 'Y'  AND ism.maturitydate >= TRUNC(sysdate) AND am.programid IS NULL UNION SELECT ism.issueid, ism.programid, prodname, isr.issuername, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.acctname investorname,ism.prodid FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND am.accttype = 'C' AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y'  AND ism.maturitydate >= TRUNC(sysdate) AND am.programid IS NULL UNION SELECT ism.issueid, ism.programid, prodname, isr.issuername, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.acctname investorname,ism.prodid FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND am.accttype = 'C' AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y'  AND ism.maturitydate >= TRUNC(sysdate) AND am.programid IS NULL union SELECT ism.issueid, ism.programid, prodname, isr.issuername, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) investorid, am.acctname investorname,ism.prodid FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.prodid = CASE WHEN 'All' = ? THEN ism.prodid ELSE ?  END AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND am.status = 'Y'  AND ism.maturitydate >= TRUNC(sysdate) AND am.programid IS NULL ) p ORDER BY investorname
sql.getIssuerDetailsForSelectedInvestor=SELECT DISTINCT p.issuerid, p.issuername issuername, p.investorid, SUM (p.amount) OVER (PARTITION BY issuerid) issueramount FROM (SELECT ism.issueid issueid, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) investorid, ism.amount, ism.producttype FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) investorid, ism.amount, ism.producttype FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) investorid, ism.amount, ism.producttype FROM vw_tradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND ism.status = 'A' AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL UNION SELECT ism.issueid issueid, isr.issuerid issuerid, issuername, fn_decrypt (am.cassiiacctnbr, 1) investorid, ism.amount, ism.producttype FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status = 'A' AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.accttype = 'C' AND am.status = 'Y' AND ism.maturitydate >= TRUNC (SYSDATE) AND am.programid IS NULL) p
sql.getCommonProductIssuerDetails =SELECT  distinct  f.issuerid , f.issuername,f.issuertotamount, positionlimit, threshold,f.producttype FROM (SELECT t.*, SUM (t.amount) OVER (PARTITION BY t.issuerid, t.programid, t.producttype) issuertotamount, SUM (t.amount) OVER (PARTITION BY t.programid, t.producttype) inventoryamount, SUM (t.amount) OVER (PARTITION BY t.programid) issueramount FROM (
sql.getCommonProductIssuerDetailsFinal  =  ) t) f, fo_issuermaster_m climt WHERE climt.issuerid(+) = f.issuerid ORDER BY f.producttype
sql.getCPECPProductIssuerDetails = SELECT DISTINCT  isr.producttype, ism.programid, issuerid,   isr.issuername, ism.amount FROM fo_issues_m ism, fo_program_m isr, fo_product_m prd,  fo_accountmaster_m am WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND ism.transtype = '10'  AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getCDECDProductIssuerDetails = SELECT DISTINCT  isr.producttype, ism.programid, issuerid,   isr.issuername, ism.amount FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.producttype NOT IN ('2400', '2700') AND ism.maturitydateflag = 'M' AND ism.refissueid <> '0000'  AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getFCPFCDProductIssuerDetails = SELECT DISTINCT  isr.producttype, ism.programid, issuerid,   isr.issuername,  ism.amount FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.status = 'A'  AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)
 sql.getADNProductReportDataOne = SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,    ism.amount, (SELECT prodname FROM fo_product_m WHERE prodid = isr.producttype AND parentid = '0000') prodname FROM fo_adn_issues_m ism, fo_program_m isr, fo_product_m prd,  fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A')  AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)  
sql.getADNProductIssuerDetails = SELECT DISTINCT isr.producttype, ism.programid,issuerid, isr.issuername, ism.amount FROM fo_adn_issues_m  ism,fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)
sql.getCommonissuerProgramDetails = SELECT  distinct   ticker,f.issueramount,  f.producttype,f.issuerid FROM (SELECT t.*, SUM (t.amount) OVER (PARTITION BY t.issuerid, t.programid, t.producttype) issuertotamount, SUM (t.amount) OVER (PARTITION BY t.programid, t.producttype) inventoryamount, SUM (t.amount) OVER (PARTITION BY t.programid) issueramount FROM (
sql.getissuerProgramDetailsOne = SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,    ism.amount FROM fo_issues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A') AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getissuerProgramDetailsTwo =  SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,    ism.amount FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd,  fo_accountmaster_m am  WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.producttype NOT IN ('2400', '2700') AND ism.maturitydateflag = 'M'  AND ism.refissueid <> '0000' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getissuerProgramDetailsThree =   SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,     ism.amount FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y'  AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getCommonProgramProductDetails = SELECT  distinct   prodname,inventoryamount, f.producttype,f.issuerid FROM (SELECT t.*, SUM (t.amount) OVER (PARTITION BY t.issuerid, t.programid, t.producttype) issuertotamount, SUM (t.amount) OVER (PARTITION BY t.programid, t.producttype) inventoryamount, SUM (t.amount) OVER (PARTITION BY t.programid) issueramount FROM (
sql.getCommonProgramProductDetailsFinal = ) t) f, fo_issuermaster_m climt WHERE climt.issuerid(+) = f.issuerid ORDER BY f.producttype
sql.getProgramProductDetailsOne = SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,    ism.amount, (SELECT prodname FROM fo_product_m WHERE prodid = isr.producttype AND parentid = '0000') prodname FROM fo_issues_m ism, fo_program_m isr, fo_product_m prd,  fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND ism.status IN ('A')  AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)  
sql.getProgramProductDetailsTwo = SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,    ism.amount, (SELECT prodname FROM fo_product_m WHERE prodid = isr.producttype AND parentid = '0000') prodname FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.producttype NOT IN ('2400', '2700') AND ism.maturitydateflag = 'M' AND ism.refissueid <> '0000' AND ism.transtype = '10'  AND ism.maturitydate > TRUNC (SYSDATE)
sql.getProgramProductDetailsThree =  SELECT DISTINCT  isr.producttype, ism.programid, isr.ticker, issuerid,     ism.amount, (SELECT prodname FROM fo_product_m WHERE prodid = isr.producttype AND parentid = '0000') prodname FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)  
sql.getCommonProductData = SELECT tradedate,settlementdate, maturitydate, amount, price,  cusip FROM (SELECT t.*  FROM (
sql.getCommonProductDataFinal  =   ) t) f, fo_issuermaster_m climt  WHERE climt.issuerid(+) = f.issuerid ORDER BY f.producttype
sql.getProductDataOne = SELECT DISTINCT  isr.producttype, ism.programid, issuerid,  DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) tradedate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.bid price,   ism.cusip,   ism.amount FROM fo_issues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype  AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y'  AND published = 'Y'  AND subacctcassii IS NULL AND ism.status IN ('A') AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)
sql.getProductDataTwo =  SELECT DISTINCT  isr.producttype, ism.programid, issuerid,  DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) tradedate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.bid price,   ism.cusip,   ism.amount FROM fo_cdissues_m ism, fo_program_m isr,  fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.producttype NOT IN ('2400', '2700') AND ism.maturitydateflag = 'M' AND ism.refissueid <> '0000' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getProductDataThree =  SELECT DISTINCT   isr.producttype, ism.programid, issuerid, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) tradedate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.bid price,   ism.cusip,   ism.amount FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) 
sql.getDepartmentBooks = select traderid, fn_decrypt(m.loginname, 1) tradername, bookid, bookname, description, bookcode, bookno, department, prodid from fo_trader_books_m trb, fo_member_m m where m.LOGINID = trb.TRADERID 
sql.getADNIssuerProgramDetails  = SELECT DISTINCT  isr.producttype, ism.programid, issuerid,  DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy' ) ) tradedate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.bid price,   ism.cusip,   ism.amount FROM fo_adn_issues_m ism, fo_program_m isr, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype  AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y'  AND published = 'Y'  AND subacctcassii IS NULL AND ism.status IN ('A') AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)
################################################################################################################
----------------------------------------------------- User Authentication ---------------------------------------------------
################################################################################################################


sql.getMemberDetails=SELECT m.companyid, m.roletypeid, fn_decrypt(loginname,1) loginname, m.membercatid, u.description, c.companycatid, m.loginid, r.roledesc, m.jpmsid, to_char(m.passwordexpdate,c.dbdateformat) passwordexpdate, fn_decrypt(firstname,1) firstname, fn_decrypt(middlename,1) middlename, fn_decrypt(lastname,1) lastname, language, locale, m.seeotherstrades, m.DEFAULTBOOKID FROM FO_MEMBER_M m, FO_COMPANY_M c, FO_USERCATEGORY_M u, FO_ROLETYPES_M r WHERE m.companyid=c.companyid AND r.roletypeid=m.roletypeid AND upper(fn_decrypt(m.loginname,1)) = upper(?) AND m.password = ? AND m.membercatid=u.membercatid AND m.status = ?

################################################################################################################
----------------------------------------------------- Common data points ---------------------------------------------------
################################################################################################################
sql.getSocialCodesMap = SELECT  distinct socialid, DESCRIPTION FROM FO_SOCIALCODES_M	where status='Y'  ORDER BY DESCRIPTION
sql.getCusipMap=SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum	FROM (SELECT ism.prodid, ism.programid,ism.cusip,ism.createddate  FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype  AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S'))  AND ism.tradingflag = 'N' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('10/13/20','fmmm/dd/yy')AND TO_DATE('12/24/20','fmmm/dd/yy')) 	    UNION  SELECT ism.prodid, ism.programid, ism.cusip,ism.createddate FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid  AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype  AND trb.bookid = isr.defaultbookid  AND TRIM (ism.status) = st.statusid  AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC')  AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('10/13/20','fmmm/dd/yy')AND TO_DATE('12/24/20','fmmm/dd/yy')) 	    UNION  SELECT ism.prodid, ism.programid,  ism.cusip,ism.createddate FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC')	AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('10/13/20','fmmm/dd/yy')AND TO_DATE('12/24/20','fmmm/dd/yy')) 	    UNION  SELECT ism.prodid, ism.programid,  ism.cusip,	ism.createddate FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND TRIM (am.programid) IS NOT NULL AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND am.status = 'Y' AND ism.maturitydateflag = 'N' AND (TRUNC (ism.createddate) BETWEEN TO_DATE('10/13/20','fmmm/dd/yy')AND TO_DATE('12/24/20','fmmm/dd/yy'))	 ) a,fo_up_product_d UP, fo_group_m g	 WHERE UP.loginid = '85992721' AND g.companyid = '43839171' AND g.prodid = a.prodid AND g.currencycode = a.currencycode AND g.groupid = UP.groupid AND g.status = 'Y' AND UP.status = 'Y' ORDER BY a.createddate DESC)

sql.getInvestors = select acctname,ACCTNBR from fo_accountmaster_m where status = 'Y' and accttype='C' and programid is null ORDER BY   SHORTNAME    asc 

sql.getIssuersMap = SELECT issuerid, UPPER (issuername) issuername FROM FO_ISSUERMASTER_M WHERE status = 'Y' order by issuername ASC

sql.getInventoryMap = select pr.PRODCODE, issueid,  p.programid, p.ticker, iss.DISPMATURITYDATE,             concat(concat(concat(concat(concat(p.ticker, ' '), pr.PRODCODE), ' '), iss.DISPMATURITYDATE), ' ') issname from fo_cdissues_m iss,   	       fo_program_m p, fo_product_m pr	  	       where p.PROGRAMID = ?	              and p.programid = iss.programid	  	       and pr.prodid = iss.producttype	  	      and iss.MATURITYDATEFLAG='M'	  	       AND iss.producttype = ?			       AND iss.status = 'A'

sql.getInventoryMap1 = select pr.PRODCODE, issueid,  p.programid, p.ticker, iss.DISPMATURITYDATE,             concat(concat(concat(concat(concat(p.ticker, ' '), pr.PRODCODE), ' '), iss.DISPMATURITYDATE), ' ') issname from     	       fo_program_m p, fo_product_m pr,
sql.getInventoryMap2 = and p.programid = iss.programid and pr.prodid = iss.producttype	 AND iss.status = 'A' 	
sql.getInventoryMap3 = and p.programid = iss.programid	  	       and pr.prodid = iss.producttype AND iss.status = 'A'

sql.getCurrency      = SELECT CURRENCYCODE,CURRENCYNAME  FROM   fo_currency_m  WHERE  status= 'Y' ORDER  BY CURRENCYNAME

sql.getYears        =  SELECT distinct GROUPID,  YEAR  FROM fo_holiday_m WHERE  groupid= ?

sql.getProductParameterDetailsMap = SELECT p.prodid, p.groupid, g.companyid, trading_starttime, trading_endtime,  TIME_ZONE, amount_decimals, rate_decimals,VARIABLE_RATE,DAY_BASIS FROM fo_productparameter_new_m p, fo_group_m g WHERE p.groupid = g.groupid AND g.status = 'Y'
sql.getTickersMap = SELECT  DISTINCT a.programid,  UPPER(a.ISSUERNAME) ISSUERNAME,UPPER(a.shortname) shortname,UPPER(a.TICKER) TICKER,UPPER(a.BBTICKER) TICKER,UPPER(a.TWTICKER) TWTICKER,cassii FROM fo_program_m a  WHERE   a.status = 'Y'  AND PRODUCTTYPE IN (             SELECT DISTINCT g.prodid          FROM fo_up_product_d u, fo_group_m g         WHERE  g.groupid = u.groupid           AND g.status = 'Y'           AND u.status = 'Y') 
sql.getParentIssuerMap = SELECT   issuerid, UPPER (issuername) issuername  FROM fo_issuermaster_m WHERE status = 'Y' ORDER BY issuername ASC
sql.checkValidIssuerMasterAcct = SELECT REFACCTNBR FROM FO_MASTERACCOUNTS_M WHERE upper(REFACCTNBR) = upper(?)  and status='Y'	and accttypeid='I'
sql.checkValidInvestorMasterAcct = SELECT REFACCTNBR FROM FO_MASTERACCOUNTS_M WHERE upper(REFACCTNBR) = upper(?)  and status='Y'	and accttypeid='C'
sql.checkValidIssuerAcct = select issuerid,UPPER(ISSUERNAME) ISSUERNAME,UPPER(ISSUERCODE) ISSUERCODE,ISSUERACCOUNT , MASTERACCOUNT from fo_issuermaster_m  where status ='Y'
sql.checkValidSubAcct   = SELECT UPPER (acctname) acctname, acctnbr, UPPER (shortname) shortname, NVL (UPPER (fn_decrypt (cassiiacctnbr, 1)), UPPER (fn_decrypt (subacctcassii, 1))) cassiiacctnbr, NVL (UPPER (fn_decrypt (subacctcassii, 1)), UPPER (fn_decrypt (cassiiacctnbr, 1))  ) subacctcassii, spn, defaultacct  FROM fo_accountmaster_m  WHERE status = 'Y'
sql.checkValidSubAcctName = SELECT UPPER (acctname) acctname, acctnbr, UPPER (shortname) shortname, NVL (UPPER (fn_decrypt (cassiiacctnbr, 1)), UPPER (fn_decrypt (subacctcassii, 1))) cassiiacctnbr, NVL (UPPER (fn_decrypt (subacctcassii, 1)), UPPER (fn_decrypt (cassiiacctnbr, 1))  ) subacctcassii, spn, defaultacct  FROM fo_accountmaster_m  WHERE status = 'Y'
sql.checkValidSubAcctShortName =  SELECT UPPER (acctname) acctname, acctnbr, UPPER (shortname) shortname, NVL (UPPER (fn_decrypt (cassiiacctnbr, 1)), UPPER (fn_decrypt (subacctcassii, 1))) cassiiacctnbr, NVL (UPPER (fn_decrypt (subacctcassii, 1)), UPPER (fn_decrypt (cassiiacctnbr, 1))  ) subacctcassii, spn, defaultacct  FROM fo_accountmaster_m  WHERE status = 'Y'
sql.checkValidIssuerCode  =  SELECT issuerid, UPPER (issuername) issuername, UPPER (issuercode) issuercode,issueraccount, masteraccount FROM fo_issuermaster_m  WHERE status = 'Y'
sql.getProgramCurrencyMap =  SELECT DISTINCT c.currencycode FROM fo_issuercurrency_d a, fo_currency_m c WHERE c.currencycode = a.currencycode AND c.status = 'Y'	
sql.getTraderBooksList =SELECT bookid,bookname FROM fo_trader_books_m WHERE status = 'Y'
sql.getDeskWeekEnds=SELECT dayid, groupid FROM fo_pr_holiday_m ORDER BY groupid
sql.getSubProducts= SELECT  DISTINCT b.prodid,    b.prodname ,    a.groupid,     a.currencycode , b.cusip FROM   fo_group_m a,    (SELECT prodid,     prodname,    parentid ,cusip    FROM fo_product_m   WHERE level<>1    AND status ='Y'    AND level= (    SELECT MAX(LEVEL)    FROM fo_product_m    WHERE status ='Y'    START WITH prodid = ?   CONNECT BY PRIOR prodid = parentid   )    START WITH prodid = ?   CONNECT BY PRIOR prodid = parentid  ) b      WHERE a.prodid = b.prodid    AND  a.companyid = ?     AND  b.parentid <> '0000'    AND  a.status = 'Y'
sql.getProductProgramMap =  SELECT programid, UPPER (p.issuername) issuername FROM fo_program_m p, fo_issuermaster_m s WHERE p.status = 'Y' AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (p.issuerid))
sql.getCPECPMCPSecurityDetailsOne =  SELECT ism.issueid, ism.refissueid, isr.programid, isr.maxnofdays, isr.issuername, isr.ticker ticker, isr.shortname isrshrtname, isr.cptype, isr.countrycode, '' voiceinvestor, '' voicetrade, TO_CHAR (avgbid) avgbid, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, ism.prodid, ism.issuenumber, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid), ism.traderid) traderloginname, ism.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid),ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, gridissueid, 0 retainedincome, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder, NVL ( ( (amount * 1000) * (TRUNC (ism.maturitydate) - ism.prevpaymentdate) * NVL (ism.bid, 0) ) / (100 * 360), 0 ) todaynetamt, TO_CHAR (ism.prevpaymentdate, 'fmmm/dd/yy') offerprevpaymentdate, 0 todayaccruedinterest FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('M', 'A', 'S', 'P', 'W', 'R', 'C', 'E') AND published = 'Y'
sql.getCPECPMCPSecurityDetailsTwo = SELECT ism.issueid, ism.refissueid, isr.programid, isr.maxnofdays, isr.issuername, isr.ticker ticker, isr.shortname isrshrtname, isr.cptype, isr.countrycode, ism.voiceinvestor, ism.voicetrade, '' avgbid, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, ism.prodid, ism.issuenumber, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid), ism.traderid) traderloginname, ism.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid),ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, '' gridissueid, 0 retainedincome, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder, NVL ( ( (amount * 1000) * (TRUNC (ism.maturitydate) - ism.orgsettletdate) * NVL (ism.bid, 0) ) / (100 * 360), 0 ) todaynetamt, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') offerprevpaymentdate, 0 todayaccruedinterest FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('M', 'A', 'S', 'P', 'W', 'R', 'C', 'E') AND published = 'Y'
#sql.getCPECPMCPSecurityProgramDetails = SELECT distinct  i.programid, issuerid, calendartype, programacronym, issuername, i.ticker, bbticker, twticker, cassii, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, p.prodname product, i.producttype, p.prodcode, REPLACE (TRANSLATE (INITCAP (UPPER (prodname)), ' abcdefghijklmnopqrstuvwxyz', ' ' ), ' ' ) prodname, issuertype, cptype, i.traderid, sectraderid, othertraderids, defaultbookid, maxnofdays, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, coupon, spread, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, TO_CHAR (i.modifieddate, 'fmmm/dd/yy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'fmmm/dd/yy') createddate, i.createdby, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, b.bookno, b.bookcode, b.bookname descr, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap,IPA_NAME ipaname,decode(industry,'I1','Bank/Finance','I2','Govt','I3','Industrial')industryname,ism.cusip FROM fo_program_m i, fo_product_m p, fo_trader_books_m b,FO_IPA_DATA ip,fo_issues_m  ism WHERE i.defaultbookid = b.bookid AND i.producttype = p.prodid AND i.IPA_NUMBER = ip.IPA_ID AND ism.programid = i.programid AND p.status = 'Y' AND i.status = 'Y' AND b.status = 'Y' 
#sql.getADNSecurityProgramDetails = SELECT distinct  i.programid, issuerid, calendartype, programacronym, issuername, i.ticker, bbticker, twticker, cassii, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, p.prodname product, i.producttype, p.prodcode, REPLACE (TRANSLATE (INITCAP (UPPER (prodname)), ' abcdefghijklmnopqrstuvwxyz', ' ' ), ' ' ) prodname, issuertype, cptype, i.traderid, sectraderid, othertraderids, defaultbookid, maxnofdays, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, coupon, spread, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, TO_CHAR (i.modifieddate, 'fmmm/dd/yy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'fmmm/dd/yy') createddate, i.createdby, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, b.bookno, b.bookcode, b.bookname descr, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap,IPA_NAME ipaname,decode(industry,'I1','Bank/Finance','I2','Govt','I3','Industrial')industryname,ism.cusip FROM fo_program_m i, fo_product_m p, fo_trader_books_m b,FO_IPA_DATA ip,fo_adn_issues_m  ism WHERE i.defaultbookid = b.bookid AND i.producttype = p.prodid AND i.IPA_NUMBER = ip.IPA_ID AND ism.programid = i.programid AND p.status = 'Y' AND i.status = 'Y' AND b.status = 'Y' 
sql.getCDECDSecurityDetailsIssues = SELECT cdis.status, cdis.issuetype, isr.programid, isr.issuername, isr.cptype,isr.countrycode, isr.maxnofdays, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, prd.prodname prodname, isr.shortname isrshrtname, TO_CHAR (cdis.asofdate, 'fmmm/dd/yy') asofdatestr, cdis.notes, cdis.published, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, cdis.offeringlimit, cdis.minimumpiecesize, cdis.tenortype, cdis.maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.traderid), cdis.traderid) traderloginname, cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.dispofferyield, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + CASE WHEN cdis.prevpaymentdate = cdis.originalsettlementdate THEN NVL ( ( (cdis.amount * 1000) * ( TRUNC (cdis.settlementdate) - cdis.dateddate ) * NVL (cdis.coupon, 0) ) / (100 * 360), 0 ) ELSE NVL ( ( (cdis.amount * 1000) * (TRUNC (SYSDATE) - cdis.prevpaymentdate) * NVL (cdis.coupon, 0) ) / (100 * 360), 0 ) END ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settledate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, cdis.allocationflag, cdis.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.sploginid), cdis.sploginid) sploginname,  '' avgbid, cdis.ticketnumber, cdis.buyscnt, cdis.salescnt, '' voicetrade, '' voiceinvestor FROM fo_program_m isr, fo_cdissues_m cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid
sql.getCDECDSecurityDetailsTrades = SELECT cdis.status, cdis.issuetype, isr.programid, isr.issuername, isr.cptype,isr.countrycode, isr.maxnofdays, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, prd.prodname prodname, isr.shortname isrshrtname, TO_CHAR (cdis.asofdate, 'fmmm/dd/yy') asofdatestr, cdis.notes, cdis.published, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, cdis.offeringlimit, cdis.minimumpiecesize, cdis.tenortype, cdis.maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.traderid), cdis.traderid) traderloginname, cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.dispofferyield, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (TRUNC (cdis.settlementdate) - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settledate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, cdis.allocationflag, cdis.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.sploginid), cdis.sploginid) sploginname, '' avgbid, cdis.ticketnumber, 0 buyscnt, 0 salescnt, '' voicetrade, '' voiceinvestor FROM fo_program_m isr, vw_cdtradehistory_t cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid
sql.getCDECDECPSecurityDetailsGridOne = SELECT cdis.status, '' issuetype, isr.programid, isr.issuername, isr.cptype,isr.countrycode, isr.maxnofdays, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, prd.prodname prodname, isr.shortname isrshrtname, TO_CHAR (cdis.asofdate, 'fmmm/dd/yy') asofdatestr, cdis.notes, cdis.published, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, cdis.offeringlimit, cdis.minimumpiecesize, '' tenortype, '' maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, '' rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.traderid), cdis.traderid) traderloginname, cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, 0 dispbiddiscount, 0 dispbidyield, '0' dispofferyield, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (TRUNC (cdis.settlementdate) - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settledate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, 0 bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, '' allocationflag, cdis.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = cdis.sploginid), cdis.sploginid) sploginname, '' avgbid, cdis.ticketnumber, 0 buyscnt, 0 salescnt, '' voicetrade, '' voiceinvestor FROM fo_program_m isr,
sql.getCDECDECPSecurityDetailsGridTwo = fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid

#sql.getCDECDSecurityProgramDetails = SELECT   i.programid, issuerid, calendartype, programacronym, issuername, i.ticker, bbticker, twticker, cassii, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, p.prodname product, i.producttype, p.prodcode, REPLACE (TRANSLATE (INITCAP (UPPER (prodname)), ' abcdefghijklmnopqrstuvwxyz', ' ' ), ' ' ) prodname, issuertype, cptype, i.traderid, sectraderid, othertraderids, defaultbookid, maxnofdays, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, i.coupon, spread, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, TO_CHAR (i.modifieddate, 'fmmm/dd/yy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'fmmm/dd/yy') createddate, i.createdby, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, b.bookno, b.bookcode, b.bookname descr, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap,ipa_name ipaname,decode(industry,'I1','Bank/Finance','I2','Govt','I3','Industrial')industryname,ism.cusip FROM fo_program_m i, fo_product_m p, fo_trader_books_m b,FO_IPA_DATA ip,fo_cdissues_m  ism WHERE i.defaultbookid = b.bookid AND i.producttype = p.prodid AND i.IPA_NUMBER = ip.IPA_ID AND ism.programid = i.programid AND p.status = 'Y' AND i.status = 'Y'  AND b.status = 'Y'
sql.getFRCPFRCDSecurityDetailsIssue = SELECT cdis.securitytype, cdis.callable, cdis.offer, cdis.offeryeild, isr.maxnofdays, isr.issuername, isr.cptype, isr.ticker ticker, prd.prodname prodname, NVL (incamount, 0) incamount, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, cdis.offerflag, cdis.dispofferdiscount, isr.countrycode, cdis.dispofferyield, cdis.rateflag, cdis.amountflag, cdis.programid, cdis.stoptrading, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon, cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, cdis.buyscnt, cdis.salescnt, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, NVL ( ROUND ( ( (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) ) / (100 * 360), 2 ) + (CASE WHEN cs.sortorder = 1 THEN (ROUND ( ( (amount * 1000) * ( TRUNC (cs.prevpaymentdate) - cdis.issuedate ) * NVL (cs.allin, 0) ) / (100 * 360), 2 ) ) ELSE 0 END ), ROUND ( ( (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360), 2 ) ) todayaccruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, st.descr, prd.prodcode, bookno, am.acctname, isr.minsize FROM fo_program_m isr, fo_frissues_m cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid AND TRIM (cdis.status) = 'A' AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+) AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1
sql.getFRCPFRCDSecurityDetailsTrade = SELECT cdis.securitytype, cdis.callable, cdis.offer, cdis.offeryeild, isr.maxnofdays, isr.issuername, isr.cptype, isr.ticker ticker, prd.prodname prodname, NVL (incamount, 0) incamount, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, '' offerflag, cdis.dispofferdiscount, isr.countrycode, cdis.dispofferyield, 0 rateflag, 0 amountflag, cdis.programid, '' stoptrading, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon, cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, 0 buyscnt, 0 salescnt, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, NVL ( ROUND ( ( (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) ) / (100 * 360), 2 ) + (CASE WHEN cs.sortorder = 1 THEN (ROUND ( ( (amount * 1000) * ( TRUNC (cs.prevpaymentdate) - cdis.issuedate ) * NVL (cs.allin, 0) ) / (100 * 360), 2 ) ) ELSE 0 END ), ROUND ( ( (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360), 2 ) ) todayaccruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, st.descr, prd.prodcode, bookno, am.acctname, isr.minsize FROM fo_program_m isr, fo_trading_t cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid AND TRIM (cdis.status) = 'A' AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+) AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1
#sql.getFRCPFRCDSecurityProgramDetails = SELECT   i.programid, issuerid, calendartype, programacronym, issuername, i.ticker, bbticker, twticker, cassii, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, p.prodname product, i.producttype, p.prodcode, REPLACE (TRANSLATE (INITCAP (UPPER (prodname)), ' abcdefghijklmnopqrstuvwxyz', ' ' ), ' ' ) prodname, issuertype, cptype, i.traderid, sectraderid, othertraderids, defaultbookid, maxnofdays, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, i.coupon, spread, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, TO_CHAR (i.modifieddate, 'fmmm/dd/yy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'fmmm/dd/yy') createddate, i.createdby, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, b.bookno, b.bookcode, b.bookname descr, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap,ipa_name ipaname,decode(industry,'I1','Bank/Finance','I2','Govt','I3','Industrial')industryname,ism.cusip FROM fo_program_m i, fo_product_m p, fo_trader_books_m b,FO_IPA_DATA ip,fo_frissues_m  ism WHERE i.defaultbookid = b.bookid AND i.producttype = p.prodid AND i.IPA_NUMBER = ip.IPA_ID AND ism.programid = i.programid AND p.status = 'Y' AND i.status = 'Y' AND b.status = 'Y'
sql.getFRCPFRCDCouponDetails = SELECT   libortype, rolldate, libor, spread, allin, TO_CHAR (busdate, 'fmmm/dd/yy') busdate, interestamt, TO_CHAR (paymentdate, 'fmmm/dd/yy') paymentdate, TO_CHAR (determinationdate, 'fmmm/dd/yy') determinationdate, TO_CHAR (prevpaymentdate, 'fmmm/dd/yy') prevpaymentdate, sortorder FROM fo_coupon_schedules_d
sql.getTradeHistoryDetailsOne =  SELECT * FROM (SELECT DISTINCT a.*, COUNT (*) OVER () AS cnt FROM (SELECT DISTINCT TO_CHAR (ism.maturitydate, 'mm/dd/yyyy') matdate, ism.prodid, prodname, ism.issueid, ism.status, ism.SOURCE, ism.amount, ism.refissueid, ism.programid, ism.cusip, ism.transtype, ism.ticketnumber, ism.currencycode, am.acctname cassii, isr.shortname isrshrtname, isr.issuername, isr.producttype, st.descr, st.dispdescr, nvl((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = nvl(ism.sploginid, ism.createdby) ), 'N/A') salesperson, ism.dispbiddiscount, ism.dispbidyield, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) maturitydate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.issuedate, 'fmmm/dd' ), TO_CHAR (ism.issuedate, 'fmmm/dd/yy') ) tradedate FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st, 
#sql.getTradeHistoryDetailsTwo =	 WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status = 'A' AND ism.maturitydate >= TRUNC (SYSDATE) AND ism.refissueid <> '0000' AND st.status = 'Y' 
sql.getTradeHistoryDetailsTwo =	 WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status = 'A' AND ism.refissueid <> '0000' AND st.status = 'Y' 
sql.getTradeHistoryDetailsThree =  SELECT DISTINCT TO_CHAR (ism.maturitydate, 'mm/dd/yyyy') matdate, ism.prodid, prodname, ism.issueid, ism.status, ism.SOURCE, ism.amount, ism.refissueid, ism.programid, ism.cusip, ism.transtype, ism.ticketnumber, ism.currencycode,  am.acctname cassii, isr.shortname isrshrtname, isr.issuername, isr.producttype, st.descr, st.dispdescr, nvl((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = nvl(ism.sploginid, ism.createdby) ), 'N/A') salesperson, ism.dispbiddiscount, ism.dispbidyield, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) maturitydate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.issuedate, 'fmmm/dd' ), TO_CHAR (ism.issuedate, 'fmmm/dd/yy') ) tradedate FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am,
#sql.getTradeHistoryDetailsFour = WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.refissueid <> '0000' AND ism.maturitydate >= TRUNC (SYSDATE) 
sql.getTradeHistoryDetailsFour = WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.refissueid <> '0000' 
sql.getTradeHistoryDetailsFive = ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid  AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getFRCPFRCDTradeHistoryDetails = SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT DISTINCT ism.prodid, prodname, ism.issueid, ism.status, ism.amount, ism.SOURCE, ism.refissueid, ism.programid, ism.cusip, ism.transtype, ism.ticketnumber, ism.currencycode, am.acctname cassii, isr.shortname isrshrtname, isr.issuername, isr.producttype, st.descr, st.dispdescr, nvl((SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = nvl(ism.sploginid, ism.createdby) ), 'N/A') salesperson, ism.dispbiddiscount, ism.dispbidyield, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) maturitydate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.issuedate, 'fmmm/dd' ), TO_CHAR (ism.issuedate, 'fmmm/dd/yy') ) tradedate FROM fo_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status = 'A' AND ism.maturitydate >= TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE  g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getFRCPFRCDTradeHistoryModDetails = SELECT DISTINCT ism.prodid, prodname, ism.issueid, ism.status, ism.amount, ism.SOURCE, ism.refissueid, ism.programid, ism.cusip, ism.transtype, ism.ticketnumber, ism.currencycode, am.acctname cassii, isr.shortname isrshrtname, isr.issuername, isr.producttype, st.descr, st.dispdescr, nvl((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = nvl(ism.sploginid, ism.createdby) ), 'N/A') salesperson, ism.dispbiddiscount, ism.dispbidyield, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) maturitydate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.issuedate, 'fmmm/dd' ), TO_CHAR (ism.issuedate, 'fmmm/dd/yy') ) tradedate FROM fo_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND ism.status = 'A' AND ism.maturitydate >= TRUNC (SYSDATE)
 sql.getPriceDetailsOne = SELECT   * FROM (SELECT y.bookname, y.amount, y.bid, y.offer,  moddate, to_char(y.settlementdate,'mm/dd/yy') settlementdate, to_char(y.maturitydate,'mm/dd/yyyy') maturitydate, currentamount, currentbid, accretion, realized, unrealized, pandl, discount,x.modifieddate, position, ROW_NUMBER () OVER (ORDER BY nvl(x.moddate,y.MODIFIEDDATE) DESC) cnt FROM (SELECT t.issueid, programid, TO_CHAR (settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate, (CASE WHEN NVL (currentamount, 0) <> 0 THEN (currentamount * 1000) ELSE (originalamount * 1000)  END ) currentamount, currentbid, NVL (accretion * 1000, 0) accretion, NVL (accumulativereal * 1000, 0) realized, NVL (accumulativeunreal * 1000, 0) unrealized, NVL (realunreal * 1000, 0) pandl, NVL (discount * 1000, 0) discount, TO_CHAR (modifieddate, 'fmmm/dd/yy') modifieddate,  modifieddate moddate FROM fo_cpissues_tracking_d t INNER JOIN (SELECT   issueid, MAX (modifieddate) maxdate FROM fo_cpissues_tracking_d iss 
 sql.getPriceDetailsTwo =	GROUP BY issueid) tm ON t.issueid = tm.issueid AND t.modifieddate = tm.maxdate ) x, (SELECT ism.issueid, b.bookname, ism.amount, ism.bid, ism.offer,ism.MATURITYDATE ,ism.SETTLEMENTDATE,ism.MODIFIEDDATE, ism.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = ism.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = ism.issueid AND status = 'A'), 0 ) ) position FROM
 sql.getPriceDetailsThree =	fo_trader_books_m b, fo_program_m isr WHERE isr.defaultbookid = b.bookid AND ism.programid = isr.programid AND isr.status = 'Y'  
 sql.getCDTicketDetails = SELECT cdis.status, cdis.issuetype, isr.programid, isr.issuername, isr.shortname isrshrtname, cdis.notes, cdis.published, cdis.offeringlimit, cdis.minimumpiecesize, cdis.tenortype, cdis.maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, (SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1)) FROM fo_member_m WHERE loginid = cdis.traderid) traderloginname, cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.dispofferyield, ROUND (  (  (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) )  / (100 * 360), 2 ) accruedinterest, ROUND (  (  ((cdis.amount * 1000) * NVL (cdis.price, 0)) + (  (  (cdis.amount * 1000) * (TRUNC (cdis.settlementdate) - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, cdis.allocationflag, cdis.sploginid, (SELECT  (   fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1)  )  FROM fo_member_m WHERE loginid = cdis.sploginid) sploginname, 0 avgbid, cdis.voicetrade, cdis.voiceinvestor, cdis.ticketnumber FROM fo_program_m isr, vw_cdtradehistory_t cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid 
 sql.getFRTicketDetails =SELECT cdis.securitytype, cdis.voicetrade, cdis.voiceinvestor, cdis.callable, cdis.offer, cdis.offeryeild, cdis.dispofferdiscount, cdis.dispofferyield, cdis.programid, cdis.SOURCE, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon,  cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = cdis.sploginid) sploginname, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, cdis.salescnt, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, ROUND (  (  (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, NVL (    (  (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) )  / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN (  (  (amount * 1000) * (TRUNC (cs.prevpaymentdate) - cdis.issuedate) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), (  (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360) ) todayaccruedinterest, ROUND (  (  ((cdis.amount * 1000) * NVL (cdis.price, 0)) + (  (  (cdis.amount * 1000)  * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, st.descr, prd.prodcode, bookno, bookname, am.acctname, isr.minsize FROM fo_program_m isr, fo_trading_t cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+)  AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1 
 sql.getFRBTicketDetails=SELECT cdis.securitytype, '' voicetrade, '' voiceinvestor, cdis.callable, cdis.offer, cdis.offeryeild, cdis.dispofferdiscount, cdis.dispofferyield, cdis.programid, '' SOURCE, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon, cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, '' sploginid, '' sploginname, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, cdis.salescnt, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, NVL ( ( (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) ) / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN ( ( (amount * 1000) * (TRUNC (cs.prevpaymentdate) - cdis.issuedate) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), ( (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360) ) todayaccruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, st.descr, prd.prodcode, bookno, bookname, am.acctname, isr.minsize FROM fo_program_m isr, fo_frissues_m cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+) AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1
sql.deskTradeDetailsOne =  select * from (SELECT t.issueid, programid,ticketnumber, TO_CHAR (settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate, (CASE WHEN NVL (currentamount, 0) <> 0 THEN (currentamount * 1000) ELSE (originalamount * 1000) END ) currentamount, currentbid,
sql.deskTradeDetailsTwo =  NVL (accumulativereal * 1000, 0) realized, NVL (accumulativeunreal * 1000, 0) unrealized, NVL (realunreal * 1000, 0) pandl,TO_CHAR (modifieddate, 'fmmm/dd/yy') modifieddate, modifieddate moddate, ROW_NUMBER() OVER (PARTITION BY TRUNC(modifieddate) ORDER BY modifieddate DESC ) CNT
sql.deskTradeDetailsThree = GROUP BY issueid, modifieddate ) tm ON t.issueid = tm.issueid AND t.modifieddate = tm.maxdate and t.maturitydate >= trunc(sysdate) ) where cnt=1 order by moddate
#######################################################################################################################################
------------------------------------------------------- CP Product -------------------------------------------------------------------------
########################################################################################################################################
sql.getPrimaryOffers = SELECT * FROM (SELECT am.companyid, salescnt, ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, ism.settlementdate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') matdate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.maturityenddate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') matenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy') ) FROM DUAL) maturityenddatestr, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, gridissueid, 0 retainedincome, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT m.* FROM fo_issues_m m WHERE m.transtype = ? AND m.status IN ('A', 'S') START WITH m.refissueid = '0000' CONNECT BY PRIOR m.issueid = m.refissueid ORDER SIBLINGS BY m.maturitydate, m.refissueid) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND maturitydate > TRUNC (SYSDATE) AND ism.status IN ('S', 'A')
sql.getPrimaryOffersOne =  ) START WITH refissueid = '0000' CONNECT BY PRIOR issueid = refissueid ORDER SIBLINGS BY programid, refissueid, issueid desc ,maturitydate asc
sql.getCPInventories = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, NVL(ism.availabletoday,0)availabletoday, ism.minamount, ism.maxamount, ism.bid, NVL(ism.offer,0)offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND (ism.availablecredit != 0 OR ism.availabletoday != 0 ) AND ism.maturitydate > TRUNC (SYSDATE)
sql.getCPBuyDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND (ism.availablecredit != 0 OR ism.availabletoday != 0 ) AND ism.status IN ('A','S')
sql.getCPBuyBlotterDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL  AND ism.status IN ('A','S')
sql.getCPInventoriesOne  =   ORDER BY ism.maturitydate ASC ) a	
sql.getPublishedGridsDetInit=SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROWNUM rnum FROM (SELECT isr.programid missuerid, isr.issuername,isr.shortname, isr.cusipbaseone, isr.TICKER, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') setdate,  fn_get_dispdate (TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy')) dispsettlementdate, fn_get_dispdate (TO_CHAR (cdis.dateddate, 'fmmm/dd/yy')) dispdateddate,  cdis.*, CASE WHEN ( RTRIM (REGEXP_SUBSTR (cdis.rate1m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate2m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate3m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate4m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate5m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate6m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate7m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate8m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate9m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate10m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate11m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate12m, '[^:]+', 1, 1), '.0') > 0 ) THEN 'TRUE' ELSE 'FALSE' END rate_flag
sql.getPublishedGridsDetInitFinal = ORDER BY cdis.settlementdate ASC) a)
sql.getPublishedGridsDetFinal=WHERE cdis.programid = isr.programid AND isr.status = ? AND cdis.refissueid = '0000' AND cdis.transtype = '10' AND cdis.offerflag = 'Y'
sql.getCPPublishedOffers = AND (ism.availablecredit != 0 OR ism.availabletoday != 0) AND offerflag = 'Y' AND ism.tradingflag = 'Y' AND availabletoday IS NOT NULL
sql.getHomeTradesFields=SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum FROM (SELECT ism.prodid, prd.prodname prodname, prd.prodcode,ism.availableCredit,ism.availabletoday,ism.producttype, isr.ticker ticker, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, isr.issuername, trb.bookid, bookname, ism.refissueid, ism.createddate, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, ism.amount, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.cusip, ism.settlementdate settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) matdatestr, ism.bid, ism.transtype, ism.issuetype, ism.dispbiddiscount, ism.dispbidyield, ism.status, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.currencycode, st.descr, st.dispdescr, ism.price, TO_NUMBER (prd.sortorder) sortorder, ism.dispbiddiscount coupon, ism.dispbidyield yield
sql.getHomeTradesFieldsOne = and  (trunc(ism.createddate) BETWEEN TO_DATE(?,?) AND TO_DATE(?,?)) 
sql.getHomeTradesFieldsTwo  =    and  trunc(ism.createddate) = trunc(SYSDATE)
sql.getHomeTradesFieldsFinal  =   ) a  ORDER BY a.createddate DESC) WHERE rnum BETWEEN 0 AND 5
sql.getHomeTradeTableJoins=fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.status NOT IN ('AT', 'AC')) AND am.programid IS NULL AND subacctcassii IS NULL
sql.getPrograms=SELECT i.programid programid, i.issuername, tb.bookname, tb.bookid, i.spread, i.fee,i.allin, i.premium, i.ticker ticker, traderecap  FROM fo_program_m i, fo_trader_books_m tb   WHERE i.defaultbookid = tb.bookid AND i.status = 'Y' AND tb.status = 'Y'
sql.getProgramsFinal =    and ( i.spread IS  NULL or i.fee IS NULL)
sql.getCPOfferings = SELECT * FROM (SELECT salescnt,BUYSCNT,ism.deskid,TO_CHAR(ism.asofdate,'fmmm/dd/yy') asofdatestr,ism.ASSETBACKED,isr.COUNTRYCODE,st.DESCR,st.DISPDESCR ,TO_CHAR (MAX(ism.maturityenddate) over(partition BY ism.programid), 'fmmm/dd/yy') maxmaturityenddate ,ism.MINIMUMPIECE,ism.MSGTYPE,ism.QUANTITYFLAG ,ism.REQTIMESTAMP, published,ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, ism.settlementdate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') matdate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.maturityenddate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') matenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy') ) FROM DUAL) maturityenddatestr, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.traderId)traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, gridissueid, 0 retainedincome, isr.spread,isr.allin, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT m.* FROM fo_issues_m m WHERE m.transtype = ?
sql.getCPOfferingsOne= START WITH m.refissueid = '0000' CONNECT BY PRIOR m.issueid = m.refissueid ORDER SIBLINGS BY m.maturitydate, m.refissueid) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND maturitydate > TRUNC (SYSDATE)  AND ism.status IN ('S', 'A')
sql.getCPOfferingsFinal = ) START WITH refissueid = '0000'  CONNECT BY PRIOR issueid = refissueid  ORDER SIBLINGS BY refissueid, issueid desc ,maturitydate asc
sql.deleteIssue=UPDATE FO_ISSUES_M set status ='D' ,MODIFIEDDATE  = to_date(?,?), MODIFIEDBY  =?  WHERE  ISSUEID = ?  and transType='10'
sql.getRelatedIssues=SELECT issueid,refissueid       FROM fo_issues_m     WHERE maturitydate = (SELECT MIN (b.maturitydate)  FROM fo_issues_m a,           fo_issues_m b         WHERE a.issueid = ?           AND a.refissueid = '0000'          AND b.refissueid = a.issueid          AND b.status = 'S')      AND status = 'S'      AND refissueid = ?
sql.updateRelatedIssues=UPDATE fo_issues_m           SET refissueid = '0000',       MODIFIEDDATE     = to_date(?,?),      MODIFIEDBY      = ?         WHERE issueid = ?  and transType='10'         AND status in ('A','S') 
sql.updateRefIssues=UPDATE fo_issues_m  SET refissueid = ?	,MODIFIEDDATE  = to_date(?,?), MODIFIEDBY  =? WHERE refissueid = ?	and transType='10'	
sql.updateTradesRelatedToIssue=Merge INTO FO_CLIENT_TRADING_T a USING (SELECT transid FROM fo_client_trading_t WHERE INSTRUMENTCODE IN   (SELECT cusip   FROM fo_issues_m   WHERE ISSUEID IN     ( SELECT DISTINCT m.issueid     FROM       (SELECT issueid,         refissueid,         transtype       FROM fo_issues_m       WHERE transtype            = '10'       AND status                IN ('A', 'S')         START WITH issueid       = ?         CONNECT BY PRIOR issueid = refissueid       )t,       fo_issues_m m     WHERE m.transtype            = '10'     AND m.status                IN ('A', 'S')     AND m.transtype              = t.transtype       START WITH m.issueid       = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)       CONNECT BY PRIOR m.issueid = m.refissueid     )   ) )b ON( a.transid=b.transid) WHEN matched THEN   UPDATE   SET status     =? ,     POPUP        =? ,     MODIFIEDDATE = SYSDATE,     MODIFIEDBY   = ?
sql.updateIssue=UPDATE FO_ISSUES_M SET  REFISSUEID = ?,   OFFERFLAG = ? ,  AFR = ? ,   SETTLE = ?,  EXDATES = ?,  PROCEEDSFLAG = ?,  SUBJECTFLAG = ?,  ORGSETTLETDATE = to_date(?,?),  SETTLEMENTDATE = to_date(?,?),  MATURITYDATE = to_date(?,?), MATURITYENDDATE = to_date(?,?), AMOUNT = ?,  MAXAMOUNT = ?,   AVAILABLECREDIT = ?,  AVAILABLETODAY = ?,   OFFER = ?,  OFFERYIELD = ?,   DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,  DISPOFFERDISCOUNT = ?,  DISPOFFERYIELD = ?,   AVGBID = ? ,    BID = ?  , BIDYIELD = ?, MATCODE=?   ,ACCRUEDINTEREST = ? , TRADERACRUEDINT=?, NOTES=? ,  amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - bid), MODIFIEDDATE =to_date(?,?),  MODIFIEDBY =?  ,OFFERINGLIMIT =? ,MINIMUMPIECESIZE =? ,QUANTITYFLAG=? ,ACCTNBR=? ,BUYSCNT=?,SALESCNT =?, CUSIP = UPPER(?) ,  PREVPAYMENTDATE =to_date(?,?),  DISPSETTLEMENTDATE = fn_get_DISPDATE(?), DISPMATURITYDATE = fn_get_DISPDATE(?), DISPMATURITYENDDATE = fn_get_DISPDATE(?), DISPEXDATES = fn_get_exdates(?), SPLOGINID = ? WHERE ISSUEID = ? AND PRODUCTTYPE = ? AND programid = ?  
sql.insertIssue= INSERT INTO FO_ISSUES_M   (ISSUEID ,programid,REFISSUEID, EXDATES, PROCEEDSFLAG ,SUBJECTFLAG,   ISSUENUMBER ,   AFR ,   AMOUNT ,ACCTNBR,   AVAILABLECREDIT,   AVAILABLETODAY,   MINAMOUNT ,   MAXAMOUNT ,   PRODUCTTYPE ,  CUSIP,   SETTLE,ORGSETTLETDATE, SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,   AVGBID, BID ,OFFER , NOTES, PUBLISHED, TRANSTYPE,   TRADERID ,    TRADERLOGINNAME ,    ACCRUEDINTEREST ,    SALESCRAMOUNT ,    SALESCR ,    TRMARKUP ,    TRMARKUPAMOUNT ,   TOTALSALESCR , RETAINEDINCOME , SPREADRETAIN , ASOFDATE, ISSUEDATE,  MODIFIEDDATE ,   MODIFIEDBY ,   CREATEDDATE ,   CREATEDBY ,    STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD ,DISPOFFERDISCOUNT ,DISPOFFERYIELD ,BIDYIELD,OFFERYIELD ,MSGTYPE,MATCODE    , ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON  ,TRADERACRUEDINT ,    CURRENCYCODE,TICKETNUMBER,ISIN,BUYSCNT,SALESCNT,INVESTORACCTNBR, TRADINGFlAG,GRIDISSUEID,PREVPAYMENTDATE, PRICE,  DISPSETTLEMENTDATE, DISPMATURITYDATE, DISPMATURITYENDDATE, DISPEXDATES,SPLOGINID  )    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',?  , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?, fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_exdates(?),? ) 
sql.updateIssueTradeDetails= UPDATE fo_cp_trading_t SET     BOOKID = (select defaultbookid from fo_program_m where programid = ? and rownum=1), OFFERFLAG = ?,  AFR = ?,    SETTLE   = ?,   EXDATES   = ?,   SETTLEMENTDATE   = to_date(?,?),   MATURITYDATE  = to_date(?,?), MATURITYENDDATE  = to_date(?,?),     ,AMOUNT = ?,     MAXAMOUNT = ?, AVAILABLECREDIT = ?,     AVAILABLETODAY = ?, OFFER   = ?,  OFFERYIELD   = ?,  DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,     DISPOFFERDISCOUNT   = ?,  DISPOFFERYIELD   = ?,  ,BID   = ?     , BIDYIELD   = ?, MATCODE=?  ,ACCRUEDINTEREST   = ? ,  tRADERACRUEDINT= ?  ,NOTES=? ,    amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - offer),     MODIFIEDDATE   =to_date(?,?),     MODIFIEDBY   =?  ,OFFERINGLIMIT =? ,MINIMUMPIECESIZE  =? ,QUANTITYFLAG=? ,ACCTNBR=?, PRICE=?,SPLOGINID=?,voicetrade=?,voiceInvestor=?  WHERE ISSUEID = ?  AND PRODUCTTYPE = ? AND programid = ?  
sql.insertIssuerTradeDetails=   INSERT INTO fo_cp_trading_t   (ISSUEID ,programid,REFISSUEID,  EXDATES,  ISSUENUMBER ,    AFR ,     AMOUNT  ,ACCTNBR,   AVAILABLECREDIT,   AVAILABLETODAY,   MINAMOUNT  ,   MAXAMOUNT  ,   PRODUCTTYPE , CUSIP,     SETTLE, ORGSETTLETDATE,SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,    BID ,OFFER , NOTES, PUBLISHED,  TRANSTYPE,     TRADERID  ,   TRADERLOGINNAME  ,   ACCRUEDINTEREST  ,   SALESCRAMOUNT  ,   SALESCR  ,   TRMARKUP  ,   TRMARKUPAMOUNT  ,      TOTALSALESCR  ,    RETAINEDINCOME , SPREADRETAIN ,   ASOFDATE, ISSUEDATE,     MODIFIEDDATE   ,    MODIFIEDBY   ,      CREATEDDATE   ,     CREATEDBY   ,  STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD  ,DISPOFFERDISCOUNT ,DISPOFFERYIELD  ,BIDYIELD,OFFERYIELD,MSGTYPE,MATCODE, ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON    ,TRADERACRUEDINT   ,  CURRENCYCODE ,TICKETNUMBER,ISIN,      TEMPCUSIP, PRICE,SPLOGINID,BOOKID,voicetrade,voiceInvestor  )   VALUES  (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',? , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,(select defaultbookid from fo_program_m where programid = ? and rownum=1),?,?)  
sql.updateTemplateMaster=UPDATE fo_template_m  SET   templatename = ? WHERE	templateid=?	and status=?	
sql.insertTemplateMaster=INSERT INTO fo_template_m(templateid,templatename,companyid, programid,status) VALUES (?, ?, ?,?,?)
sql.updateTemplateDetails= UPDATE fo_template_d  set AMOUNT = ?,MATURITYDATE = to_date(?,?),MATURITYENDDATE = to_date(?,?)	,OFFER = ?,BID = ?,NOTES = ?,	QUANTITYFLAG = ?,TRADERLOGINNAME = ?,MODIFIEDDATE = to_date(?,?),MODIFIEDBY = ?,CREATEDDATE = to_date(?,?),CREATEDBY = ?,EXDATES = ?,PROCEEDS = ?,SUBJECT  = ?,deskid  = ?  WHERE	templateid=? AND	rownumber=?	
sql.insertTemplateDetails=  INSERT INTO fo_template_d( TEMPLATEID, ROWNUMBER,  AMOUNT, MATURITYDATE, MATURITYENDDATE, OFFER, BID, NOTES, QUANTITYFLAG, TRADERLOGINNAME, MODIFIEDDATE, MODIFIEDBY, CREATEDDATE, CREATEDBY, EXDATES, PROCEEDS, SUBJECT,deskid) VALUES ( ?, ?, ?, to_date(?,?), to_date(?,?), ?, ?, ?, ?, ?, to_date(?,?), ?, to_date(?,?), ?, ?, ?, ?,? ) 
sql.getTemplateDetails=SELECT AMOUNT,QUANTITYFLAG,ROWNUMBER,	PROCEEDS,SUBJECT,TO_CHAR (MATURITYDATE,'fmmm/dd/yy') maturitydate,TO_CHAR (MATURITYENDDATE,'fmmm/dd/yy') MATURITYENDDATE,OFFER,BID,NOTES,b.templateid,b.templatename FROM   FO_TEMPLATE_D a, fo_template_m b   WHERE  a.TEMPLATEID=? and a.templateid=b.templateid	 
sql.publishIssue=update fo_issues_m set published=?,offer=?,offeringlimit=?,availabletoday=?,offerflag='Y' where issueid=?
sql.cancelCPBuyTrade=UPDATE fo_issues_m SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND transType = ?
sql.cancelCPSellTrade=UPDATE fo_cp_trading_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND transType = ?
sql.updateIssueWhenCancel = UPDATE fo_issues_m SET amount = ?, availablecredit = ?, amountflag = SIGN (? - availablecredit), rateflag = '0', availabletoday = ?, offeringlimit = ?, sploginid = ?, buyscnt = ?, salescnt = ?, offerflag = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?
sql.updateIssueWhenCancelWhere = issueid IN ( SELECT DISTINCT m.issueid FROM (SELECT issueid, refissueid, transtype FROM fo_issues_m WHERE transtype = '10' AND status IN ('A', 'S') START WITH issueid = ? CONNECT BY PRIOR issueid = refissueid) t, fo_issues_m m WHERE m.transtype = '10' AND m.status IN ('A', 'S') AND m.transtype = t.transtype START WITH m.issueid = DECODE (t.refissueid, '0000', t.issueid, t.refissueid ) CONNECT BY PRIOR m.issueid = m.refissueid)
sql.getTemplates=SELECT DISTINCT templateid, companyid,a.programid, templatename FROM fo_template_m a, fo_program_m b WHERE a.status = ?	AND a.programid = b.programid AND a.programid = ?
sql.deleteTemplateMaster=DELETE fo_template_m  WHERE  templateid = ? 
sql.deleteTemplateDetails=DELETE fo_template_d  WHERE  templateid = ? 
sql.getSalesIssuesProceedsAmount=SELECT   SUM (amount - (accruedinterest/1000)) amount      FROM vw_cptradehistory_t     WHERE refissueid IN (   SELECT DISTINCT m.issueid    FROM (SELECT     issueid, refissueid, transtype      FROM fo_issues_m     WHERE transtype = '10'    AND status ='S'        AND  issueType= 'S'START WITH issueid = ?CONNECT BY PRIOR issueid = refissueid) t,         fo_issues_m m   WHERE m.transtype = '10'    AND m.status ='S'     AND m.issueType= 'S'     AND m.transtype = t.transtype        START WITH m.issueid =  DECODE (t.refissueid,'0000', t.issueid,t.refissueid         )         CONNECT BY PRIOR m.issueid = m.refissueid)      AND transtype = '85' GROUP BY refissueid 
sql.getCPSellDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT pm.*,ROWNUM rowno FROM FO_CP_TRADING_T pm   WHERE pm.status ='A' AND pm.transtype = '85'  ) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL  AND ism.status IN ('A','S')
sql.getIssuesProceedsAmount = SELECT   SUM (amount*1000 - accruedinterest)/1000 amount FROM fo_issues_m   WHERE issueId IN (
sql.updateIssueAvailableOne=UPDATE FO_ISSUES_M SET   availablecredit = ?,       amountflag = SIGN(? - AVAILABLECREDIT),  rateflag = '0',  availabletoday = ?, OFFERINGLIMIT =? ,SPLOGINID=?,      MODIFIEDDATE    = to_date(?,?),  MODIFIEDBY     = ?    WHERE   ISSUEID   in (  select  distinct m.issueid  from (  SELECT     issueid, refissueid, transtype      FROM fo_issues_m     WHERE transtype = '10'     AND status IN ('A', 'S') START WITH issueid = ? CONNECT BY PRIOR issueid = refissueid)t,fo_issues_m m WHERE m.transtype = '10'       AND m.status IN ('A', 'S') and m.transtype = t.transtype START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid) CONNECT BY PRIOR m.issueid = m.refissueid   )
sql.updateIssueAvailableTwo=UPDATE FO_ISSUES_M SET buyscnt = ?, salescnt =?  WHERE	 ISSUEID  = ? 
sql.updateIssueAvailableThree= UPDATE FO_ISSUES_M SET    OFFERFLAG = 'N',    MODIFIEDDATE    = to_date(?,?),     MODIFIEDBY     = ? WHERE ISSUEID   in (      select  distinct m.issueid  from (     SELECT     issueid, refissueid, transtype   FROM fo_issues_m  WHERE transtype = '10' AND status IN ('A', 'S')    START WITH issueid = ?    CONNECT BY PRIOR issueid = refissueid)t,fo_issues_m m    WHERE m.transtype = '10' AND m.status IN ('A', 'S')    and m.transtype = t.transtype    START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)    CONNECT BY PRIOR m.issueid = m.refissueid      )  
sql.updateConvertSalesRefIssuedsWithNewTicket= UPDATE  	FO_CP_TRADING_T set refIssueid = ?  	,cusip =?	,issuetype ='F'  ,status='A' WHERE    ISSUEID = ?       and transType='85'  
sql.saveCommitmentConvertAssoDetails=INSERT INTO FO_COMMITMENT_CONVERT_ASSOC_D  (ISSUEID,CONVERTREFID,CREATEDDATE,CREATEDBY,STATUS)  VALUES  (?,?,to_date(?,?),?,?  ) 
sql.disRegardOne=  UPDATE   FO_ISSUES_M   set status ='D' ,  CONVERTFLAG=?, ASOFDATE= ?,REJECTREASON =?,     MODIFIEDDATE     = to_date(?,?),      MODIFIEDBY      = ?         WHERE ISSUEID   in (       select  distinct m.issueid  from (      SELECT     issueid, refissueid, transtype          FROM fo_issues_m         WHERE transtype = '10' AND status IN ('A', 'S')     START WITH issueid = ?     CONNECT BY PRIOR issueid = refissueid)t,fo_issues_m m     WHERE m.transtype = '10' AND m.status IN ('A', 'S')     and m.transtype = t.transtype     START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)     CONNECT BY PRIOR m.issueid = m.refissueid       )  
sql.disRegardTwo=    select transid from fo_client_trading_t where INSTRUMENTCODE in  (     select cusip from fo_issues_m  WHERE    ISSUEID   in (       select  distinct m.issueid  from (         SELECT     issueid, refissueid, transtype          FROM fo_issues_m         WHERE transtype = '10' AND status IN ('A', 'S')     START WITH issueid = ?     CONNECT BY PRIOR issueid = refissueid)t,fo_issues_m m     WHERE m.transtype = '10' AND m.status IN ('A', 'S')     and m.transtype = t.transtype     START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)     CONNECT BY PRIOR m.issueid = m.refissueid       )) 
sql.updateTradeStatus=UPDATE  	FO_CLIENT_TRADING_T	set status =? ,	 POPUP =? ,	REJECTREASON =?,  REJECTEDTIME  = to_date(?,?),REJECTEDBY  =	?,   MODIFIEDDATE  = to_date(?,?), 	 MODIFIEDBY   =	?  WHERE  TRANSID = ?  		
sql.getTodaysMaturities= select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM   fo_issues_m ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '10'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.issuetype NOT IN ('S'))     AND ism.refissueid = '0000'     AND ism.availablecredit > 0     AND (TRUNC (ism.createddate) BETWEEN TO_DATE    (?,?) AND TO_DATE(?,?)) 
sql.getTodaysMaturitiesunion= union select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM  fo_cp_trading_t ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '85'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.status NOT IN ('AT', 'AC'))     AND subacctcassii IS NULL     
sql.getBooKViewInventoryDetails=  SELECT *  FROM (SELECT   a.*, COUNT (*) OVER () AS cnt     FROM (      SELECT ism.prodid, ism.programid,   ism.ISSUENUMBER , isr.shortname isrshrtname,   (select STSANDP from fo_ratings_d where RATINGID= isr.sandp) sandp,      (select STFITCH from fo_ratings_d where RATINGID= isr.fitchrating) fitchrating,        (select STMOODY from fo_ratings_d where RATINGID= isr.moodyrating) moodyrating,        (select LTSANDP from fo_ratings_d where RATINGID= isr.ltsandp) ltsandp,       (select LTFITCH from fo_ratings_d where RATINGID= isr.ltfitch) ltfitch,       (select LTMOODY from fo_ratings_d where RATINGID= isr.ltmoody) ltmoody,      ism.ISSUEID ,   ism.REFISSUEID, TO_CHAR (ism.ISSUEDATE, 'fmmm/dd/yy') ISSUEDATE, 'NEWSEARCH' cpaction  ,  isr.ISSUERNAME,isr.TICKER ticker,ism.ticketnumber, am.shortname ,    ism.AMOUNT  , fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, am.acctNbr,am.acctname, TO_CHAR(ism.SETTLEMENTDATE,?) SETTLEDATE, ism.settlementdate,   ism.settle  settle,        (SELECT fn_get_dispdate   (TO_CHAR (ism.settlementdate,  'mm/dd/yyyy'))   FROM DUAL) settlementdatestr,      TO_CHAR(ism.MATURITYDATE,?) MATURITYDATE ,     ism.maturitydate maturitydatens ,        TO_CHAR(ism.MATURITYENDDATE,?) MATURITYENDDATE ,     TO_CHAR (max(ism.maturityenddate) over(partition by ism.programid), 'fmmm/dd/yy') maxmaturityenddate ,     TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate,    decode(trunc(ism.createddate,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy'))trd,         decode(trunc(ism.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.MATURITYDATE,'fmmm/dd'), TO_CHAR (ism.MATURITYDATE, 'fmmm/dd/yy'))mat,        DECODE(ism.maturitydate,ism.maturityenddate, (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))FROM DUAL),       DECODE(TO_CHAR (ism.maturitydate, 'fmmm'),TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))      FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL),        (SELECT fn_get_dispdate(TO_CHAR (ism.maturitydate,'mm/dd/yyyy'))FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL))) formatmatdate,      ism.AVAILABLECREDIT,  ism.AVAILABLETODAY,  ism.MINAMOUNT  , ism.MAXAMOUNT,     ism.BID, ism.OFFER ,   ism.ACCRUEDINTEREST,NVL((amount*1000 - accruedinterest),0) moneyamt, to_char(ism.asofdate,'fmmm/dd/yy') asofdatestr,       ism.NOTES , ism.TRANSTYPE ,ism.OFFERFLAG ,     ism.ROOTCUSIP,ism.ISSUETYPE,ism.RATEFLAG,ism.AMOUNTFLAG,      isr.COUNTRYCODE,     ism.DISPBIDDISCOUNT ,ism.DISPBIDYIELD  ,ism.DISPOFFERDISCOUNT ,ism.DISPOFFERYIELD,      bookno,bookname  ,ism.status  ,prd.prodcode,      ism.source,ism.REJECTREASON  ,ism.TRADERID  ,ism.TRADERLOGINNAME,ism.SPLOGINID, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.sploginid) sploginname,ism.OFFERINGLIMIT,ism.MINIMUMPIECESIZE,    ism.currencycode,isr.cptype,prd.prodname prodname,trb.bookid      ,isr.MAXAMOUNT ISRMAXAMOUNT ,         nvl(MINSIZE,0) MINSIZE  ,nvl(INCAMOUNT,0) INCAMOUNT       ,       BUYSCNT, salescnt  ,   (Select NVL (SUM (iss.retainedincome), 0) retainedincome  from FO_CP_TRADING_T iss where iss.refissueid=ism.issueid AND STATUS in ('A','SC') AND iss.transtype = '85'   AND trunc(createddate) = to_date(?, 'fmmm/dd/yy' ))   pnl     ,isr.SPREAD, PREMIUM, FEE ,ism.ALLOCATIONFLAG,to_number(prd.sortorder) sortorder     FROM  fo_issues_m ism,        fo_program_m isr, FO_TRADER_BOOKS_M trb, fo_product_m prd , fo_accountmaster_m am , fo_tm_tradestatus_m st      WHERE ism.programid = isr.programid      AND  prd.prodid = ism.producttype AND ism.producttype = isr.producttype      AND trb.BOOKID = isr.DEFAULTBOOKID  AND ism.status = st.statusid   AND ism.ACCTNBR = am.ACCTNBR and ism.refissueid ='0000'   AND am.status = 'Y' AND isr.status = 'Y'     AND PUBLISHED ='Y'     and    SUBACCTCASSII is null   AND ism.status in ('A' )  AND (ism.availablecredit != 0 OR ism.availabletoday    != 0) 
sql.getpublishEcpInvBookView = UPDATE FO_ISSUES_M SET REFISSUEID = ?, OFFERFLAG = ? ,  SETTLE = ?,  MAXAMOUNT = ?, AVAILABLECREDIT = ?, AVAILABLETODAY = ?, OFFER = ?, OFFERYIELD = ?, DISPBIDDISCOUNT =? ,DISPBIDYIELD =?, DISPOFFERDISCOUNT = ?, DISPOFFERYIELD = ?, AVGBID = ? , BID = ? , BIDYIELD = ?,ACCRUEDINTEREST = ? ,  amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - bid), MODIFIEDDATE =to_date(?,?), MODIFIEDBY =?  WHERE ISSUEID = ? AND PRODUCTTYPE = ? AND programid = ?
sql.updateTemplateName=UPDATE fo_template_m set templatename=? WHERE  templateid = ? 
sql.getMaturityDatesOne=SELECT   TO_CHAR (maturitydate, 'mm/dd/yyyy') || '-'|| TO_CHAR (maturityenddate, 'mm/dd/yyyy') matrange	FROM fo_issues_m WHERE status IN ('S')	AND TRANSTYPE ='10' AND issuetype=UPPER('S') AND programid = ? 		
sql.getMaturityDatesTwo=AND ISSUEID not  in (    select  distinct m.issueid  from ( 	  SELECT     issueid, refissueid, transtype   FROM fo_issues_m   WHERE transtype = '10' AND status IN ('A', 'S')   START WITH issueid = ?   CONNECT BY PRIOR issueid = refissueid)t,fo_issues_m m   WHERE m.transtype = '10' AND m.status IN ('A', 'S')   and m.transtype = t.transtype   START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)   CONNECT BY PRIOR m.issueid = m.refissueid   ) 
sql.updateDeleteSecurities = UPDATE  	FO_SECURITIES_M	 set status =? ,  MODIFIEDDATE   		= to_date(?,?),  MODIFIEDBY   			=	?  WHERE  ( ISSUEID = ?  )       
sql.saveRfqData=INSERT INTO FO_CLIENT_RFQ_D( rfqseq, PROGRAMID, ticker, SENDERLOGINID, RECEIVERLOGINID, PRODUCTTYPE, CURRENCYCODE, SETTLEDATE, MATURITYDATE, TRADEAMOUNT, RATE, status,CASSII,createddate ,TRADEVIEW,CLIENTVIEW)  VALUES (?,  ?,  ?,  ?,  ?,  ?,  ?, to_date(?,?), to_date(?,?),?,?,?,?,sysdate,'Y','N') 
sql.getCusipDetails=select amount,ism.producttype,ticker,ism.programId,bid,   TO_CHAR (settlementdate,'fmmm/dd/yy' ) settledate,   TO_CHAR (maturitydate,'fmmm/dd/yy' ) maturitydate   from fo_issues_m ism,fo_program_m fm     where issuetype=? and cusip=?        and refissueid=? and ism.PROGRAMID=fm.PROGRAMID    union    select amount,ism.producttype,ticker,ism.programId,bid,   TO_CHAR (settlementdate,'fmmm/dd/yy' ) settledate,   TO_CHAR (maturitydate,'fmmm/dd/yy' ) maturitydate   from fo_securities_m ism,fo_program_m fm     where issuetype=? and cusip=?        and refissueid=? and ism.PROGRAMID=fm.PROGRAMID
sql.updateAllocationIssueDetails=UPDATE FO_ISSUES_M SET SETTLE = ?, ORGSETTLETDATE = to_date(?,?),SETTLEMENTDATE = to_date(?,?),	DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,BID =?, BIDYIELD =? WHERE REFISSUEID=?   
sql.updateAllocationTradeDetails=UPDATE fo_cp_trading_t SET SETTLE = ?, ORGSETTLETDATE = to_date(?,?),SETTLEMENTDATE = to_date(?,?),	DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,BID =?, BIDYIELD =? WHERE REFISSUEID=?   
sql.updateBuysCusip= UPDATE FO_ISSUES_M set CUSIP =UPPER(?) WHERE refissueid=?
sql.getVenueDetails=select distinct source from vw_cptradehistory_t ORDER BY case SOURCE when 'DOMES' then 1 when 'PORTAL' then 2 when 'MERCURY' then 3 when 'BOOM' then 4 when 'TWEB' then 5 else 6 end  ASC
sql.getCusipMaturityExpDatesMap = SELECT issueid,exdates maturityexpdates FROM FO_issues_M ism, fo_program_m isr WHERE ism.programid = isr.programid and ism.status ='Y' and isr.status ='Y'
sql.getCusipMaturities = SELECT to_char(maturitydate, ?) min_mdate, to_char(maturityenddate, ?) max_mdate FROM FO_ISSUES_M WHERE cusip = ? and transtype='10' AND maturityenddate > SYSDATE AND TRADINGFLAG='Y'


#######################################################################################################################################
------------------------------------------------------- CD Product -------------------------------------------------------------------------
########################################################################################################################################
sql.getCDGridsInit = SELECT * FROM (SELECT a.* , count(*) over() as cnt, ROWNUM rnum FROM ( SELECT isr.issuername, isr.shortname shortname, isr.issuerid, isr.maxamount isrmaxamount, NVL(isr.incamount, 1000) incamount, isr.minsize minsize, isr.cusipbaseone, isr.TICKER, to_char(cdis.settlementdate, 'fmmm/dd/yy') setdate, to_char(cdis.dateddate, 'fmmm/dd/yy') datdate, cdis.* FROM fo_program_m isr
sql.getCDGridsOne =  WHERE cdis.programid = isr.programid AND isr.status = 'Y' AND cdis.status = 'A' AND cdis.refIssueid = '0000' AND cdis.transType='10'
sql.getCDGridsFinal =   order by isr.issuername ASC  ) a ) 
sql.saveCDGridDetails = INSERT INTO fo_cdgrid_m (amount, availablecredit, availabletoday, minamount, maxamount, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1mmat, rate2mmat, rate3mmat, rate4mmat, rate5mmat, rate6mmat, rate7mmat, rate8mmat, rate9mmat, rate10mmat, rate11mmat, rate12mmat, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, BID, traderloginname, published, offerflag, deskid, prodid,ACCTNBR, settle,TICKETNUMBER) VALUES (?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'N', 'Y', ?, ?,?,?,? )
sql.updateCDGridDetails = UPDATE fo_cdgrid_m SET availablecredit = ?, amountflag = SIGN(? - availablecredit), amount = ?, availabletoday = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?), offeringlimit = ?, minimumpiecesize = ?, oneweek = ?, settlementdate = TO_DATE (?, ?), DATEDDATE = TO_DATE (?, ?), maturitydate = TO_DATE (?, ?), rate1m = ?, rate2m = ?, rate3m = ?, rate4m = ?, rate5m = ?, rate6m = ?, rate7m = ?, rate8m = ?, rate9m = ?, rate10m = ?, rate11m = ?, rate12m = ?, rateflag = case when sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) <> 0 then 'W_'||sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) <> 0 then '1_'||sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) <> 0 then '2_'||sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) <> 0 then '3_'||sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) <> 0 then '4_'||sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) <> 0 then '5_'||sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) <> 0 then '6_'||sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) <> 0 then '7_'||sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) <> 0 then '8_'||sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) <> 0 then '9_'||sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) <> 0 then '10_'||sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) <> 0 then '11_'||sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) <> 0 then '12_'||sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) end ||':' , status = ?, offerflag = ?, settle = ? WHERE issueid = ? AND producttype = ? AND programid = ? AND status = 'A'

sql.saveECDGridDetails = INSERT INTO fo_cdgrid_m (amount, availablecredit, availabletoday, minamount, maxamount, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneday, onedaymat, twoday, twodaymat, oneweek, oneweekmat, twoweek, twoweekmat, threeweek, threeweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1mmat, rate2mmat, rate3mmat, rate4mmat, rate5mmat, rate6mmat, rate7mmat, rate8mmat, rate9mmat, rate10mmat, rate11mmat, rate12mmat, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, BID, traderloginname, published, offerflag, deskid, prodid,ACCTNBR, settle,TICKETNUMBER) VALUES (?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Y', 'Y', ?, ?,?,?,? )
sql.updateECDGridDetails = UPDATE fo_cdgrid_m SET availablecredit = ?, amountflag = SIGN(? - availablecredit), amount = ?, availabletoday = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?), offeringlimit = ?, minimumpiecesize = ?, oneday = ?,twoday = ?, oneweek = ?, twoweek = ?, threeweek=?, settlementdate = TO_DATE (?, ?), DATEDDATE = TO_DATE (?, ?), maturitydate = TO_DATE (?, ?), rate1m = ?, rate2m = ?, rate3m = ?, rate4m = ?, rate5m = ?, rate6m = ?, rate7m = ?, rate8m = ?, rate9m = ?, rate10m = ?, rate11m = ?, rate12m = ?, rateflag = case when sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) <> 0 then 'W_'||sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) <> 0 then '1_'||sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) <> 0 then '2_'||sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) <> 0 then '3_'||sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) <> 0 then '4_'||sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) <> 0 then '5_'||sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) <> 0 then '6_'||sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) <> 0 then '7_'||sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) <> 0 then '8_'||sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) <> 0 then '9_'||sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) <> 0 then '10_'||sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) <> 0 then '11_'||sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) <> 0 then '12_'||sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) end ||':' , status = ?, offerflag = ?, settle = ? WHERE issueid = ? AND producttype = ? AND programid = ? AND status = 'A'
sql.deleteGridTemplates = UPDATE fo_cdgrid_template_m SET status = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?) WHERE producttype = ?
sql.saveTemplateCDGrids = INSERT INTO fo_cdgrid_template_m (amount, availablecredit, availabletoday, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, bid, traderloginname, published, offerflag, deskid, prodid, acctnbr, settle, ticketnumber ) VALUES (?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'N', 'Y', ?, ?, ?, ?, ? )
sql.saveTemplateECDGrids = INSERT INTO fo_cdgrid_template_m (amount, availablecredit, availabletoday, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, bid, traderloginname, published, offerflag, deskid, prodid, acctnbr, settle, ticketnumber, twoweek, twoweekmat, threeweek, threeweekmat, oneday,onedaymat, twoday, twodaymat ) VALUES (?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'N', 'Y', ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
sql.publishCDGrids = UPDATE fo_cdgrid_m SET published = ?, offerflag = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE producttype = ? AND issueid = ?
sql.deleteCDGrid = UPDATE fo_cdgrid_m SET status = 'D', offerflag = 'N', modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.deleteFRCDGrid = UPDATE fo_frgrid_m SET status = 'D', offerflag = 'N', modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?

sql.getFRCDGridsOne =  WHERE cdis.programid = isr.programid AND isr.status = 'Y' AND cdis.status = 'A' AND cdis.refIssueid = '0000' 
sql.saveTemplateFRCDGrids = INSERT INTO fo_frissues_m (amount, availablecredit, availabletoday, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, bid, traderloginname, published, offerflag, deskid, prodid, acctnbr, settle, ticketnumber, twoweek, twoweekmat, threeweek, threeweekmat, oneday,onedaymat, twoday, twodaymat ) VALUES (?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'N', 'Y', ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
sql.updateFRCDGridDetails = UPDATE fo_frgrid_m SET availablecredit = ?, amountflag = SIGN(? - availablecredit), amount = ?, availabletoday = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?), offeringlimit = ?, minimumpiecesize = ?, oneweek = ?, settlementdate = TO_DATE (?, ?), DATEDDATE = TO_DATE (?, ?), maturitydate = TO_DATE (?, ?), rate1m = ?, rate2m = ?, rate3m = ?, rate4m = ?, rate5m = ?, rate6m = ?, rate7m = ?, rate8m = ?, rate9m = ?, rate10m = ?, rate11m = ?, rate12m = ?, rateflag = case when sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) <> 0 then 'W_'||sign(? - REGEXP_SUBSTR (oneweek,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) <> 0 then '1_'||sign(? - REGEXP_SUBSTR (rate1m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) <> 0 then '2_'||sign(? - REGEXP_SUBSTR (rate2m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) <> 0 then '3_'||sign(? - REGEXP_SUBSTR (rate3m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) <> 0 then '4_'||sign(? - REGEXP_SUBSTR (rate4m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) <> 0 then '5_'||sign(? - REGEXP_SUBSTR (rate5m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) <> 0 then '6_'||sign(? - REGEXP_SUBSTR (rate6m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) <> 0 then '7_'||sign(? - REGEXP_SUBSTR (rate7m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) <> 0 then '8_'||sign(? - REGEXP_SUBSTR (rate8m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) <> 0 then '9_'||sign(? - REGEXP_SUBSTR (rate9m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) <> 0 then '10_'||sign(? - REGEXP_SUBSTR (rate10m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) <> 0 then '11_'||sign(? - REGEXP_SUBSTR (rate11m,'[^:]+',1,1)) end ||':'|| case when sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) <> 0 then '12_'||sign(? - REGEXP_SUBSTR (rate12m,'[^:]+',1,1)) end ||':' , status = ?, offerflag = ?, settle = ? WHERE issueid = ? AND producttype = ? AND programid = ? AND status = 'A'
sql.saveFRCDGridDetails = INSERT INTO fo_frgrid_m (amount, availablecredit, availabletoday, minamount, maxamount, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneday, onedaymat, twoday, twodaymat, oneweek, oneweekmat, twoweek, twoweekmat, threeweek, threeweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1mmat, rate2mmat, rate3mmat, rate4mmat, rate5mmat, rate6mmat, rate7mmat, rate8mmat, rate9mmat, rate10mmat, rate11mmat, rate12mmat, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, BID, traderloginname, published, offerflag, deskid, prodid,ACCTNBR, settle,TICKETNUMBER) VALUES (?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Y', 'Y', ?, ?,?,?,? )
sql.publishFRCDGrids = UPDATE fo_frgrid_m SET published = ?, offerflag = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE producttype = ? AND issueid = ?

sql.deleteECPGridTemplates = UPDATE fo_ecpgrid_template_m SET status = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?) WHERE producttype = ?
sql.updateMatDate= modifieddate = to_date(?,?),  modifiedby =	?   WHERE issueid = ?
sql.updateECPGridAmount=UPDATE fo_ecpgrid_m SET offerflag = ?, availablecredit = ?, offeringlimit = ?, availabletoday = ?, amountflag = SIGN (? - availablecredit), modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.getCDInventoriesInit = SELECT a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY TO_DATE (a.maturitydate, 'mm/dd/yyyy' )) rnum FROM (SELECT  ism.buyscnt, ism.salescnt,  ism.retainedincome, ism.producttype producttype, ism.ISSUENUMBER, ism.issuetype, ism.cusip, isr.programid programid, isr.cassii, isr.issuername issuername, am.shortname, 'U' cpaction, ism.dispbiddiscount coupon, ism.price, ism.dispbidyield yield, isr.ticker ticker, prd.prodname prodname, prd.prodid prodid, trb.bookno bookno, trb.bookname bookname  ,ism.bid bid, ism.issueid, ism.refissueid, prd.prodcode, trb.bookid, ism.amount amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, ism.availablecredit availablecredit, ism.availabletoday availabletoday, NVL (ism.offer, 0) offer, NVL (ism.offeryeild, 0) offeryeild, ism.dispofferyield, ism.currencycode, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') mat, DECODE (TRUNC (ism.dateddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.dateddate, 'fmmm/dd' ), TO_CHAR (ism.dateddate, 'fmmm/dd/yy') ) formatdateddate, to_char(ism.dateddate, 'fmmm/dd/yy') dateddate,isr.cptype, ism.offerflag, NVL (ism.amountflag, 0) amountflag, NVL (ism.rateflag, 0) rateflag, ism.transtype, ism.createddate, ism.accruedinterest, ism.maxamount maxamount, ism.status, (SELECT NVL (SUM (iss.retainedincome), 0) retainedincome FROM fo_cd_trading_t iss WHERE iss.refissueid = ism.issueid AND status IN ('A') AND iss.transtype = '85' AND TRUNC (createddate) = TO_DATE (?, 'fmmm/dd/yy')) pnl, st.descr, ism.settle settle,TO_CHAR ( ism.SETTLEMENTDATE, 'fmmm/dd/yy') settledate
sql.getCDInventoriesInitOne = 	 , ism.maturitydateflag, ism.tenortype, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate,TO_CHAR ( ism.SETTLEMENTDATE, 'fmmm/dd/yy') settlementdate, ism.dispsettlementdate dispsettlementdate, ism.dispmaturitydate formatmatdate, ism.published FROM fo_cdissues_m ism, 
sql.getCDInventoriesInitTwo = 	 , DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate,TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ssettlementdate, DECODE (ism.maturitydate, ism.maturitydate, DECODE (TRUNC (ism.maturitydate, 'YYYY' ), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturitydate, 'fmmm'), DECODE (TRUNC (ism.maturitydate, 'YYYY' ), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fm/dd/yy' ) ) || '-' || DECODE (TRUNC (ism.maturitydate, 'YYYY' ), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fm/dd/yy' ) ), DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) ) ) formatmatdate FROM fo_frissues_m ism,
sql.getCDInventoriesThree = fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL
sql.getCDInventoriesFinal  =    ORDER BY TO_DATE (maturitydate, 'mm/dd/yyyy')) a
sql.updateCDInventory = UPDATE fo_cdissues_m SET rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?, amount = (amount - ?), availablecredit = (availablecredit - ?), buyscnt = (buyscnt - 1) WHERE issueid = ? AND cusip = ?
sql.cancelCDTrade = UPDATE fo_cdissues_m SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND cusip = ?
sql.cancelCDChildTrades = UPDATE fo_cdissues_m SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE refissueid = ? AND cusip = ? AND TRIM (status) = TRIM (?)
sql.cancelCDSellTrade= UPDATE fo_cd_trading_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.cancelCDSellHistTrade= UPDATE fo_cd_simult_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.cancelCDChildHistSells = UPDATE fo_cd_simult_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE refissueid = ? AND TRIM (status) = TRIM (?)
sql.cancelCDChildSells = UPDATE fo_cd_trading_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE refissueid = ? AND TRIM (status) = TRIM (?)
sql.updateCDBuyAvailable = UPDATE fo_cdissues_m SET availabletoday = ?, availablecredit = ?, salescnt = ?, offerflag = ?, amountflag = SIGN (? - availabletoday), modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.getFRBuyDetails=SELECT cdis.securitytype, '' voicetrade, '' voiceinvestor, cdis.callable, cdis.offer, cdis.offeryeild, cdis.dispofferdiscount, cdis.dispofferyield, cdis.programid, '' SOURCE, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon, cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, '' sploginid, '' sploginname, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy') originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, cdis.salescnt, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, NVL ( ( (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) ) / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN ( ( (amount * 1000) * (TRUNC (cs.prevpaymentdate) - cdis.issuedate) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), ( (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360) ) todayaccruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, st.descr, prd.prodcode, bookno, bookname, am.acctname, isr.minsize FROM fo_frissues_m cdis, fo_program_m isr, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid  AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+) AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1
sql.getFRSellDetails=SELECT cdis.securitytype, cdis.voicetrade, cdis.voiceinvestor, cdis.callable, cdis.offer, cdis.offeryeild, cdis.dispofferdiscount, cdis.dispofferyield, cdis.programid, cdis.SOURCE, cdis.issueid, cdis.status, cdis.issuetype, cdis.issuenumber, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.rolltype, cdis.coupon, cdis.refissueid, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.libortype, cdis.rolldate, cdis.acctnbr, cdis.producttype, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = cdis.sploginid) sploginname, cdis.bidyeild, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy') originalsettlementdate, cdis.allocationflag, cdis.ticketnumber, cdis.salescnt, isr.issuername, isr.shortname isrshrtname, isr.cusipbaseone, isr.ticker, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, NVL ( ( (amount * 1000) * (TRUNC (SYSDATE) - cs.prevpaymentdate) * NVL (cs.allin, 0) ) / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN ( ( (amount * 1000) * (TRUNC (cs.prevpaymentdate) - cdis.issuedate) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), ( (amount * 1000) * (TRUNC (SYSDATE) - cdis.issuedate) * NVL (cdis.bid, 0) ) / (100 * 360) ) todayaccruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.issuedate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, cs.libor, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, st.descr, prd.prodcode, bookno, bookname, am.acctname, isr.minsize FROM fo_trading_t cdis, fo_program_m isr, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid = isr.programid AND cdis.acctnbr = am.acctnbr AND subacctcassii IS NULL AND TRIM (cdis.status) = st.statusid AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid AND isr.status = 'Y' AND st.status = 'Y' AND am.status = 'Y' AND cdis.issueid = cs.issueid(+) AND TRUNC (SYSDATE) BETWEEN cs.prevpaymentdate(+) AND cs.paymentdate(+) AND cs.issueid(+) = cdis.issueid AND cs.sortorder(+) = 1
sql.cancelFRTrade=UPDATE fo_frissues_m SET status = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND cusip = ?
sql.updateFRTrade = UPDATE fo_frissues_m SET modifieddate = TO_DATE (?, ?), modifiedby = ?, amount = (amount - ?), availablecredit = (availablecredit - ?), buyscnt = (buyscnt - 1) WHERE issueid = ? AND cusip = ?
sql.cancelFRSell=UPDATE fo_trading_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.cancelFRHistSell=UPDATE fo_simult_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.updateFRBuyAvailable = UPDATE fo_frissues_m SET availabletoday = ?, availablecredit = ?, salescnt = ?, offerflag = ?, amountflag = SIGN (? - availabletoday), modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.getECPGridsInit = SELECT * FROM (SELECT a.* , count(*) over() as cnt, ROWNUM rnum FROM ( SELECT isr.issuername, isr.shortname shortname, isr.issuerid, isr.maxamount isrmaxamount, NVL(isr.incamount, 1000) incamount, isr.minsize minsize, isr.cusipbaseone, isr.TICKER, to_char(cdis.settlementdate, 'fmmm/dd/yy') setdate, cdis.* FROM fo_program_m isr
sql.getECPGridsOne =  WHERE cdis.programid = isr.programid AND isr.status = 'Y' AND cdis.status = 'A' AND cdis.refIssueid = '0000' AND cdis.transType='10'
sql.saveECPGridDetails = INSERT INTO fo_ecpgrid_m (amount, availablecredit, availabletoday, minamount, maxamount, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1mmat, rate2mmat, rate3mmat, rate4mmat, rate5mmat, rate6mmat, rate7mmat, rate8mmat, rate9mmat, rate10mmat, rate11mmat, rate12mmat, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, BID, traderloginname, published, offerflag, deskid, prodid,ACCTNBR, settle,TICKETNUMBER, twoweek, twoweekmat, threeweek,threeweekmat, oneday, onedaymat, twoday, twodaymat) VALUES (?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Y', 'Y', ?, ?,?,?,?,?, ?, ?, ?, ?, ?,?,? )
sql.updateECPGridDetails = UPDATE fo_ecpgrid_m SET availablecredit = ?, amountflag = SIGN (? - availablecredit), amount = ?, availabletoday = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?), offeringlimit = ?, minimumpiecesize = ?, oneweek = ?, twoweek = ?, threeweek = ?, oneday = ?, twoday = ?, settlementdate = TO_DATE (?, ?), rate1m = ?, rate2m = ?, rate3m = ?, rate4m = ?, rate5m = ?, rate6m = ?, rate7m = ?, rate8m = ?, rate9m = ?, rate10m = ?, rate11m = ?, rate12m = ?, offerflag = 'Y' WHERE producttype = ? AND programid = ? AND currencycode = ? AND issueid = ? AND status = 'A'
sql.deleteECPGrid = UPDATE fo_ecpgrid_m SET status = 'D', offerflag = 'N', modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ?
sql.saveECPGridTemplateDetails = INSERT INTO fo_ecpgrid_template_m (amount, availablecredit, availabletoday, minamount, maxamount, createdby, createddate, cusip, issueid, refissueid, issuenumber, programid, modifiedby, modifieddate, producttype, offeringlimit, minimumpiecesize, oneweek, oneweekmat, settlementdate, maturitydate, maturityenddate, originalsettlementdate, dateddate, rate1mmat, rate2mmat, rate3mmat, rate4mmat, rate5mmat, rate6mmat, rate7mmat, rate8mmat, rate9mmat, rate10mmat, rate11mmat, rate12mmat, rate1m, rate2m, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, status, currencycode, transtype, price, yeild, bid, traderloginname, published, offerflag, deskid, prodid, acctnbr, settle, ticketnumber, twoweek,twoweekmat,  threeweek,threeweekmat,  oneday,onedaymat,  twoday,twodaymat  ) VALUES (?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Y', 'Y', ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
sql.publishECPGrids = UPDATE fo_ecpgrid_m SET published = ?, offerflag = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE producttype = ? AND issueid = ?
sql.getECPGridsFinal =   order by isr.issuername ASC  ) a ) 
sql.saveCDInventory=INSERT INTO fo_cdissues_m (issueid, programid, refissueid, transtype, issuenumber, afr, amount, producttype, cusip, settle, settlementdate, maturitydate, maturityenddate, dispsettlementdate, dispmaturitydate, availablecredit, availabletoday, status, bid, offer, bidyeild, offerflag, published, minamount, maxamount, accruedinterest, spreadretain, retainedincome, notes, salescr, trmarkup, salescramount, trmarkupamount, totalsalescr, traderid, traderloginname, modifieddate, modifiedby, createddate, createdby, currencycode, asofdate, issuedate, rejectreason, SOURCE, deskid, prodid, offeringlimit, minimumpiecesize, acctnbr, dispbiddiscount, dispbidyield, dispofferdiscount, dispofferyield, avgbid, price, tenortype, issuetype, maturitydateflag, dateddate, coupon, rootcusip, originalsettlementdate, ticketnumber, buyscnt, salescnt, investoracctnbr, interestamount, allocationflag, prevpaymentdate ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), fn_get_dispdate (?), fn_get_dispdate (?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, ?, TO_DATE (?, ?),TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?) )
sql.updateCDInvDetails=UPDATE fo_cdissues_m SET cusip = ?, afr = ?, settle = ?, originalsettlementdate = TO_DATE (?, ?), prevpaymentdate = TO_DATE (?, ?), settlementdate = TO_DATE (?, ?), dateddate = TO_DATE (?, ?), maturitydate = TO_DATE (?, ?), maturityenddate = TO_DATE (?, ?), dispsettlementdate = fn_get_dispdate (?), dispmaturitydate = fn_get_dispdate (?), availablecredit = ?, amount = ?, maxamount = ?, accruedinterest = ?, status = ?, bid = ?, coupon = ?, bidyeild = ?,dispofferyield=?,offer=?, notes = ?, traderid = ?, traderloginname = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?, asofdate = TO_DATE (?, ?), dispbiddiscount = ?, dispbidyield = ?, maturitydateflag = ?, buyscnt = ?, salescnt = ?, avgbid = ?, price = ?, interestamount = ? WHERE issueid = ?
sql.updateBuyCusip=UPDATE fo_cdissues_m SET cusip = ? WHERE issueid = ? OR refissueid = ?
sql.updateSellCusip=UPDATE fo_cd_trading_t SET cusip = ? WHERE refissueid = ? OR refissueid IN (SELECT issueid FROM fo_cd_trading_t WHERE refissueid = ?)
sql.updateCDAvgBid={call sp_update_cdissues_avgbid(sysdate,?)}
sql.publishCDBookViewInv = UPDATE FO_CDISSUES_M SET ACCRUEDINTEREST=?, PRICE=?, AFR =?, BIDYEILD =?, DISPBIDYIELD =?, OFFER=?, OFFERYEILD=?, AVAILABLETODAY=?, DISPOFFERYIELD=?, OFFERFLAG=?, TRADERID=?, TRADERLOGINNAME=?, MODIFIEDDATE=to_date(?,?), MODIFIEDBY=? where issueid = ?
sql.saveCDSell=INSERT INTO fo_cd_trading_t (issueid, programid, refissueid, transtype, issuenumber, afr, amount, producttype, cusip, settle, settlementdate, maturitydate, maturityenddate, availablecredit, availabletoday, status, bid, offer, bidyeild, offerflag, published, minamount, maxamount, accruedinterest, spreadretain, retainedincome, notes, salescr, trmarkup, salescramount, trmarkupamount, totalsalescr, traderid, traderloginname, sploginid, modifieddate, modifiedby, createddate, createdby, currencycode, asofdate, issuedate, rejectreason, SOURCE, deskid, prodid, offeringlimit, minimumpiecesize, acctnbr, dispbiddiscount, dispbidyield, dispofferdiscount, dispofferyield, price, tenortype, issuetype, maturitydateflag, dateddate, coupon, rootcusip, originalsettlementdate, ticketnumber, interestamount, voicetrade, voiceinvestor ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, TO_DATE (?, ?), ?, ?, ?, ? )
sql.saveFRCDSell=INSERT INTO FO_TRADING_T (ISSUEID, programid, REFISSUEID, TRANSTYPE, ISSUENUMBER, AMOUNT, PRODUCTTYPE, CUSIP, SETTLE, SETTLEMENTDATE, MATURITYDATE, AVAILABLECREDIT, AVAILABLETODAY, STATUS, BID, OFFER, BIDYEILD, MINAMOUNT, MAXAMOUNT, ACCRUEDINTEREST, SPREADRETAIN, RETAINEDINCOME, TRMARKUP, SALESCRAMOUNT, TRMARKUPAMOUNT, TOTALSALESCR, TRADERID, TRADERLOGINNAME, MODIFIEDDATE, MODIFIEDBY, CREATEDDATE, CREATEDBY, CURRENCYCODE, ISSUEDATE, DESKID, PRODID, ACCTNBR, DISPBIDDISCOUNT, DISPBIDYIELD, DISPOFFERDISCOUNT, DISPOFFERYIELD, PRICE, ISSUETYPE, dateddate, coupon,rootcusip, originalsettlementdate, TICKETNUMBER, SALESCNT, INVESTORACCTNBR, INTERESTAMOUNT, ALLOCATIONFLAG, PREVPAYMENTDATE, SECURITYTYPE, CALLABLE, LIBORTYPE, ROLLDATE, ROLLTYPE, REJECTREASON, SOURCE, SPLOGINID, DISPSETTLEMENTDATE, DISPMATURITYDATE,voicetrade,voiceInvestor ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, to_date(?,?), to_date(?,?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, to_date(?,?), ?, to_date(?,?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, to_date(?,?), ?, ?, to_date(?,?), ?, ?, ?, ?,?, to_date(?,?), ?, ?, ?, ?, ?, ?, ?, ?, fn_get_DISPDATE(?), fn_get_DISPDATE(?), ?, ? )
sql.updateFRInventoryDetails=UPDATE FO_FRISSUES_M SET CUSIP=?, SETTLE=?, originalsettlementdate=to_date(?,?), PREVPAYMENTDATE=to_date(?,?), SETTLEMENTDATE=to_date(?,?), DATEDDATE=to_date(?,?), MATURITYDATE=to_date(?,?), AVAILABLECREDIT=?, AVAILABLETODAY=?, AMOUNT=?, MAXAMOUNT=?, ACCRUEDINTEREST=?, STATUS=?, BID=?, COUPON = ?, BIDYEILD=?, TRADERID=?, TRADERLOGINNAME=?, MODIFIEDDATE=to_date(?,?), MODIFIEDBY=?, DISPBIDDISCOUNT=?, DISPBIDYIELD=?, BUYSCNT=?, SALESCNT=?, PRICE=?, INTERESTAMOUNT=? where issueid=?

#######################################################################################################################################
------------------------------------------------------- Maintenance  -------------------------------------------------------------------------
########################################################################################################################################

sql.getMasterAccountDetails = SELECT m.shortname, m.acctnbr, m.refacctnbr, m.acctname, s.description socialcode, s.socialid socialid, remarks, DECODE (m.accttypeid, 'C', 'Investor', 'Issuer') accttype, m.accttypeid accttypeid FROM fo_masteraccounts_m m, fo_socialcodes_m s WHERE m.status = 'Y' AND s.socialid = m.socialcode
sql.insertMasterAcct = insert into FO_MASTERACCOUNTS_M  (COMPANYID,COMPANYNAME,SHORTNAME,ACCTNBR,REFACCTNBR,ACCTNAME,SOCIALCODE,ACCTTYPEID,REMARKS,CREATEDBY,CREATEDDATE,STATUS)values(?,?,?,?,?,?,?,?,?,?,sysdate,'Y')	  					
sql.updateMasterAcct = UPDATE FO_MASTERACCOUNTS_M SET    ACCTNAME = ?,COMPANYNAME = ?,SHORTNAME = ?,REFACCTNBR = ?,SOCIALCODE = ?,ACCTTYPEID = ?,REMARKS = ?, MODIFIEDBY = ?, MODIFIEDDATE = SYSDATE, STATUS = 'Y' WHERE  ACCTNBR = ?
sql.deleteMasterAcct = UPDATE  FO_MASTERACCOUNTS_M SET     STATUS   	= 'N',modifiedby   = ?, modifieddate = sysdate WHERE   acctnbr	= ?	 
sql.getInvestorAcounts =  SELECT   acctname, acctnbr, a.shortname,a.companyid, fn_decrypt (cassiiacctnbr, 1) cassiiacctnbr, (select    listagg(fn_decrypt (b.subacctcassii, 1), ',') within group(order by fn_decrypt (b.subacctcassii, 1)) subacctcassii from fo_accountmaster_m b where fn_decrypt (b.cassiiacctnbr, 1) = fn_decrypt (a.cassiiacctnbr, 1)  and b.defaultacct = 'N' and b.status = 'Y') subacctcassii, spn, defaultacct FROM fo_accountmaster_m a WHERE accttype = ? AND a.status = 'Y' 
sql.setAccountInfo = INSERT INTO fo_accountmaster_m (acctnbr, companyid,  cassiiacctnbr, acctname, accttypeid, parentid, legalentity, location, acctnatureflaG, domintlflag,  settleid, createdby, modifiedby, createddate, modifieddate, subacctflag,  shortname,  spn,  defaultacct, programid,  accttype, status) VALUES  (?,?, fn_encrypt(?,1), ?,'Y','0000','43839171',?,'R','D',?,?,?,to_date(?,?), to_date(?,?),'Y',?,?,?,?,?,'Y')     
sql.resetAccountInfo =  UPDATE  fo_accountmaster_m  SET acctname   = ?, cassiiacctnbr = fn_encrypt(?,1), subacctcassii = fn_encrypt(?,1), accttypeid   = 'Y', legalentity   = '43839171', shortname   = ?, spn   = ?, defaultacct   = 'Y', programid   = ?, modifiedby   = ?, modifieddate   = to_date(?,?)                            
sql.deleteInvestorAccount =  UPDATE  fo_accountmaster_m SET STATUS = 'N',  modifiedby = ?,  modifieddate   = to_date(?,?) WHERE   acctnbr	= ?  AND  	accttypeid	= 'Y'
sql.subAccountDetails = INSERT INTO fo_accountmaster_m (acctnbr, companyid, cassiiacctnbr, SUBACCTCASSII, acctname, accttypeid, parentid, legalentity, createdby, modifiedby, createddate, modifieddate, subacctflag,  shortname, programid, accttype, status) VALUES (?,?,fn_encrypt(?,1), fn_encrypt(?,1), ?,'Y','0000',?,?,?,to_date(?,?), to_date(?,?),'Y',?,?,?,'Y') 
sql.viewMasterIssuerDetails = select i.issuerid, i.parentid, issuername,issueraccount,masteraccount,countrycode,phone,email,groupemail,positionlimit,threshold,i.issuercode ,ma.acctname  FROM   FO_ISSUERMASTER_M i, fo_masteraccounts_m ma where  i.masteraccount = ma.refacctnbr and i.status = 'Y' AND ma.status='Y'	 
sql.insertMasterIssuer = INSERT INTO FO_ISSUERMASTER_M (issuerid, issuercode, ISSUERNAME,ISSUERACCOUNT, MASTERACCOUNT, POSITIONLIMIT,THRESHOLD,PARENTID,phone,email,groupemail,CREATEDDATE, CREATEDBY,STATUS,COUNTRYCODE)  VALUES(?,?,UPPER(?),?,?,?,?,?,?,?,?,sysdate,?,?,?)
sql.insertMstrAcctIssuer = INSERT INTO fo_accountmaster_m (acctnbr,companyid,cassiiacctnbr, acctname, accttypeid,parentid,legalentity, acctnatureflaG,domintlflag, createdby, modifiedby, createddate, modifieddate, subacctflag, shortname, spn, defaultacct, programid,accttype, status)  VALUES  (?,?,fn_encrypt(?,1),?,?,?,?,?,?,?,?,sysdate,sysdate,?,?,?,?,?,?,?)
sql.updateMasterIssuer = UPDATE fo_issuermaster_m	set	  ISSUERNAME = ?,  ISSUERACCOUNT= ?,    masteraccount  = ?, issuercode  = ?, positionlimit = ?,   threshold= ?, PARENTID = ?,phone = ? ,email = ?,groupemail= ?,COUNTRYCODE =?  where  issuerid =?
sql.updateMstrAcctIssuer =UPDATE  fo_accountmaster_m	 SET     acctname   = ?,  cassiiacctnbr = fn_encrypt(?,1),  subacctcassii = fn_encrypt(?,1),  accttypeid   = ?,    shortname   = ?,    spn   = ?,    defaultacct   = ?,     programid   = ?,    modifiedby   = ?,    modifieddate   = sysdate  	 WHERE   programid=?    AND     companyid=? AND     status=? 	    		         
sql.deleteMstrIssuer = UPDATE FO_ISSUERMASTER_M  SET STATUS = 'C' WHERE issuerid = ?
sql.getProgramDetails= SELECT i.countrycode, i.programid, s.issuerid, NVL ((SELECT issuername FROM fo_issuermaster_m WHERE issuerid = s.parentid), i.issuername) parentname, i.calendartype, i.programacronym, i.issuername, i.ticker,i.program, i.bbticker, i.twticker, i.cassii, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, i.cusipisalgorithmic, i.sandp, i.moodyrating, i.shortname, i.producttype, p.prodcode prodcode, p.prodname prodname, i.issuertype, i.cptype, i.traderid, i.sectraderid, i.defaultbookid, TO_CHAR (i.modifieddate, 'Mon dd, yyyy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'Y') createddate, i.createdby, i.maxnofdays, i.masteracctnumber,i.ipa_issuerid ipaissuerid, i.ipa_programid ipaprogramid, i.status, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = traderid) primarytradername, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = sectraderid) sectradername, NVL ((SELECT threshold FROM fo_issuer_creditlimit_m WHERE programid = i.programid AND producttype = i.producttype), 0 ) threshold, NVL ((SELECT creditlimit FROM fo_issuer_creditlimit_m WHERE programid = i.programid AND producttype = i.producttype), 0 ) creditlimit, i.isin, i.sedol, NVL (incamount, 0) incamount, i.minsize, i.maxamount, ipd.ipa_issuerid, ipd.ipa_programid, ipd.ipa_id
sql.getProgramTables= FROM fo_program_m i, fo_product_m p, fo_issuermaster_m s, fo_ipa_ticker_data ipd WHERE i.producttype = p.prodid AND p.status = 'Y' AND i.status = 'Y' AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (i.issuerid)) AND ipd.programid(+) = i.programid
sql.getProgramViewDet= (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, ltsandp, ltfitch, ltmoody, othertraderids, rating, domicile, industry, creditwatch, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, coupon, spread, i.ipa_number, i.dealerrelease, i.notes, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, allin, traderecap
sql.saveProgramDetails = INSERT INTO fo_program_m (programid, issuerid, issuername,program, ticker, bbticker, twticker, cassii, cusipbaseone, cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, producttype, issuertype, cptype, traderid, sectraderid, othertraderids, defaultbookid, rating, domicile, industry, creditwatch, maxamount, spread, minsize, coupondate, coupon, offerlimit, notes, fitchrating, epims, dateopened, masteracctnumber, modifieddate, modifiedby, createddate, createdby, ipa_number, dealerrelease, status, incamount, maxnofdays, traderecap, calendartype,isin, sedol,ipa_issuerid, ipa_programid, countrycode ) VALUES (?, ?, ?,?, UPPER (?), UPPER (?), UPPER (?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?,?,?, ?, ?, ? )
sql.viewTraderBooksDetails =  SELECT TRADERID,BOOKID,BOOKNO,BOOKCODE,DESCRIPTION,DEPARTMENT,STATUS,BOOKNAME,PRODID  FROM   fo_trader_books_m	 WHERE STATUS='Y'
sql.saveTraderBooksDetails = INSERT INTO  fo_trader_books_m  (traderId,bookname,bookid,bookNo,bookCode, description,  department, prodid, createdby, modifiedby,createddate, modifieddate, status) VALUES  (?,?,?,?,?,?,?,?,?,?,to_date(?,?), to_date(?,?),?)
sql.editTraderBooksDetails = UPDATE fo_trader_books_m	set  traderId =?,   bookName =?, bookNo =?, bookCode =?,  description =?,  department=?,  status =?,  modifiedby =?,  modifieddate= to_date(?,?), prodid=?  where  bookId =?           	 
sql.deleteTraderBooksDetails = DELETE FROM   fo_trader_books_m WHERE  BOOKID=?
sql.viewSalesBooksDetails =SELECT * FROM (SELECT a.* , count(*) over() as cnt, ROWNUM rnum FROM ( SELECT p.*, fn_decrypt(q.loginname,1) loginname FROM FO_SALES_BOOKS_M p, fo_member_m q WHERE p.STATUS='Y' and p.salespersonid=q.loginid 
sql.saveSaleBooksDetails = INSERT INTO FO_SALES_BOOKS_M ( salespersonId,bookname,bookid,bookNo,bookCode, description,createdby, modifiedby,createddate, modifieddate, status) VALUES (?,?,?,?,?,?,?,?,to_date(?,?), to_date(?,?),?)
sql.saveCreditLimits =      INSERT INTO FO_ISSUER_CREDITLIMIT_M  (programid, PRODUCTTYPE,  CREDITLIMIT, THRESHOLD,   MODIFIEDDATE , MODIFIEDBY , CREATEDDATE ,  CREATEDBY)  VALUES  (?,?,?,?,to_date(?,?),?,to_date(?,?),?)
sql.updateCreditLimits =      UPDATE FO_ISSUER_CREDITLIMIT_M  SET CREDITLIMIT = ?, THRESHOLD = ?, MODIFIEDDATE = to_date(?, ?),  MODIFIEDBY = ?  WHERE 	programid = ? AND PRODUCTTYPE = ?  
sql.deleteCreditLimits = DELETE FROM FO_ISSUER_CREDITLIMIT_M WHERE 	programid = ?	 AND PRODUCTTYPE = ?
sql.editSaleBooksDetails = UPDATE FO_SALES_BOOKS_M set salespersonId =?, bookName =?,bookNo =?,bookCode =?, description =?,status =?, modifiedby =?,modifieddate= to_date(?,?) where bookId =?
sql.deleteSaleBooksDetails = DELETE FROM   FO_SALES_BOOKS_M WHERE  BOOKID=? 
sql.associateProgramIPA=INSERT INTO fo_ipa_ticker_data (ipa_id, ticker, programid, ipa_programid, ipa_issuerid, deal_acct, status, createddate, createdby, modifieddate, modifiedby ) VALUES (?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ? )
sql.associateProgramCur=INSERT INTO FO_ISSUERCURRENCY_D (programid, CURRENCYCODE ) VALUES (?,? )
sql.deleteProgramCur=DELETE FROM fo_issuercurrency_d   WHERE programid = ?
sql.updateProgramDetails = UPDATE fo_program_m SET  ticker = UPPER (?),program = UPPER (?), bbticker = UPPER (?), twticker = UPPER (?), cassii = ?, cusipbaseone = ?, cusipbasetwo = ?, cusipisalgorithmic = ?, sandp = ?, moodyrating = ?, ltsandp = ?, ltfitch = ?, ltmoody = ?, issuertype = ?, cptype = ?, traderid = ?, sectraderid = ?, othertraderids = ?, defaultbookid = ?, maxnofdays = ?, rating = ?, domicile = ?, industry = ?, creditwatch = ?, maxamount = ?, coupondate = TO_DATE (?, ?), coupon = ?, spread = ?, minsize = ?, offerlimit = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?, ipa_number = ?, dealerrelease = ?, incamount = ?, notes = ?, fitchrating = ?, epims = ?, dateopened = TO_DATE (?, ?), masteracctnumber = ?, traderecap = ?, calendartype = ?,isin = ?, sedol=?, countrycode = ? WHERE programid = ?
sql.saveProgramHistory = INSERT INTO fo_program_h (SELECT * FROM fo_program_m WHERE programid = ?)
sql.updateProgramIPADet = UPDATE fo_ipa_ticker_data SET ticker = ?, ipa_id = ?, ipa_programid = ?, ipa_issuerid = ?, status = ?, modifieddate = SYSDATE, modifiedby = ? WHERE programid = ?
sql.associateProgramCalendar = INSERT INTO FO_ISSUERCALENDER_D (programid, CALENDERCODE ) VALUES (?,? )
sql.deleteProgramCalendar = DELETE FROM fo_issuercalender_d WHERE programid = ?
sql.deleteProgramDet = UPDATE fo_program_m SET status = 'C', modifiedby = ?,  modifieddate   = to_date(?,?) WHERE programid = ?
sql.getCompanycassiDetails = SELECT COMPANYNAME, CASSII FROM   company_cassii_assoc
sql.viewIssuerDetails = SELECT i.programid,s.issuerid , nvl((select issuername from fo_issuermaster_m where issuerid = s.parentid), i.ISSUERNAME) parentName, i.calendartype, i.PROGRAMACRONYM, i.ISSUERNAME , i.TICKER , i.BBTICKER , i.TWTICKER , i.CASSII, i.CUSIPBASEONE , i.CUSIPBASETWO , i.CUSIPISALGORITHMIC , i.SANDP , i.MOODYRATING, i.SHORTNAME, i.PRODUCTTYPE, p.PRODCODE PRODNAME, i.ISSUERTYPE, i.CPTYPE, i.TRADERID , i.SECTRADERID , i.DEFAULTBOOKID , TO_CHAR(i.MODIFIEDDATE,'Mon dd, yyyy') MODIFIEDDATE , i.MODIFIEDBY , TO_CHAR(i.CREATEDDATE,'Y') CREATEDDATE , i.CREATEDBY , i.MAXNOFDAYS, i.STATUS ,fn_decrypt (m.loginname, 1) primarytradername ,fn_decrypt (m1.loginname, 1) sectradername ,i.INCAMOUNT INCAMOUNT FROM fo_program_m i , fo_product_m p ,fo_member_m m ,fo_member_m m1, fo_issuermaster_m s where i.producttype = p.prodid and p.status='Y' and i.status ='Y' AND trim(upper(s.issuerid)) = trim(upper(i.issuerid)) AND m.loginid = traderid AND m1.loginid = sectraderid
sql.updateCompanyCasii =  UPDATE fo_program_m	set COMPANYNAME = ? where  programid =?
sql.deleteProgramAccount =  UPDATE  fo_accountmaster_m SET STATUS = 'N',  modifiedby = ?,  modifieddate   = to_date(?,?) WHERE   programid	= ? 
sql.getTraderBookProgramsList =SELECT    i.programid,p.prodcode prodname , i.shortname,i.ticker, NVL ((SELECT issuername FROM fo_issuermaster_m WHERE issuerid = s.parentid), i.issuername) parentname FROM fo_program_m i, fo_product_m p, fo_member_m m, fo_member_m m1, fo_issuermaster_m s WHERE i.producttype = p.prodid AND p.status = 'Y' AND i.status = 'Y'   AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (i.issuerid)) AND m.loginid = traderid AND m1.loginid = sectraderid 
sql.getTraderBookProgramsListFinal  =  ORDER BY REGEXP_SUBSTR (ticker, '[^[:digit:]]*') ASC
sql.getTraderBookProductsList =SELECT   t.prodname, t.prodid, tb.bookid, tb.bookname FROM (SELECT ta.prodid, ta.prodname, ta.bookid, ta.bookname, ROW_NUMBER () OVER (PARTITION BY ta.prodid ORDER BY ta.prodname, ta.bookname) AS rcount FROM (SELECT DISTINCT p.prodid, p.prodname, b.bookid, b.bookname FROM fo_program_m a, fo_trader_books_m b, fo_product_m p WHERE a.defaultbookid = b.bookid AND b.status = 'Y' AND a.producttype = p.prodid AND p.status = 'Y') ta) t, fo_trader_books_m tb WHERE tb.bookid = t.bookid(+) AND tb.status = 'Y' 
sql.getTraderBookProductsListFinal  =  ORDER BY prodname, bookname
sql.updateProgramsDetails = UPDATE fo_program_m	set DEFAULTBOOKID = ?  where  programid =?   
sql.getIssuerDetails=  SELECT programid,(select fn_decrypt(loginname,1) from fo_member_m where loginid=i.traderid)trader, (select acctnbr from fo_accountmaster_m where programid=i.programid) acctnbr,issuerid, 	 calendartype, 	 PROGRAMACRONYM, 	 ISSUERNAME , 	 i.TICKER ,BBTICKER, 	 TWTICKER  ,   	 CASSII,   	 (select ma.acctname from fo_masteraccounts_m ma 		 where ma.refacctnbr = i.masteracctnumber 			 and status='Y' and rownum=1) mastacctname,			 nvl(CUSIPBASEONE, '') CUSIPBASEONE , 	 nvl(CUSIPBASETWO, '') CUSIPBASETWO,	 CUSIPISALGORITHMIC ,  	 SANDP ,  	 MOODYRATING,ltsandp,ltfitch,ltmoody, 	 SHORTNAME, 	p.PRODNAME PRODUCT, PRODUCTTYPE, p.PRODCODE,  replace(translate (initcap (upper(prodname)), ' abcdefghijklmnopqrstuvwxyz', ' '), ' ') PRODNAME,	 ISSUERTYPE,  	 CPTYPE,   	 i.TRADERID ,  	 SECTRADERID ,  	 OTHERTRADERIDS ,  	 DEFAULTBOOKID ,MAXNOFDAYS,RATING,DOMICILE ,INDUSTRY,creditwatch,nvl(i.MAXAMOUNT,0) MAXAMOUNT ,TO_CHAR(COUPONDATE,?)  COUPONDATE  ,COUPON ,SPREAD,nvl(MINSIZE,0) MINSIZE  ,nvl(INCAMOUNT,0) INCAMOUNT,	  TO_CHAR(i.MODIFIEDDATE,?)  MODIFIEDDATE ,  	   i.MODIFIEDBY ,  	   TO_CHAR(i.CREATEDDATE,?) CREATEDDATE ,  	   i.CREATEDBY ,i.ipa_number,i.dealerRelease,  	   i.STATUS  ,i.NOTES  ,i.COUNTRYCODE  ,b.bookno,b.bookcode ,b.BOOKNAME DESCR,OFFERLIMIT, PREMIUM, FEE,fitchrating,EPIMS,TO_CHAR(dateOpened,?) dateOpened,masteracctNumber,ALLIN,traderecap   FROM fo_program_m i , fo_product_m p ,FO_TRADER_BOOKS_M b  where i.defaultbookid=b.bookid and  i.producttype = p.prodid and p.status='Y' and i.status ='Y'  and b.status ='Y' 

sql.getSelectedProgramDetails= SELECT i.programid, s.issuerid, NVL ((SELECT issuername FROM fo_issuermaster_m WHERE issuerid = s.parentid), i.issuername) parentname, i.calendartype, i.programacronym, i.issuername, i.ticker, i.bbticker, i.twticker, i.cassii, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, i.cusipisalgorithmic, i.sandp, i.moodyrating, i.shortname, i.producttype, p.prodname prodname, i.issuertype, i.cptype, i.traderid, i.sectraderid, i.defaultbookid, TO_CHAR (i.modifieddate, 'Mon dd, yyyy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'Y') createddate, i.createdby, i.maxnofdays, i.status, fn_decrypt (m.loginname, 1) primarytradername, fn_decrypt (m1.loginname, 1) sectradername, NVL (incamount, 0) incamount , (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname,   (select a.ltsandp from fo_ratings_d a where a.ratingid = i.ltsandp) ltsandp, (select a.ltfitch from fo_ratings_d a where a.ratingid = i.ltfitch) ltfitch, (select a.ltmoody from fo_ratings_d a where a.ratingid = i.ltmoody) ltmoody, othertraderids, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, coupon, spread, NVL (minsize, 0) minsize, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap FROM fo_program_m i, fo_product_m p, fo_member_m m, fo_member_m m1, fo_issuermaster_m s WHERE i.producttype = p.prodid AND p.status = 'Y' AND i.status = 'Y' AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (i.issuerid)) AND m.loginid = traderid AND m1.loginid = sectraderid 
sql.getFRSelectedProgramDetails=SELECT programid, issuerid, '' parentname, calendartype, programacronym, issuername, i.ticker, bbticker, twticker, cassii, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, NVL (cusipbaseone, '') cusipbaseone, NVL (cusipbasetwo, '') cusipbasetwo, cusipisalgorithmic, sandp, moodyrating, ltsandp, ltfitch, ltmoody, shortname, p.prodcode prodname,'' primarytradername, '' sectradername, producttype, p.prodcode, REPLACE (TRANSLATE (INITCAP (UPPER (prodname)),' abcdefghijklmnopqrstuvwxyz', ' ' ),                ' ' ) prodname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = i.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, issuertype, cptype, i.traderid, sectraderid, othertraderids, defaultbookid, maxnofdays, rating, domicile, industry, creditwatch, NVL (i.maxamount, 0) maxamount, TO_CHAR (coupondate, 'fmmm/dd/yy') coupondate, coupon, spread, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, TO_CHAR (i.modifieddate, 'fmmm/dd/yy') modifieddate, i.modifiedby, TO_CHAR (i.createddate, 'fmmm/dd/yy') createddate, i.createdby, i.ipa_number, i.dealerrelease, i.status, i.notes, i.countrycode, b.bookno, b.bookcode, b.bookname descr, offerlimit, premium, fee, fitchrating, epims, TO_CHAR (dateopened, 'fmmm/dd/yy') dateopened, masteracctnumber, allin, traderecap FROM fo_program_m i, fo_product_m p, fo_trader_books_m b WHERE i.defaultbookid = b.bookid AND i.producttype = p.prodid  AND p.status = 'Y' AND i.status = 'Y' AND b.status = 'Y'
sql.viewProgramCreditLimits =  SELECT   a.programid, issuername, i.TICKER, a.producttype, issuertype, p.prodcode prodname, creditlimit, threshold, TO_CHAR (i.modifieddate, ?) modifieddate, i.modifiedby, TO_CHAR (i.createddate, ?) createddate, i.createdby, a.status	 FROM fo_issuer_creditlimit_m a, fo_program_m i, fo_product_m p	 WHERE a.producttype = p.prodid	 AND p.status = ?  AND i.status = ?	 AND a.programid = i.programid
			
			
			
################################################################################################################
----------------------------------------------------- Product Parameters  ---------------------------------------------------
################################################################################################################

sql.getDeskParametersDetails =   select  p.prodid,p.groupid,g.companyid,TRADING_STARTTIME,TRADING_ENDTIME,TIME_ZONE,AMOUNT_DECIMALS,RATE_DECIMALS,VARIABLE_RATE,DAY_BASIS, RATERESIONABILITY_CHECK, TRADE_PROCESSING,TIMEOUT_FORTRADING from fo_productparameter_new_m p,fo_group_m g where p.groupid=g.groupid AND g.status = 'Y' AND g.currencycode = 'USD' and p.status = 'Y' and rownum=1 	
sql.getWeekDaysHeaderDetails =   SELECT dayid, refcode, descr FROM  fo_weekday_m
sql.getGroupId = SELECT groupId FROM   fo_group_m WHERE  companyid =? AND prodid =? AND currencycode  =? AND status ='Y'   
sql.checkWeekDaysDetails = SELECT dayid,descr FROM   fo_pr_holiday_m   
sql.productworkweek = SELECT w.dayid, w.descr, DECODE(g.dayid,NULL,'true','false') weekcheck FROM (SELECT dayid, descr FROM fo_pr_holiday_m WHERE groupid= ? ) g, fo_weekday_m w WHERE g.dayid(+) = w.dayid ORDER BY 1
sql.setDeskParametersDetails = Insert into FO_PRODUCTPARAMETER_NEW_M (GROUPID, PRODID, TRADING_STARTTIME, TRADING_ENDTIME, TRADE_PROCESSING, TIMEOUT_FORTRADING, TIME_ZONE, VARIABLE_RATE, AMOUNT_DECIMALS, RATE_DECIMALS, DAY_BASIS, RATERESIONABILITY_CHECK, CURRENCY_CODE, STATUS, CREATEDDATE, CREATEDBY) Values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE(?, ?),?)
sql.setWeekDays = Insert into FO_PR_HOLIDAY_M (GROUPID, DAYID, DESCR) Values (?, ?, ?)
sql.getHolidays     =  SELECT distinct companyid, trunc(hdate)hdate,to_char(hdate, 'dd/mm/yyyy' ) holiday,   description  , hyear ,currencyCode  FROM   fo_holiday_new_m   
sql.insetHoliday  = INSERT INTO fo_holiday_new_m (companyid, hdate, description, hyear, currencycode, createdby,createddate ) VALUES (?, TO_DATE (?, ?), ?, to_char(to_date(?,'yyyy/mm/dd'),'YYYY'), ?, ?, SYSDATE )
sql.updateHoliday  = UPDATE fo_holiday_new_m   SET description = ?, hyear = to_char(to_date(?,'yyyy/mm/dd'),'YYYY') , modifiedby = ?,  modifieddate = SYSDATE WHERE  TRUNC(hdate) = TO_DATE (?, ?)
sql.deleteHoliday  = DELETE FROM	fo_holiday_new_m  WHERE	TRUNC(hdate) = TO_DATE(?,?) and companyid = ? and  hyear= ?  and currencycode = ?
##sql.getHolidays     =   SELECT to_char(hdate,?) holiday,  description, year  FROM   fo_holiday_m  WHERE  deskid = ? and hyear = ? 
sql.resetDeskParametersDetails =update FO_PRODUCTPARAMETER_NEW_M set TRADING_STARTTIME = ?,TRADING_ENDTIME=?,TRADE_PROCESSING=?,TIMEOUT_FORTRADING=?,TIME_ZONE=?,VARIABLE_RATE=?,AMOUNT_DECIMALS=?, RATE_DECIMALS=?,DAY_BASIS=?,RATERESIONABILITY_CHECK=?,CURRENCY_CODE=?,STATUS=?,MODIFIEDDATE=TO_DATE(?, ?),MODIFIEDBY=? where GROUPID=? AND PRODID=?
sql.resetWeekDays = update FO_PR_HOLIDAY_M set DAYID = ?,DESCR=? where GROUPID = ?
sql.currencyDetails = SELECT CURRENCYCODE,CURRENCYNAME,DAYBASIS  FROM   fo_currency_m WHERE  status='Y' ORDER  BY CURRENCYNAME                             
sql.updateCurrencyDetails = UPDATE  FO_currency_M	SET CURRENCYNAME=?, DAYBASIS=?, DayBasisCode=?, status=?  where CURRENCYCODE=?
sql.insertCurrencyDetails = INSERT INTO FO_CURRENCY_M (CURRENCYCODE, CURRENCYNAME, STATUS, DAYBASIS) VALUES (?, ?, ?, ?) 
sql.deleteWorkweek = delete from FO_PR_HOLIDAY_M where groupid=?
################################################################################################################
----------------------------------------------------- Administration  ---------------------------------------------------
################################################################################################################
sql.getSelectedSearchCompanies = SELECT DISTINCT a.companyid, shortname, companytypeid, routingnumber, a.companyname, a.parentid, a.createdby, a.cparentid, a.status, a.companyrating, a.clientclassid FROM fo_company_m a WHERE a.companycatid = ? AND a.status = 'Y' AND a.status <> 'D'  ORDER BY a.status, upper(a.companyname)
sql.getLoginNamesDetails = SELECT loginid, fn_decrypt(loginname,1) loginname, jpmsid, createdby, companyid,cpspid, initcap(fn_decrypt(firstname,1)) firstname, initcap(fn_decrypt(lastname,1)) lastname, roletypeid, fn_decrypt(email1,1) email1, fn_decrypt(phone1,1) phone1, phoneext, membercatId, status, defaultbookid FROM fo_member_m WHERE membercatid = ? AND companyid = ? AND status <> 'D'
sql.getLoginNamesDetailsFinal = ORDER BY   status, loginname 
sql.setMemberInfo = INSERT INTO fo_member_m (   loginid,loginname,roletypeid, firstname, lastname, email1, phone1, membercatid, password,companyid, disabled,locked,counter, active, locale, language,modifiedby, createdby,seeotherstrades,createddate, modifieddate,passwordexpdate,defaultbookid, jpmsid,cpspid) VALUES  (?,fn_encrypt(?,1),?,fn_encrypt(?,1),fn_encrypt(?,1),fn_encrypt(?,1),fn_encrypt(?,1),?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),?,?,?)
sql.setUserCompanyAssoc = INSERT INTO fo_up_company_m(loginid,companyid,status,createby,createddate)VALUES (?,?,?,?,TO_DATE(?,?))
sql.setUserProductPermissions = INSERT INTO fo_up_product_d SELECT groupid, ?, ?,TO_DATE(?,?), ? FROM fo_group_m WHERE companyid = ? AND status = ?  and currencycode='USD'
sql.reSetMemberInfo = UPDATE fo_member_m  SET jpmsid = ?,	 firstname = fn_encrypt (?, 1),lastname = fn_encrypt (?, 1), phone1 = fn_encrypt (?, 1), email1 = fn_encrypt (?, 1),roletypeid = ?,cpspid =?,loginname = fn_encrypt (?, 1), modifieddate = TO_DATE (?, ?)  WHERE loginid = ?
sql.updateMemberStatus = UPDATE fo_member_m	SET status = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE loginid = ?                                   	 
sql.getUserRoles = SELECT a.roletypeid, roledesc FROM fo_userroles_m a, fo_roletypes_m b WHERE membercatid = ? AND a.roletypeid = b.roletypeid	
sql.getAdminUsers = SELECT loginid, fn_decrypt(loginname,1) loginname FROM fo_member_m WHERE membercatid = ? AND companyid = ? AND status <> 'D' order by loginname	
sql.checkSSOLogin = SELECT  description	FROM  fo_member_m a, fo_usercategory_m b WHERE  fn_decrypt(loginname,1) = ? AND a.membercatid = b.membercatid AND  active = ? AND   status = ?
sql.getInvestorMap  = SELECT  acctname SHORTNAME,ACCTNBR  FROM fo_accountmaster_m a  WHERE accttype = 'C' AND a.status = 'Y' ORDER BY   SHORTNAME    asc
sql.updateSSOUserAssociation = UPDATE fo_ssouserassociation_m SET traderid = ?,frontofficeid = ?,modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE adminid = ?
sql.insertSSOUserAssociation = INSERT INTO fo_ssouserassociation_m(   adminid, traderid,frontofficeid, modifieddate, modifiedby ) VALUES  (?,?,?,to_date(?,?),?)
sql.viewIssuerAsscDetails = SELECT   i.programid, s.issuerid,i.issuername,  i.shortname,i.producttype, p.prodcode prodname FROM fo_program_m i, fo_product_m p, fo_issuermaster_m s,fo_associated_issuer_d a WHERE i.producttype = p.prodid AND p.status = 'Y'  AND i.status = 'Y'  AND a.programid = i.programid  AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (i.issuerid))  AND p.prodid = ? AND a.userid = ? ORDER BY REGEXP_SUBSTR (ticker, '[^[:digit:]]*') ASC
sql.viewIssuerUnAsscDetails = SELECT   i.programid, s.issuerid,i.issuername,  i.shortname,i.producttype, p.prodcode prodname FROM fo_program_m i, fo_product_m p, fo_issuermaster_m s WHERE  i.producttype = p.prodid AND p.status = 'Y' AND i.status = 'Y' AND TRIM (UPPER (s.issuerid)) = TRIM (UPPER (i.issuerid))  AND p.prodid = ?  AND i.programid NOT IN (SELECT programid FROM fo_associated_issuer_d a WHERE userid = ?) ORDER BY REGEXP_SUBSTR (ticker, '[^[:digit:]]*') ASC
sql.selectAsscIssuerDetails = select count(*) cnt from fo_associated_issuer_d where userid=?
sql.deleteAsscIssuerDetails =  delete from fo_associated_issuer_d where userid=?
sql.insertIssuerUnAsscDetails =  Insert into FO_ASSOCIATED_ISSUER_D  (programid, USERID, STATUS, CREATEDDATE, CREATEDBY)  Values  (?,?,?,TO_DATE(?,?),?)
sql.getUserAssignParentProducts = SELECT DISTINCT p.prodid, p.parentid,p.dispprodname,p.PRODCODE, p.prodname, g.groupid,  g.currencycode,p.SORTORDER FROM   fo_up_product_d up,   fo_product_m p,  fo_group_m g   WHERE  up.loginid = ? AND   g.companyid = ?  AND    up.status   = 'Y' AND    g.prodid    = p.prodid AND    g.groupid   = up.groupid  AND    g.status    = 'Y' AND    p.status    = 'Y'    AND    parentid NOT IN (SELECT prodid FROM fo_product_m)ORDER  BY  dispprodname asc
sql.getUserAssignSubProducts = SELECT DISTINCT p.prodid, prodname, prodcode,parentid, g.groupid, g.currencycode FROM (SELECT     pm.prodid, prodname, prodcode, parentid FROM fo_product_m pm WHERE pm.status = 'Y' AND LEVEL <> 1 AND LEVEL = (SELECT     MAX (LEVEL)  FROM fo_product_m  WHERE status = 'Y'  START WITH prodid = ?  CONNECT BY PRIOR prodid = parentid) START WITH prodid IN (SELECT     prodid  FROM fo_product_m  WHERE status = 'Y'  START WITH prodid = ?  CONNECT BY PRIOR prodid = parentid)   CONNECT BY PRIOR pm.prodid = pm.parentid) p, fo_up_product_d UP,   fo_group_m g  WHERE UP.loginid = ?  AND g.companyid = ?	 AND g.prodid = p.prodid	AND g.groupid = UP.groupid  AND g.currencycode = ? AND g.status = 'Y'   AND UP.status = 'Y' ORDER BY prodname
sql.getUserProducts = SELECT groupId,status FROM   fo_up_product_d WHERE  loginid = ? 
sql.getUserSubProducts = SELECT groupId FROM   fo_up_product_d WHERE  groupId = ? AND    loginid = ?
sql.updateUserProducts = UPDATE fo_up_product_d SET    status = ? WHERE  groupId = ? AND    loginid = ?  
sql.insertUserProducts = INSERT INTO fo_up_product_d ( status,groupid,loginid) VALUES  (?,?,?)

################################################################################################################
----------------------------------------------------- Spread Fee Widget  ---------------------------------------------------
################################################################################################################

sql.getSpreadFeeData =  SELECT i.programid program, i.issuername issuerName, tb.bookname bookName,  tb.bookid bookId, i.spread, i.fee,i.allin allIn, i.producttype,i.premium,i.TICKER,traderecap FROM fo_program_m i,fo_trader_books_m tb WHERE i.defaultbookid = tb.bookid
sql.getSpreadFeeDataFinal  =  AND i.status = 'Y'  and ( i.spread IS NOT NULL or i.fee IS NOT NULL) 
sql.saveSpreadFeeData =   UPDATE  fo_program_m  SET  spread=?,fee=?,allin=?,premium=? WHERE    programid=? and producttype=?              
sql.deleteSpreadFeeData =   UPDATE  fo_program_m  SET  spread=NULL,fee=NULL,allin=NULL,premium=NULL WHERE  programid=? and producttype=?          

################################################################################################################
----------------------------------------------------- Convertions  ---------------------------------------------------
################################################################################################################
sql.getCPConvertionDetailsOne = 	SELECT t.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY t.createddate DESC) rnum FROM (SELECT   distinct a.*  FROM (SELECT distinct ism.prodid, ism.programid, ism.issuenumber,isr.issuerid, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid,  ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') settledate, ism.orgsettletdate settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.orgsettletdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, '' exdates, 0 offeryield, bidyield, '' tempcusip, '' subjecttocall, '' msgtype, '' matcode, st.descr, st.dispdescr, '' quantityflag, SYSDATE reqtimestamp, '' assetbacked, 0 minimumpiece, ism.price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, '' gridissueid, 0 retainedincome, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_cp_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'S' AND ism.status = 'A' AND subacctcassii IS NULL 
sql.getCPConvertionDetailsTwo = 	) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' 
sql.getCDConvertionDetailsOne = 	SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername,isr.issuerid, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) settledate, ism.originalsettlementdate settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.originalsettlementdate, 'mm/dd/yyyy' ) ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest,  NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, '' exdates, 0 offeryield, 0 bidyield, '' tempcusip, '' subjecttocall, '' msgtype, '' matcode, st.descr, st.dispdescr, '' quantityflag, SYSDATE reqtimestamp, '' assetbacked, 0 minimumpiece, ism.price, ism.bidyeild, TO_CHAR (ism.dateddate, 'fmmm/dd/yy') dateddate, 0 buyscnt, 0 salescnt, '' gridissueid, 0 retainedincome, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_cd_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND ism.status = 'A' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'P' AND subacctcassii IS NULL 
sql.getCDConvertionDetailsTwo = 	) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.ecpUpdateConvertion 	  = 	UPDATE FO_ISSUES_M SET REFISSUEID = ?, OFFERFLAG = ? , AFR = ? , SETTLE = ?, EXDATES = ?, PROCEEDSFLAG = ?, SUBJECTFLAG = ?, ORGSETTLETDATE = to_date(?,?), SETTLEMENTDATE = to_date(?,?), MATURITYDATE = to_date(?,?), MATURITYENDDATE = to_date(?,?), AMOUNT = ?, MAXAMOUNT = ?, AVAILABLECREDIT = ?, AVAILABLETODAY = ?, OFFER = ?, OFFERYIELD = ?, DISPBIDDISCOUNT =? ,DISPBIDYIELD =?, DISPOFFERDISCOUNT = ?, DISPOFFERYIELD = ?, AVGBID = ? , BID = ? , BIDYIELD = ?, MATCODE=? ,ACCRUEDINTEREST = ? , TRADERACRUEDINT=?, NOTES=? , amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - bid), MODIFIEDDATE =to_date(?,?), MODIFIEDBY =? ,OFFERINGLIMIT =? ,MINIMUMPIECESIZE =? ,QUANTITYFLAG=? ,ACCTNBR=? ,BUYSCNT=?,SALESCNT =?, CUSIP = UPPER(?) , PREVPAYMENTDATE =to_date(?,?), DISPSETTLEMENTDATE = fn_get_DISPDATE(?), DISPMATURITYDATE = fn_get_DISPDATE( ?), DISPMATURITYENDDATE = fn_get_DISPDATE(?), DISPEXDATES = fn_get_exdates(?), SPLOGINID = ? WHERE ISSUEID = ? AND PRODUCTTYPE = ? AND programid = ?
 sql.ecpInsertConvertion	  = 	INSERT INTO FO_ISSUES_M   (ISSUEID ,programid,REFISSUEID, EXDATES, PROCEEDSFLAG ,SUBJECTFLAG,   ISSUENUMBER ,   AFR ,   AMOUNT ,ACCTNBR,   AVAILABLECREDIT,   AVAILABLETODAY,   MINAMOUNT ,   MAXAMOUNT ,   PRODUCTTYPE ,  CUSIP,   SETTLE,ORGSETTLETDATE, SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,   AVGBID, BID ,OFFER , NOTES, PUBLISHED, TRANSTYPE,   TRADERID ,    TRADERLOGINNAME ,    ACCRUEDINTEREST ,    SALESCRAMOUNT ,    SALESCR ,    TRMARKUP ,    TRMARKUPAMOUNT ,   TOTALSALESCR , RETAINEDINCOME , SPREADRETAIN ,  MODIFIEDDATE ,   MODIFIEDBY ,   CREATEDDATE ,   CREATEDBY ,    STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD ,DISPOFFERDISCOUNT ,DISPOFFERYIELD ,BIDYIELD,OFFERYIELD ,MSGTYPE,MATCODE    , ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON  ,TRADERACRUEDINT ,    CURRENCYCODE,TICKETNUMBER,ISIN,BUYSCNT,SALESCNT,INVESTORACCTNBR, TRADINGFlAG,GRIDISSUEID,PREVPAYMENTDATE, PRICE,  DISPSETTLEMENTDATE, DISPMATURITYDATE, DISPMATURITYENDDATE, DISPEXDATES,SPLOGINID  )    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',?  , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?, fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_exdates(?),? ) 
sql.getMergeConvertionOne     =   	SELECT aa.prodid, aa.programid, aa.issuenumber, aa.refissueid, aa.issuedate, aa.issuername, aa.issuerid, ticker, bid, offer, producttype, cusip,prodcode, settledate, settlementdate, settle, aa.createddate, mat,aa.maturitydate, sumofamt, accruedinterest,currencycode,dispbidyield,price,bookid, bookname,status, NVL ((sumofamt * 1000 - accruedinterest), 0) moneyamt, aa.transtype FROM (SELECT DISTINCT a.prodid, a.programid, a.issuenumber, a.refissueid, a.issuedate, a.issuername, a.issuerid, ticker, bid, offer, producttype, cusip,prodcode, settledate, settlementdate, settle, a.createddate, mat,a.maturitydate, SUM (amount) OVER (PARTITION BY ticker, mat, bid, refissueid, settledate) sumofamt, a.transtype,a.accruedinterest,a.currencycode,a.dispbidyield,a.price ,a.bookid,a.bookname,a.status FROM (SELECT ism.prodid,prd.prodcode, ism.programid, ism.issuenumber, ism.transtype, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, isr.issuername, isr.issuerid, isr.ticker ticker, ism.amount, ism.bid, ism.offer, ism.producttype, ism.cusip, TO_CHAR (ism.originalsettlementdate, 'fmmm/dd/yy' ) settledate, ism.originalsettlementdate settlementdate, ism.settle settle, TRUNC (ism.createddate) createddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) mat, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.accruedinterest,ism.currencycode,ism.dispbidyield,ism.price,trb.bookid,bookname,ism.status FROM fo_cd_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND ism.status = 'A' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'P' AND subacctcassii IS NULL
sql.getMergeConvertionTwo     =  	) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getCpMergeConvertionOne   =      SELECT aa.prodid, aa.programid, aa.issuenumber, aa.refissueid, aa.issuedate, aa.issuername, aa.issuerid, ticker, bid, offer, producttype, cusip,prodcode, settledate, settlementdate, settle, aa.createddate, mat, aa.maturitydate, sumofamt, accruedinterest,currencycode,dispbidyield,price,ticketnumber,bookname,issuetype,status,shortname, NVL ((sumofamt * 1000 - accruedinterest), 0) moneyamt, aa.transtype FROM (SELECT DISTINCT a.prodid, a.programid, a.issuenumber, a.refissueid,a.issuername, a.issuerid, a.issuedate, ticker, bid, offer, producttype, cusip, settledate, settlementdate, settle, a.createddate, mat, a.maturitydate, SUM (amount) OVER (PARTITION BY ticker, mat, bid, refissueid, settledate) sumofamt, a.transtype, a.accruedinterest,a.currencycode,a.dispbidyield,a.price,a.prodcode,a.ticketnumber,bookname ,a.issuetype,a.status,a.shortname FROM (SELECT ism.prodid, prd.prodcode,ism.programid, ism.issuenumber, ism.currencycode, ism.issueid, ism.refissueid,isr.issuerid, isr.issuername, isr.ticker ticker, ism.amount, ism.producttype, ism.cusip, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) settledate, ism.orgsettletdate settlementdate, ism.settle settle, TRUNC (ism.createddate) createddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) mat, ism.bid, ism.offer, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.accruedinterest, ism.transtype,ism.dispbidyield,ism.price,ism.ticketnumber,trb.bookname,ism.issuetype ,ism.status,am.shortname FROM fo_cp_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'S' AND ism.status = 'A' AND subacctcassii IS NULL
 sql.getCpMergeConvertionTwo   =     ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
 ################################################################################################################
----------------------------------------------------- Convertions  ---------------------------------------------------
################################################################################################################ 
 
 sql.getIncompleteSecurities = SELECT refissueid, fm.issuerid, ism.programid, issueid, amount, TO_CHAR (settlementdate, 'fmmm/dd/yy') settledate, ism.status, prd.prodcode, TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate, ism.cusip, ism.issuetype, trb.bookid, fm.issuername, trb.bookname, ism.producttype, ticker, bid, currencycode, dispsettlementdate, dispmaturitydate FROM fo_securities_m ism, fo_product_m prd, fo_trader_books_m trb, fo_program_m fm WHERE issuetype = 'F' AND refissueid = '0000' AND ism.status = 'A' AND trb.bookid = fm.defaultbookid AND prd.prodid = ism.producttype AND ism.programid = fm.programid
 sql.deleteIncompleteSecurities = 	UPDATE  	FO_SECURITIES_M	 set status =? ,  MODIFIEDDATE   		= to_date(?,?),  MODIFIEDBY   			=	?  WHERE  ( ISSUEID = ?  )       
 sql.getTradesInit = SELECT p.*,COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY p.createddate DESC) rnum FROM (SELECT distinct a.*  FROM (
 sql.getTradeFinal = ) a, fo_up_product_d UP, fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y')p ORDER BY p.createddate DESC
 sql.getAllocationFinal = ) a, fo_up_product_d UP, fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' AND ALLOCATIONFLAG = 'N')p ORDER BY p.createddate DESC
 sql.getTradesCommon=SELECT nvl(ism.availablecredit, 0) availablecredit,  nvl(ism.availabletoday, 0) availabletoday, isr.issuerid,ism.prodid,ism.programid, ism.issueid, ism.refissueid,TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate,TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate,fn_decrypt(CASSIIACCTNBR,1)CASSIIACCTNBR,isr.shortname acctshrtname,TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.ticker ticker,isr.issuername issuername, ism.ticketnumber, am.shortname, ism.amount, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, ism.bid, ism.offer, ism.transtype, ism.issuetype, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.currencycode, prd.prodname prodname, trb.bookid, st.descr, st.dispdescr, NVL (ism.price, '') price,  TO_NUMBER (prd.sortorder) sortorder, allocationflag,
 sql.getCDTradesOne=to_char (ism.dateddate, 'fmmm/dd/yy')dateddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) formatmatdate, 0 afr, 'I' epimstatus, 0 offeryield, 0 bidyield
 sql.getCDTradeBuys= ,ism.notes FROM fo_cdissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND published = 'Y' AND am.status = 'Y' AND isr.status = 'Y' AND ism.maturitydateflag = 'N' AND TRIM (am.programid) IS NOT NULL 
 #sql.getCDTradesSells=,'' notes FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND issuetype = 'I' AND am.status = 'Y'
 sql.getCDTradesSells=,'' notes FROM vw_cdtradehistory_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC')  AND st.status = 'Y'   AND am.status = 'Y' AND isr.status = 'Y'
 sql.getFRTradeCommon=SELECT nvl(ism.availablecredit, 0) availablecredit,  nvl(ism.availabletoday, 0) availabletoday, isr.issuerid, ism.prodid, ism.programid, ism.issueid, ism.refissueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, fn_decrypt (cassiiacctnbr, 1) cassiiacctnbr, isr.shortname acctshrtname, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.ticker ticker, isr.issuername issuername, ism.ticketnumber, am.shortname, ism.amount, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, ism.bid, ism.offer, ism.transtype, ism.issuetype, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, '' SOURCE, '' rejectreason, ism.traderid, ism.traderloginname, '' sploginid, '' sploginname, ism.currencycode, prd.prodname prodname, trb.bookid, st.descr, st.dispdescr, NVL (ism.price, '') price, TO_NUMBER (prd.sortorder) sortorder, allocationflag,
 sql.getFRTradesSells=,'' notes FROM fo_trading_t ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y'
 sql.getFRTradeBuys=,'' notes FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND refissueid <> '00000000' AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y' 
 sql.getFROffers=,'' notes FROM fo_frissues_m ism, fo_program_m isr, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am, fo_trader_books_m trb WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL  AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y' 
 sql.getCPTradeOne=sysdate dateddate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, afr, epimstatus, ism.offeryield, ism.bidyield
 sql.getCPTradeBuys= ,ism.notes FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
 sql.getCPTradeSells=,'' notes FROM vw_cptradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y'
 
################################################################################################################
----------------------------------------------------- Trading  ---------------------------------------------------
##################################################################################################################

sql.updateSTDetails = UPDATE fo_stoptrading_d  SET tradestatus = ?, offerstatus = ?  WHERE prodid = ?
sql.insertSTDetails = INSERT INTO FO_stoptrading_d ( prodid , tradestatus, offerstatus  ) VALUES  (?,?,?)
sql.getStopTradingPrograms = SELECT DISTINCT prd.prodid,trb.bookid, isr.programid, isr.issuername, (SELECT offerstatus FROM fo_stoptrading_d b WHERE b.prodid = isr.programid) issue_offerstatus, (SELECT tradestatus FROM fo_stoptrading_d b WHERE b.prodid = isr.programid) issue_tradestatus FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd WHERE prd.prodid = isr.producttype AND trb.bookid = isr.defaultbookid
sql.getStopTradingProgramsFinal = AND isr.status = 'Y'  ORDER BY   programid
sql.getStopTradingBooks = SELECT DISTINCT prd.prodid,trb.bookid, trb.bookname, (SELECT offerstatus FROM fo_stoptrading_d b WHERE b.prodid = (prd.PRODID || trb.bookid)) book_offerstatus, (SELECT tradestatus FROM fo_stoptrading_d b WHERE b.prodid = (prd.PRODID || trb.bookid)) book_tradestatus FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd WHERE prd.prodid = isr.producttype AND trb.bookid = isr.defaultbookid
sql.getStopTradingBooksFinal = AND isr.status = 'Y' ORDER BY  bookid
sql.getStopTradingProducts = SELECT DISTINCT prd.prodid, prd.prodname, (SELECT offerstatus FROM fo_stoptrading_d b WHERE (b.prodid = prd.prodid)) prod_offerstatus, (SELECT tradestatus FROM fo_stoptrading_d b WHERE b.prodid = prd.prodid) prod_tradestatus FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd WHERE prd.prodid = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' ORDER BY prodid
sql.getLiborRates = SELECT m.descr liborname, nvl(d.liborrate,0)liborrate, m.currencycode,TO_CHAR (libordate, 'Mon dd, yyyy') libordate FROM fo_libor_m m, fo_liborrates_d d WHERE m.currencycode = d.currencycode AND m.liborid = d.liborid AND d.currencycode = ?  AND m.status = 'Y' AND d.libordate between TO_DATE (?, 'fmmm/dd/yyyy')-4 AND TO_DATE (?, 'fmmm/dd/yyyy') ORDER BY liborno 
 sql.getCDIssueDetails = SELECT cdis.status, cdis.issuetype, isr.programid, isr.issuername, isr.shortname isrshrtname, cdis.notes, cdis.published, cdis.offeringlimit, cdis.minimumpiecesize, cdis.tenortype, cdis.maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, cdis.traderloginname,  cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.dispofferyield, ROUND (  (  (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, ROUND (  (  ((cdis.amount * 1000) * NVL (cdis.price, 0)) + CASE WHEN cdis.prevpaymentdate = cdis.originalsettlementdate THEN NVL (  (  (cdis.amount * 1000) * (  TRUNC (cdis.settlementdate) - cdis.dateddate ) * NVL (cdis.coupon, 0) ) / (100 * 360), 0 ) ELSE NVL (  (  (cdis.amount * 1000) * (TRUNC (SYSDATE) - cdis.prevpaymentdate) * NVL (cdis.coupon, 0) ) / (100 * 360), 0 ) END ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, cdis.allocationflag, cdis.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = cdis.sploginid) sploginname, cdis.avgbid, cdis.ticketnumber, cdis.buyscnt, cdis.salescnt, '' voicetrade, '' voiceinvestor FROM fo_program_m isr, fo_cdissues_m cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid 
 sql.updateInvDetailsOne =  ACCRUEDINTEREST=?, PRICE=?, AFR =?, BIDYEILD =?, DISPBIDYIELD =?, OFFER=?, OFFERYEILD=?, AVAILABLETODAY=?,  DISPOFFERYIELD=?, OFFERFLAG=?,  TRADERID=?, TRADERLOGINNAME=?, MODIFIEDDATE=to_date(?,?),	 MODIFIEDBY=? 	
 sql.updateInvDetailsTwo =  CUSIP=?, AFR=?, SETTLE=?, originalsettlementdate=to_date(?,?), PREVPAYMENTDATE=to_date(?,?), SETTLEMENTDATE=to_date(?,?), DATEDDATE=to_date(?,?), MATURITYDATE=to_date(?,?), MATURITYENDDATE=to_date(?,?), DISPSETTLEMENTDATE = fn_get_DISPDATE(?), DISPMATURITYDATE = fn_get_DISPDATE(?), AVAILABLECREDIT=?, AMOUNT=?, MAXAMOUNT=?, ACCRUEDINTEREST=?, STATUS=?, BID=?, COUPON = ?, BIDYEILD=?, NOTES=?, TRADERID=?, TRADERLOGINNAME=?, MODIFIEDDATE=to_date(?,?), MODIFIEDBY=?, ASOFDATE=?, DISPBIDDISCOUNT=?, DISPBIDYIELD=?, MATURITYDATEFLAG=?, BUYSCNT=?, SALESCNT=?, AVGBID=?, PRICE=?, INTERESTAMOUNT=? 
 sql.getFRLiborRates =   SELECT   to_char(busdate,'fmmm/dd/yy') busdate, durationto, libor	 FROM fo_oms_libor_m where busdate BETWEEN  sysdate-3 and sysdate OR busdate in (select max(busdate) from fo_oms_libor_m  where trunc(busdate) < sysdate) 
 sql.updateFRTransactionsOne = CUSIP=?, REFISSUEID=?, ISSUETYPE=?, TRADERID=?, TRADERLOGINNAME=?, MODIFIEDDATE=to_date(?,?), MODIFIEDBY=?
 sql.updateFRTransactionsTwo = AMOUNT=?, CUSIP=?, SETTLE=?, ORIGINALSETTLEMENTDATE=to_date(?,?), SETTLEMENTDATE=to_date(?,?), DATEDDATE=to_date(?,?), MATURITYDATE=to_date(?,?), AVAILABLECREDIT=?, AVAILABLETODAY=?, STATUS=?, OFFERYEILD=?, BIDYEILD=?, MAXAMOUNT=?, ACCRUEDINTEREST=?, RETAINEDINCOME=?, TRADERID=?, TRADERLOGINNAME=?,  MODIFIEDDATE=to_date(?,?), MODIFIEDBY=?, DISPBIDDISCOUNT=?, DISPBIDYIELD=?, PRICE=?, INTERESTAMOUNT=?, coupon=?                         
 sql.updateSalesAndBuysCusipOne =  update fo_cdissues_m  set cusip = ? WHERE  issueid = ?  OR  refissueid = ? 
 sql.updateSalesAndBuysCusipTwo =  update fo_cd_trading_t set cusip = ? WHERE  refissueid = ? OR  refissueid in (select issueid from  fo_cd_trading_t WHERE  refissueid = ?) 
 sql.updateAllocatedTrades =  SET  REFISSUEID=?, CUSIP=?, SETTLE=?, originalsettlementdate=to_date(?,?), SETTLEMENTDATE=to_date(?,?), DATEDDATE=to_date(?,?), MATURITYDATE=to_date(?,?), MATURITYENDDATE=to_date(?,?), DISPSETTLEMENTDATE = fn_get_DISPDATE(?), DISPMATURITYDATE = fn_get_DISPDATE(?), BID=?, COUPON = ?, BIDYEILD=?, PRICE=?,  DISPBIDDISCOUNT=?, DISPBIDYIELD=?, MODIFIEDDATE=to_date(?,?), MODIFIEDBY=?, ASOFDATE=?   WHERE  REFISSUEID = ?                   
 sql.getTradeAllocationSubAccts =      SELECT   acctname, acctnbr, a.shortname,COMMENTS,	     fn_decrypt (cassiiacctnbr, 1) cassiiacctnbr,	     fn_decrypt (subacctcassii, 1) subacctcassii, spn, defaultacct	  FROM fo_accountmaster_m a	  WHERE accttype in( 'C','I') AND a.status = 'Y'  AND UPPER(fn_decrypt (cassiiacctnbr, 1)) = UPPER(?)		ORDER BY a.createddate ASC    
 sql.saveTradeAllocation = INSERT INTO FO_ISSUES_M				   (ISSUEID ,programid,REFISSUEID,  EXDATES, PROCEEDSFLAG  ,SUBJECTFLAG,    		   ISSUENUMBER ,   		   AFR ,   		   AMOUNT  ,ACCTNBR, 			   AVAILABLECREDIT, 			   AVAILABLETODAY, 			   MINAMOUNT  , 			   MAXAMOUNT  , 			   PRODUCTTYPE ,		   CUSIP,  				   SETTLE,ORGSETTLETDATE, SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,    	  AVGBID, BID ,OFFER , NOTES, PUBLISHED,  TRANSTYPE,         TRADERID  ,            TRADERLOGINNAME  ,            ACCRUEDINTEREST  ,            SALESCRAMOUNT  ,            SALESCR  ,            TRMARKUP  ,            TRMARKUPAMOUNT  ,          TOTALSALESCR  ,    RETAINEDINCOME , SPREADRETAIN ,   ASOFDATE, ISSUEDATE,    MODIFIEDDATE   ,        MODIFIEDBY   ,          CREATEDDATE   ,         CREATEDBY   ,           STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD  ,DISPOFFERDISCOUNT ,DISPOFFERYIELD  ,BIDYIELD,OFFERYIELD ,MSGTYPE,MATCODE            , ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON   ,TRADERACRUEDINT   ,           CURRENCYCODE,TICKETNUMBER,ISIN,BUYSCNT,SALESCNT,INVESTORACCTNBR, TRADINGFlAG,GRIDISSUEID,PREVPAYMENTDATE, PRICE,     DISPSETTLEMENTDATE, DISPMATURITYDATE, DISPMATURITYENDDATE, DISPEXDATES,SPLOGINID     )            VALUES  (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',?    , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,  fn_get_DISPDATE(?),	 fn_get_DISPDATE(?),	 fn_get_DISPDATE(?),	 fn_get_exdates(?),?  )
 sql.getCDSellIssueDetails = SELECT cdis.status, cdis.issuetype, isr.programid, isr.issuername, isr.shortname isrshrtname,'' buyscnt, '' salescnt, cdis.notes, cdis.published, cdis.offeringlimit, cdis.minimumpiecesize, cdis.tenortype, cdis.maturitydateflag, cdis.amountflag, TO_CHAR (cdis.maturityenddate, 'fmmm/dd/yy') maturityenddate, cdis.issuenumber, cdis.issueid, cdis.amount, cdis.availabletoday, cdis.minamount, cdis.maxamount, cdis.cusip, cdis.rootcusip, cdis.currencycode, cdis.bid, cdis.SOURCE, cdis.traderloginname, cdis.traderid, cdis.transtype, cdis.coupon, cdis.refissueid, isr.cusipbaseone, isr.ticker, cdis.prodid, cdis.dispbiddiscount, cdis.dispbidyield, cdis.dispofferyield, ROUND ( ( (cdis.amount * 1000) * (cdis.settlementdate - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360), 2 ) accruedinterest, ROUND ( ( ((cdis.amount * 1000) * NVL (cdis.price, 0)) + ( ( (cdis.amount * 1000) * (TRUNC (cdis.settlementdate) - cdis.dateddate) * NVL (cdis.coupon, 0) ) / (100 * 360) ) ) / 100, 2 ) netamt, '' libor, '' libortype, '' rolldate, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) investorcassii, cdis.acctnbr, st.descr, prd.prodcode, cdis.producttype, bookno, bookname, cdis.availablecredit, cdis.settle, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') settlementdate, TO_CHAR (cdis.maturitydate, 'fmmm/dd/yy') maturitydate, TO_CHAR (cdis.createddate, 'fmmm/dd/yy') issuedate, TO_CHAR (cdis.createddate, 'fmmm/dd') issuedatestr, TO_CHAR (cdis.dateddate, 'fmmm/dd/yy') dateddate, cdis.price, cdis.bidyeild, cdis.rejectreason, TO_CHAR (cdis.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, TO_CHAR (cdis.originalsettlementdate, 'fmmm/dd/yy' ) originalsettlementdate, am.acctname, cdis.allocationflag, cdis.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = cdis.sploginid) sploginname, 0 avgbid, cdis.voicetrade, cdis.voiceinvestor, cdis.ticketnumber FROM fo_program_m isr, vw_cdtradehistory_t cdis, fo_accountmaster_m am, fo_tm_tradestatus_m st, fo_product_m prd, fo_trader_books_m b WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.acctnbr = am.acctnbr AND am.status = 'Y' AND TRIM (cdis.status) = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND isr.defaultbookid = b.bookid 
 sql.getCPIssueDetails =  SELECT ism.prodid, ism.programid, ism.ISSUENUMBER , isr.shortname isrshrtname, '' voiceinvestor,'' voicetrade,TO_CHAR(avgbid) AVGBID, '' PUBLISHED,'' MATURITYDATEFLAG,'' CUSIPBASEONE,'' LIBOR,'' LIBORTYPE,'' ROLLDATE,'' ISSUEDATESTR,'' ORIGINALSETTLEMENTDATE,'' TENORTYPE,'' COUPON,fn_decrypt (am.cassiiacctnbr, 1) investorcassii,  ism.ISSUEID , ism.REFISSUEID, TO_CHAR (ism.ISSUEDATE, 'fmmm/dd/yy') ISSUEDATE, 'NEWSEARCH' cpaction , isr.ISSUERNAME,isr.TICKER ticker,ism.ticketnumber, am.shortname , ism.AMOUNT , fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, am.acctNbr,am.acctname, ism.PRODUCTTYPE , ism.CUSIP, TO_CHAR(ism.SETTLEMENTDATE,'fmmm/dd/yy') settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy')) FROM DUAL) settlementdatestr, TO_CHAR(ism.MATURITYDATE,'fmmm/dd/yy') MATURITYDATE , ism.maturitydate maturitydatens , TO_CHAR(ism.MATURITYENDDATE,'fmmm/dd/yy') MATURITYENDDATE , TO_CHAR (max(ism.maturityenddate) over(partition by ism.programid), 'fmmm/dd/yy') maxmaturityenddate , TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, decode(trunc(ism.createddate,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy'))trd, decode(trunc(ism.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.MATURITYDATE,'fmmm/dd'), TO_CHAR (ism.MATURITYDATE, 'fmmm/dd/yy'))mat, DECODE(ism.maturitydate,ism.maturityenddate, (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))FROM DUAL), DECODE(TO_CHAR (ism.maturitydate, 'fmmm'),TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy')) FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL), (SELECT fn_get_dispdate(TO_CHAR (ism.maturitydate,'mm/dd/yyyy'))FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL))) formatmatdate, ism.AVAILABLECREDIT, ism.AVAILABLETODAY, ism.MINAMOUNT , ism.MAXAMOUNT, ism.BID, ism.OFFER , ism.ACCRUEDINTEREST,NVL((amount*1000 - accruedinterest),0) moneyamt, to_char(ism.asofdate,'fmmm/dd/yy') asofdatestr, ism.NOTES , ism.TRANSTYPE ,ism.OFFERFLAG , ism.ROOTCUSIP,ism.ISSUETYPE,ism.RATEFLAG,ism.AMOUNTFLAG, isr.COUNTRYCODE, ism.DISPBIDDISCOUNT ,ism.DISPBIDYIELD ,ism.DISPOFFERDISCOUNT ,ism.DISPOFFERYIELD, bookno,bookname ,ism.status ,prd.prodcode, ism.source,ism.REJECTREASON ,ism.TRADERID ,ism.TRADERLOGINNAME,ism.SPLOGINID, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.sploginid) sploginname,ism.OFFERINGLIMIT,ism.MINIMUMPIECESIZE, ism.currencycode,isr.cptype,prd.prodname prodname,trb.bookid ,isr.MAXAMOUNT ISRMAXAMOUNT , nvl(MINSIZE,0) MINSIZE ,nvl(INCAMOUNT,0) INCAMOUNT , ism.PROCEEDSFLAG, ism.SUBJECTFLAG , TO_CHAR(ism.ORGSETTLETDATE,'fmmm/dd/yy') ORGSETTLETDATE, ism.tRADERACRUEDINT , EXDATES, ism.OFFERYIELD,ism.BIDYIELD,ism.TEMPCUSIP,ism.SUBJECTTOCALL,ism.MSGTYPE,ism.MATCODE, st.DESCR , st.DISPDESCR , ism.QUANTITYFLAG ,ism.REQTIMESTAMP,ism.ASSETBACKED,ism.MINIMUMPIECE, nvl(ism.price, '') price, 0 bidyeild, '' dateddate ,BUYSCNT,SALESCNT, GRIDISSUEID ,0 retainedincome ,isr.SPREAD, PREMIUM, FEE ,ism.ALLOCATIONFLAG,to_number(prd.sortorder) sortorder , nvl(((amount*1000)*(trunc(ism.MATURITYDATE)-ism.PREVPAYMENTDATE)*nvl(ism.bid,0) )/(100*360),0) netamt ,TO_CHAR(ism.PREVPAYMENTDATE,'fmmm/dd/yy') OFFERPREVPAYMENTDATE, 0 todayaccruedinterest FROM FO_ISSUES_M ism , fo_program_m isr ,FO_TRADER_BOOKS_M trb , fo_product_m prd ,FO_TM_TRADESTATUS_M st, fo_accountmaster_m am WHERE ism.programid = isr.programid and isr.DEFAULTBOOKID =trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status =st.STATUSID AND ism.ACCTNBR = am.ACCTNBR and am.status='Y' AND st.status='Y' and SUBACCTCASSII is null and ism.status in ('A','S') AND ism.ISSUEID = ?  UNION SELECT ism.prodid, ism.programid, ism.ISSUENUMBER , isr.shortname isrshrtname, ism.voiceinvestor,ism.voicetrade, '' AVGBID, '' PUBLISHED,'' MATURITYDATEFLAG,'' CUSIPBASEONE,'' LIBOR,'' LIBORTYPE,'' ROLLDATE,'' ISSUEDATESTR,'' ORIGINALSETTLEMENTDATE,'' TENORTYPE,'' COUPON,fn_decrypt (am.cassiiacctnbr, 1) investorcassii, ism.ISSUEID , ism.REFISSUEID, TO_CHAR (ism.ISSUEDATE, 'fmmm/dd/yy') ISSUEDATE, 'NEWSEARCH' cpaction , isr.ISSUERNAME,isr.TICKER ticker,ism.ticketnumber, am.shortname , ism.AMOUNT , fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, am.acctNbr,am.acctname, ism.PRODUCTTYPE , ism.CUSIP, TO_CHAR(ism.SETTLEMENTDATE,'fmmm/dd/yy') settlementdate,  ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy')) FROM DUAL) settlementdatestr, TO_CHAR(ism.MATURITYDATE,'fmmm/dd/yy') MATURITYDATE , ism.maturitydate maturitydatens , TO_CHAR(ism.MATURITYENDDATE,'fmmm/dd/yy') MATURITYENDDATE , TO_CHAR (max(ism.maturityenddate) over(partition by ism.programid), 'fmmm/dd/yy') maxmaturityenddate , TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, decode(trunc(ism.createddate,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy'))trd, decode(trunc(ism.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.MATURITYDATE,'fmmm/dd'), TO_CHAR (ism.MATURITYDATE, 'fmmm/dd/yy'))mat, DECODE(ism.maturitydate,ism.maturityenddate, (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))FROM DUAL), DECODE(TO_CHAR (ism.maturitydate, 'fmmm'),TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy')) FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL), (SELECT fn_get_dispdate(TO_CHAR (ism.maturitydate,'mm/dd/yyyy'))FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL))) formatmatdate, ism.AVAILABLECREDIT, ism.AVAILABLETODAY, ism.MINAMOUNT , ism.MAXAMOUNT, ism.BID, ism.OFFER , ism.ACCRUEDINTEREST,NVL((amount*1000 - accruedinterest),0) moneyamt, to_char(ism.asofdate,'fmmm/dd/yy') asofdatestr, ism.NOTES , ism.TRANSTYPE ,ism.OFFERFLAG , ism.ROOTCUSIP,ism.ISSUETYPE,ism.RATEFLAG,ism.AMOUNTFLAG, isr.COUNTRYCODE, ism.DISPBIDDISCOUNT ,ism.DISPBIDYIELD ,ism.DISPOFFERDISCOUNT ,ism.DISPOFFERYIELD, bookno,bookname ,ism.status ,prd.prodcode, ism.source,ism.REJECTREASON ,ism.TRADERID ,ism.TRADERLOGINNAME,ism.SPLOGINID, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.sploginid) sploginname,ism.OFFERINGLIMIT,ism.MINIMUMPIECESIZE, ism.currencycode,isr.cptype,prd.prodname prodname,trb.bookid ,isr.MAXAMOUNT ISRMAXAMOUNT , nvl(MINSIZE,0) MINSIZE ,nvl(INCAMOUNT,0) INCAMOUNT , ism.PROCEEDSFLAG, ism.SUBJECTFLAG , TO_CHAR(ism.ORGSETTLETDATE,'fmmm/dd/yy') ORGSETTLETDATE, ism.tRADERACRUEDINT , EXDATES, ism.OFFERYIELD,ism.BIDYIELD,ism.TEMPCUSIP,ism.SUBJECTTOCALL,ism.MSGTYPE,ism.MATCODE, st.DESCR , st.DISPDESCR , ism.QUANTITYFLAG ,ism.REQTIMESTAMP,ism.ASSETBACKED,ism.MINIMUMPIECE, nvl(ism.price, '') price, 0 bidyeild, '' dateddate ,0 BUYSCNT,0 SALESCNT,'' GRIDISSUEID ,0 retainedincome ,isr.SPREAD, PREMIUM, FEE ,ism.ALLOCATIONFLAG,to_number(prd.sortorder) sortorder , nvl(((amount*1000)*(trunc(ism.MATURITYDATE)-ism.ORGSETTLETDATE)*nvl(ism.bid,0) )/(100*360),0) netamt ,TO_CHAR(ism.ORGSETTLETDATE,'fmmm/dd/yy') OFFERPREVPAYMENTDATE , 0 todayaccruedinterest FROM vw_cptradehistory_t ism , fo_program_m isr ,FO_TRADER_BOOKS_M trb , fo_product_m prd ,FO_TM_TRADESTATUS_M st, fo_accountmaster_m am WHERE ism.programid = isr.programid and isr.DEFAULTBOOKID =trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status =st.STATUSID AND ism.ACCTNBR = am.ACCTNBR and am.status='Y' AND st.status='Y' and SUBACCTCASSII is null and ism.status in ('A','S') AND ism.ISSUEID = ? 
 sql.updateAllocFlagDetails = SET       allocationflag  = ? ,modifiedby     =?, modifieddate   =TO_DATE(?,?) WHERE     issueid= ? 

 sql.deleteCusipBasedCDInventory =  DELETE fo_cdissues_m WHERE cusip = ? AND  status = 'A'
 sql.deleteIssueBasedCDInventory =  DELETE fo_cdissues_m WHERE issueid = ?
 
 sql.insertClientSellRawMsg=INSERT INTO fo_client_tradexml_d (transid, xmldata ) VALUES (?,?)
 sql.insertClientSellOne=INSERT INTO FO_CLIENT_TRADING_T ( TRANSID, timestamp, process, location, environment, hostname, startdate, instrumentcodetype, instrumentcode, originator, originatorordernumber, transaction, market, timeconstraint, discountrate, dealersettlementdate, ordersettlementdate, salesperson, customeraccount, programacronym, producttype, issuedate, maturity, issuetype, currencycode, ordertimestamp,
 sql.insertClientSellTwo=quantity, createddate, postedrate, customercompany ,TRANSTYPE,VERSION ) VALUES ( ?, TO_DATE(?,?), ?, ?, ?, ?, TO_DATE(?,?), ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE(?,?), TO_DATE(?,?), ?, ?, ?, ?, TO_DATE(?,?), TO_DATE(?,?), ?, ?, TO_DATE(?,?),
 sql.updateClientSellOne=UPDATE  fo_client_trading_t	SET status =? ,	 popup =?,
 sql.updateClientSellTwo=quantity = ?, postedrate = ?, ordersettlementdate = to_date(?,?), dealersettlementdate = to_date(?,?), maturity = to_date(?,?), rejectreason =?, acceptedtime = to_date(?,?), acceptedby = ? , acceptedloginid = ?,
 sql.getClientTransId= SELECT transid, issueid FROM fo_client_trading_t WHERE originatorordernumber = ? 
 sql.getClientTradeDetails=SELECT act.shortname, act.acctname, transid, TIMESTAMP, process, ct.LOCATION, environment, hostname, TO_CHAR (startdate, ?) startdate, instrumentcodetype, instrumentcode, originator, originatorordernumber, TRANSACTION, market, timeconstraint, discountrate, quantity, TO_CHAR (dealersettlementdate, ?) dealersettlementdate, TO_CHAR (ordersettlementdate, ?) ordersettlementdate, salesperson, customeraccount, programacronym, producttype, TO_CHAR (issuedate, ?) issuedate, TO_CHAR (maturity, ?) maturity, issuetype, ct.currencycode, ordertimestamp, postedrate, popup, ct.status, acceptedby, CASE WHEN ct.status = 'R' THEN (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ct.rejectedby) ELSE (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ct.acceptedby) END tradername, issueid, aon, rejectreason, customercompany, transtype, TO_CHAR (ct.modifieddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, ct.VERSION FROM fo_client_trading_t ct, fo_accountmaster_m act WHERE fn_decrypt (act.cassiiacctnbr, 1) = ct.customeraccount AND act.programid IS NULL AND act.status = 'Y' AND act.subacctcassii IS NULL AND transid = ?
 sql.getClientTrades=SELECT act.shortname, act.acctname, fn_decrypt(act.CASSIIACCTNBR, 1) cassii, transid, TIMESTAMP, process, ct.LOCATION, environment, hostname, TO_CHAR (startdate, ?) startdate, instrumentcodetype, instrumentcode, originator, originatorordernumber, TRANSACTION, market, timeconstraint, discountrate, quantity, TO_CHAR (dealersettlementdate, ?) dealersettlementdate, TO_CHAR (ordersettlementdate, ?) ordersettlementdate, nvl((SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ct.salesperson) , ct.salesperson ) salesperson, customeraccount, ct.programacronym,  ct.producttype productname,i.producttype producttype, TO_CHAR (ct.issuedate, ?) issuedate, TO_CHAR (maturity, ?) maturity, ct.issuetype, ct.currencycode, ordertimestamp, postedrate, popup, ct.status, CASE WHEN ct.status = 'A' THEN 'Accepted' WHEN ct.status = 'R' THEN 'Rejected' WHEN ct.status = 'P' THEN 'Pending' WHEN ct.status = 'MI' THEN 'On hold' WHEN ct.status = 'C' THEN 'Cancelled' END trasestatus, acceptedby, CASE WHEN ct.status = 'R' THEN (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ct.rejectedby) ELSE (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ct.acceptedby) END tradername, ct.issueid, aon, ct.rejectreason, customercompany, ct.transtype, TO_CHAR (ct.modifieddate, ?) createddate, ct.VERSION, m.offer offeryield, m.offeringlimit offeramount, TO_CHAR (m.settlementdate, ?) offersettle, TO_CHAR (m.maturitydate, ?) offermat, m.dispsettlementdate, m.dispmaturitydate, m.issueid offerIssueId, m.ACCTNBR acctNbr, m.availabletoday, i.issuername FROM fo_client_trading_t ct, fo_accountmaster_m act, fo_program_m i, fo_issues_m m WHERE fn_decrypt (act.cassiiacctnbr, 1) = ct.customeraccount AND m.cusip = ct.instrumentcode AND i.programid = m.programid AND m.tradingflag = 'Y' AND m.status IN ('A', 'S', 'P', 'W') AND act.programid IS NULL AND act.status = 'Y' AND act.subacctcassii IS NULL
 
 sql.getSalesTrades =   SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, ?) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, ism.issueid offerissueid, to_char(ism.maturitydate,'mm/dd') dispmaturitydate, to_char(ism.settlementdate,'mm/dd') dispsettlementdate, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, ?) settledate, (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ism.modifiedby) tradername, ism.modifiedby acceptedby, CASE WHEN ism.status = 'A' THEN 'Accepted' WHEN ism.status = 'R' THEN 'Rejected' WHEN ism.status = 'P' THEN 'Pending' WHEN ism.status = 'C' THEN 'Cancelled' END trasestatus, TO_CHAR (ism.maturitydate, ?) maturitydate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, ?) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, ?) ) mat, decode(ism.availablecredit,0,grd.AVAILABLECREDIT,ism.availablecredit) availablecredit, decode(ism.availabletoday,0,grd.AVAILABLETODAY,ism.availabletoday)AVAILABLETODAY, ism.minamount, ism.maxamount, ism.bid, ism.offer offeryield, ism.accruedinterest,NVL ((ism.amount * 1000 - ism.accruedinterest), 0) moneyamt, ism.transtype, ism.issuetype, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid ), ism.traderid) traderloginname, ism.sploginid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid ), ism.sploginid) sploginname, nvl(ism.offeringlimit,grd.OFFERINGLIMIT)offeringlimit, ism.currencycode, ism.reqtimestamp FROM vw_cptradehistory_t ism, FO_ECPGRID_M grd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND ism.traderid = ism.sploginid and ism.REFISSUEID = grd.ISSUEID(+) 
 sql.getCDSalesTrades = union SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, ?) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, ism.issueid offerissueid, to_char(ism.maturitydate,'mm/dd') dispmaturitydate, to_char(ism.settlementdate,'mm/dd') dispsettlementdate, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, ?) settledate, (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ism.modifiedby) tradername, ism.modifiedby acceptedby, CASE WHEN ism.status = 'A' THEN 'Accepted' WHEN ism.status = 'R' THEN 'Rejected' WHEN ism.status = 'P' THEN 'Pending' WHEN ism.status = 'C' THEN 'Cancelled' END trasestatus, TO_CHAR (ism.maturitydate, ?) maturitydate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, ?) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, ?) ) mat, decode(ism.availablecredit,0,grd.AVAILABLECREDIT,ism.availablecredit) availablecredit, decode(ism.availabletoday,0,grd.AVAILABLETODAY,ism.availabletoday)AVAILABLETODAY, ism.minamount, ism.maxamount, ism.bid, ism.offer offeryield, ism.accruedinterest,NVL ((ism.amount * 1000 - ism.accruedinterest), 0) moneyamt, ism.transtype, ism.issuetype, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid ), ism.traderid) traderloginname, ism.sploginid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid ), ism.sploginid) sploginname, nvl(ism.offeringlimit,grd.OFFERINGLIMIT)offeringlimit, ism.currencycode, NULL reqtimestamp FROM vw_cdtradehistory_t ism, FO_CDGRID_M grd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND ism.traderid = ism.sploginid and ism.REFISSUEID = grd.ISSUEID(+)
 sql.getADNSalesTrades =  UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, ?) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, ism.issueid offerissueid, to_char(ism.maturitydate,'mm/dd') dispmaturitydate, to_char(ism.settlementdate,'mm/dd') dispsettlementdate, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, ?) settledate, (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ism.modifiedby) tradername, ism.modifiedby acceptedby, CASE WHEN ism.status = 'A' THEN 'Accepted' WHEN ism.status = 'R' THEN 'Rejected' WHEN ism.status = 'P' THEN 'Pending' WHEN ism.status = 'C' THEN 'Cancelled' END trasestatus, TO_CHAR (ism.maturitydate, ?) maturitydate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, ?) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, ?) ) mat, decode(ism.availablecredit,0,grd.AVAILABLECREDIT,ism.availablecredit) availablecredit, decode(ism.availabletoday,0,grd.AVAILABLETODAY,ism.availabletoday)AVAILABLETODAY, ism.minamount, ism.maxamount, ism.bid, ism.offer offeryield, ism.accruedinterest,NVL ((ism.amount * 1000 - ism.accruedinterest), 0) moneyamt, ism.transtype, ism.issuetype, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid ), ism.traderid) traderloginname, ism.sploginid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid ), ism.sploginid) sploginname, nvl(ism.offeringlimit,grd.OFFERINGLIMIT)offeringlimit, ism.currencycode, NULL reqtimestamp FROM vw_adntradehistory_t ism, FO_ADN_ISSUES_M grd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND ism.traderid = ism.sploginid and ism.REFISSUEID = grd.ISSUEID(+) 
 sql.getFRCPCDSalesTrades = UNION SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, ?) issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, ism.issueid offerissueid, to_char(ism.maturitydate,'mm/dd') dispmaturitydate, to_char(ism.settlementdate,'mm/dd') dispsettlementdate, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, ?) settledate, (SELECT CONCAT (CONCAT (fn_decrypt (mem.firstname, 1), ' '), fn_decrypt (mem.lastname, 1) ) FROM fo_member_m mem WHERE mem.loginid = ism.modifiedby) tradername, ism.modifiedby acceptedby, CASE WHEN ism.status = 'A' THEN 'Accepted' WHEN ism.status = 'R' THEN 'Rejected' WHEN ism.status = 'P' THEN 'Pending' WHEN ism.status = 'C' THEN 'Cancelled' END trasestatus, TO_CHAR (ism.maturitydate, ?) maturitydate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, ?) ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, ?) ) mat, decode(ism.availablecredit,0,grd.AVAILABLECREDIT,ism.availablecredit) availablecredit, decode(ism.availabletoday,0,grd.AVAILABLETODAY,ism.availabletoday)AVAILABLETODAY, ism.minamount, ism.maxamount, ism.bid, ism.offer offeryield, ism.accruedinterest,NVL ((ism.amount * 1000 - ism.accruedinterest), 0) moneyamt, ism.transtype, ism.issuetype, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid ), ism.traderid) traderloginname, ism.sploginid, NVL(( SELECT ( fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid ), ism.sploginid) sploginname, null offeringlimit, ism.currencycode, NULL reqtimestamp FROM vw_tradehistory_t ism, FO_FRGRID_M grd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trim(ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND ism.traderid = ism.sploginid and ism.REFISSUEID = grd.ISSUEID(+) 
   
   
 #sql.getSalesTradesOne = fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m,fo_issues_m iss am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' and ism.traderid = ism.SPLOGINID AND ism.status IN (?,?, ?,?) ORDER BY createddate DESC
 
 sql.getPendingTrades = SELECT transid, InstrumentCode, TO_CHAR(createddate,'MM/dd/yy HH24:MI:SS') createddate,status,issueid FROM   FO_CLIENT_TRADING_T WHERE   status	IN('P','MI','W') OR  status = 'A' AND POPUP	= 'Y' OR  status = 'R' AND POPUP	= 'Y'
 sql.updateTradeIssueStatus = UPDATE  FO_CP_TRADING_T set status =?, REJECTREASON = ?  WHERE  TEMPCUSIP = ?
 sql.updateTradeStatus = UPDATE FO_CLIENT_TRADING_T	set status = ?, POPUP = ? ,  REJECTREASON =	?  WHERE  TRANSID = ?
 sql.issuesEODBalanceInsert = INSERT INTO fo_issues_eodbalance_d  select issueid, TO_DATE (?, 'M/d/yy'), iss.issuerid, issuername, transtype, iss.status, settlementdate, maturitydate, availabletoday, availablecredit, bid, offer, traderloginname  FROM fo_issues_m iss	,fo_issuer_m isr WHERE iss.issuerid = isr.issuerid and iss.status <> 'C' AND isr.status ='Y'  AND transtype = '10' AND maturitydate > TO_DATE (?, 'M/d/yy') AND availablecredit > 0
 
################################################################################################################
----------------------------------------------------- Desk View  ---------------------------------------------------
################################################################################################################ 
#sql.getDeskViewProductAmounts = SELECT DISTINCT t.producttype, t.prodcode, SUM (POSITION) OVER (PARTITION BY prodcode) sumofprod_positionamt, SUM (netsettleposition) OVER (PARTITION BY prodcode) sumofprod_netsetts, SUM (nintydays) OVER (PARTITION BY prodcode) sumofprod_sumofnintydays, SUM (unrealizedpl) OVER (PARTITION BY prodcode) sumofprod_sumofunrealizedpl, SUM (realizedpl) OVER (PARTITION BY prodcode) sumofprod_sumofrealizedpl, SUM (pandl) OVER (PARTITION BY prodcode) sumofprod_sumofpandl, SUM (NVL(dv01,0)) OVER (PARTITION BY prodcode) sumprod_dv01, SUM (NVL(cov01,0)) OVER (PARTITION BY prodcode) sumprod_cov01,   SUM(avgAmt) OVER (PARTITION BY prodcode)/SUM(amount) OVER (PARTITION BY prodcode)sumprod_weightavg FROM (SELECT tt.*, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01 FROM (SELECT  a.coupon,a.producttype, a.prodcode, a.bookno, a.transtype, a.maturitydate, a.settledate, a.dispbidyield, a.amount, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl,avgAmt FROM (SELECT '0' coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) union SELECT '0' coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal, NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal,                NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getDeskViewProductAmounts = SELECT DISTINCT t.producttype, t.prodcode, SUM (POSITION) OVER (PARTITION BY prodcode) sumofprod_positionamt, SUM (netsettleposition) OVER (PARTITION BY prodcode) sumofprod_netsetts, SUM (nintydays) OVER (PARTITION BY prodcode) sumofprod_sumofnintydays, SUM (unrealizedpl) OVER (PARTITION BY prodcode) sumofprod_sumofunrealizedpl, SUM (realizedpl) OVER (PARTITION BY prodcode) sumofprod_sumofrealizedpl, SUM (pandl) OVER (PARTITION BY prodcode) sumofprod_sumofpandl, SUM (NVL (dv01, 0)) OVER (PARTITION BY prodcode) sumprod_dv01, SUM (NVL (cov01, 0)) OVER (PARTITION BY prodcode) sumprod_cov01, SUM (avgamt) OVER (PARTITION BY prodcode) / SUM (amount) OVER (PARTITION BY prodcode) sumprod_weightavg FROM (SELECT tt.*, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) ELSE ROUND ( - ( (tt.coupon + 1) * (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) END dv01, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) ) * 2 * POSITION, 2 ) ELSE ROUND ( ( 2 * (tt.coupon + 1) * (dispbidyield / 100) ) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) * 2 * POSITION, 2 ) END cov01 FROM (SELECT a.coupon, a.producttype, a.prodcode, a.bookno, a.transtype, a.maturitydate, a.settledate, a.dispbidyield, a.amount, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl, avgamt FROM (SELECT * FROM (SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL (( ism.availablecredit * ( TO_DATE (TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ), 0 ) avgamt FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL (( ism.availablecredit * ( TO_DATE (TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ), 0 ) avgamt FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal, NVL (( ism.availablecredit * ( TO_DATE (TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ), 0 ) avgamt FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL (( ism.availablecredit * ( TO_DATE (TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ), 0 ) avgamt FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) ) m WHERE m.bookid IN ( SELECT DISTINCT bookid FROM (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')) UNION SELECT '' currencycode, bookid, price || '' coupon, prodid producttype, prodname prodcode, bookid bookno, prodid prodid, '10' transtype, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) maturitydate, '11' issueid, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) settledate, POSITION amount, price || '' dispbidyield, 0 sumofavailcreditrange, 0 realized, 0 unrealized, 0 realunreal, NVL (( POSITION * ( TO_DATE (TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ), 0 ) avgamt FROM fo_futures_contract_m WHERE status = 'Y' ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' AND UP.loginid = ? AND g.companyid = ?) tt) t ORDER BY prodcode ASC

#sql.getDeskViewProductTotals =     SELECT distinct SUM (POSITION) OVER () total_positionamt, SUM (netsettleposition) OVER () total_netsetts, SUM (nintydays) OVER () total_nintydays, SUM (pandl) OVER () total_pandl, SUM (realizedpl) OVER () total_realized, SUM (unrealizedpl) OVER () total_unrealized, sum(dv01) over() Total_dv01, sum(COV01) over() total_COV01 FROM ( select tt.*,case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01  FROM (SELECT  a.coupon,a.transtype, a.producttype,a.maturityDate,a.settledate,a.DISPBIDYIELD, a.amount - NVL ((SELECT SUM (NVL (amount, 0))  FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION,  a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND (  SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl FROM (SELECT '0' coupon,ism.prodid,ism.producttype,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) union  SELECT '0' coupon,ism.prodid,ism.producttype,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT  ism.coupon,ism.prodid,ism.producttype,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.prodid,ism.producttype,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M'  AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'  
sql.getDeskViewProductTotals =    SELECT DISTINCT SUM (POSITION) OVER () total_positionamt, SUM (netsettleposition) OVER () total_netsetts, SUM (nintydays) OVER () total_nintydays, SUM (pandl) OVER () total_pandl, SUM (realizedpl) OVER () total_realized, SUM (unrealizedpl) OVER () total_unrealized, SUM (dv01) OVER () total_dv01, SUM (cov01) OVER () total_cov01 FROM (SELECT tt.*, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) ELSE ROUND ( - ( (tt.coupon + 1) * (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) END dv01, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) ) * 2 * POSITION, 2 ) ELSE ROUND ( ( 2 * (tt.coupon + 1) * (dispbidyield / 100) ) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) * 2 * POSITION, 2 ) END cov01 FROM (SELECT a.coupon, a.transtype, a.producttype, a.maturitydate, a.settledate, a.dispbidyield, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl FROM (SELECT m.* FROM (SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.prodid, ism.producttype, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.prodid, ism.producttype, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, ism.prodid, ism.producttype, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, ism.prodid, ism.producttype, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) ) m WHERE m.bookid IN ( SELECT DISTINCT bookid FROM (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')) UNION SELECT '' currencycode, '' bookid, price || '' coupon, prodid, prodid producttype, '10' transtype, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) maturitydate, '11' issueid, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) settledate, POSITION amount, price || '' dispbidyield, 0 sumofavailcreditrange, 0 realized, 0 unrealized, 0 realunreal FROM fo_futures_contract_m WHERE status = 'Y' ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.status = 'Y' AND g.currencycode = a.currencycode AND UP.status = 'Y' AND UP.loginid = ? AND g.companyid = ?) tt) t

#sql.getDeskViewBookAmounts =  SELECT  distinct t.prodcode,t.producttype, t.bookid, t.bookname,  SUM (POSITION) OVER (PARTITION BY prodcode, bookno) sumofpositionamt, SUM (netsettleposition) OVER (PARTITION BY prodcode, bookno) sumofnetsetts, SUM (nintydays) OVER (PARTITION BY prodcode, bookno) sumofnintydays, SUM (realizedpl) OVER (PARTITION BY prodcode, bookno) sumofrealizedpl, SUM (unrealizedpl) OVER (PARTITION BY prodcode, bookno) sumofunrealizedpl, SUM (pandl) OVER (PARTITION BY prodcode, bookno) sumofpandl, sum(dv01) over(PARTITION BY prodcode, bookno) Total_dv01, sum(COV01) over(PARTITION BY prodcode, bookno) total_COV01 FROM ( select tt.*,case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01 FROM (SELECT a.coupon,a.bookid,a.prodcode,a.producttype,a.bookno,a.BOOKNAME, a.transtype, a.maturityDate,a.settledate,a.DISPBIDYIELD, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND (  SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl FROM (SELECT '0' coupon,trb.bookid,prd.prodcode,ism.producttype,bookno,BOOKNAME,ism.prodid,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn  FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal  FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT  ism.coupon,trb.bookid,prd.prodcode,ism.producttype,bookno,BOOKNAME,ism.prodid,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal  FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) union SELECT '0' coupon,trb.bookid,prd.prodcode,ism.producttype,bookno,BOOKNAME,ism.prodid,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn  FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal  FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT  ism.coupon,trb.bookid,prd.prodcode,ism.producttype,bookno,BOOKNAME,ism.prodid,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal  FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,trb.bookid,prd.prodcode,ism.producttype,bookno,BOOKNAME,ism.prodid,ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange,  NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'  
sql.getDeskViewBookAmounts =  SELECT DISTINCT t.prodcode, t.producttype, t.bookid, t.bookname, SUM (POSITION) OVER (PARTITION BY prodcode, bookno) sumofpositionamt, SUM (netsettleposition) OVER (PARTITION BY prodcode, bookno) sumofnetsetts, SUM (nintydays) OVER (PARTITION BY prodcode, bookno) sumofnintydays, SUM (realizedpl) OVER (PARTITION BY prodcode, bookno) sumofrealizedpl, SUM (unrealizedpl) OVER (PARTITION BY prodcode, bookno) sumofunrealizedpl, SUM (pandl) OVER (PARTITION BY prodcode, bookno) sumofpandl, SUM (dv01) OVER (PARTITION BY prodcode, bookno) total_dv01, SUM (cov01) OVER (PARTITION BY prodcode, bookno) total_cov01 FROM (SELECT tt.*, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) ELSE ROUND ( - ( (tt.coupon + 1) * (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) END dv01, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900', '1400') THEN ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) ) * 2 * POSITION, 2 ) ELSE ROUND ( ( 2 * (tt.coupon + 1) * (dispbidyield / 100) ) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) * 2 * POSITION, 2 ) END cov01 FROM (SELECT a.coupon, a.bookid, a.prodcode, a.producttype, a.bookno, a.bookname, a.transtype, a.maturitydate, a.settledate, a.dispbidyield, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl FROM (SELECT m.* from (SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) ) m WHERE m.bookid IN ( SELECT DISTINCT bookid FROM (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')) UNION SELECT '' currencycode, price || '' coupon, bookid, prodname prodcode, prodid producttype, bookid bookno, bookname, prodid, '10' transtype, TO_CHAR (TO_DATE (monthval, 'MON YYYY'), 'fmmm/dd/yy' ) maturitydate, '11' issueid, TO_CHAR (TO_DATE (monthval, 'MON YYYY'), 'fmmm/dd/yy' ) settledate, POSITION amount, price || '' dispbidyield, 0 sumofavailcreditrange, 0 realized, 0 unrealized, 0 realunreal FROM fo_futures_contract_m WHERE status = 'Y' ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'

#sql.getDeskViewIssuerAmounts =  SELECT  distinct t.dispmaturitydate, t.transtype, t.bookno,t.bookid,t.bookname,t.PRODUCTTYPE,t.ISSUEID,t.programid,t.REFISSUEID,t.ISSUETYPE,t.CUSIP,t.TICKER,t.BID,t.prodcode, t.AMOUNT,t.NetSettleposition,t.NINTYDAYS,t.unrealizedpl,t.realizedpl,t.Pandl,t.maturityDate,t.settledate, t.position,t.DISPBIDYIELD, dv01,COV01 FROM ( select tt.*,case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01 FROM (SELECT  a.coupon,a.dispmaturitydate, a.transtype, a.bookno,a.bookid,a.bookname, a.PRODUCTTYPE,a.ISSUEID,a.programid,a.REFISSUEID,a.ISSUETYPE,a.CUSIP,a.TICKER,a.BID,a.prodcode, a.AMOUNT,a.maturityDate,a.settledate, a.DISPBIDYIELD,  a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND (  SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl  FROM (SELECT '0' coupon,ism.dispmaturitydate, bookno,bookname,ism.transtype,ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield,trb.bookid FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) union SELECT '0' coupon,ism.dispmaturitydate, bookno,bookname,ism.transtype,ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield,trb.bookid FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,'' dispmaturitydate, bookno,bookname,ism.transtype,ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate,ism.dispbidyield,trb.bookid FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.dispmaturitydate, bookno,bookname,ism.transtype,ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * (ism.maturitydate - ism.settlementdate) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate,ism.dispbidyield,trb.bookid FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE  g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' 
sql.getDeskViewIssuerAmounts =  SELECT DISTINCT t.dispmaturitydate, t.transtype, t.bookno, t.bookid, t.bookname, t.producttype, t.issueid, t.programid, t.refissueid, t.issuetype, t.cusip, t.ticker, t.bid, t.prodcode, t.amount, t.netsettleposition, t.nintydays, t.unrealizedpl, t.realizedpl, t.pandl, t.maturitydate, t.settledate, t.POSITION, t.dispbidyield, dv01, cov01 FROM (SELECT tt.*, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900') THEN ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) ELSE ROUND ( - ( (tt.coupon + 1) * (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) ) / 360 * POSITION, 2 ) END dv01, CASE WHEN tt.producttype IN ('1200', '1600', '2700', '2900') THEN ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) ) * 2 * POSITION, 2 ) ELSE ROUND ( ( 2 * (tt.coupon + 1) * (dispbidyield / 100) ) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy' ) - TO_DATE (TO_CHAR (SYSDATE, 'fmmm/dd/yy' ), 'fmmm/dd/yy' ) ) / 360 ) * 2 * POSITION, 2 ) END cov01 FROM (SELECT a.coupon, a.dispmaturitydate, a.transtype, a.bookno, a.bookid, a.bookname, a.producttype, a.issueid, a.programid, a.refissueid, a.issuetype, a.cusip, a.ticker, a.bid, a.prodcode, a.amount, a.maturitydate, a.settledate, a.dispbidyield, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl FROM (SELECT m.* FROM (SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.dispmaturitydate, bookno, bookname, ism.transtype, ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, '0' coupon, ism.dispmaturitydate, bookno, bookname, ism.transtype, ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, decode(to_char(ism.MATURITYDATE,'yyyy'),to_char(sysdate,'yyyy'),to_char(ism.MATURITYDATE,'mm/dd'),to_char(ism.MATURITYDATE,'dd/mm/yy')) dispmaturitydate, bookno, bookname, ism.transtype, ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.currencycode, isr.defaultbookid bookid, ism.coupon, ism.dispmaturitydate, bookno, bookname, ism.transtype, ism.producttype, ism.cusip, ism.issueid, ism.refissueid, ism.issuetype, ism.programid, isr.ticker ticker, ism.bid, prd.prodcode, ism.amount, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate ) = TRUNC (SYSDATE )) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, ism.prodid, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.dispbidyield FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) ) m WHERE m.bookid IN ( SELECT DISTINCT bookid FROM (SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE mb.loginid = trb.traderid AND mb.loginid = ? AND mb.status = 'Y' AND trb.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND pr.traderid = ? AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT trb.bookid, trb.bookname, trb.prodid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND mb.loginid = ? AND trb.status = 'Y' AND mb.status = 'Y')) UNION SELECT '' currencycode, bookid, price || '' coupon, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) dispmaturitydate, bookid bookno, bookname, '10' transtype, prodid producttype, symbol cusip, '11' issueid, '11' refissueid, prodid issuetype, prodid programid, symbol ticker, price bid, prodname prodcode, POSITION amount, 0 sumofavailcreditrange, 0 realized, 0 unrealized, 0 realunreal, prodid, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) maturitydate, TO_CHAR (TO_DATE (monthval, 'MON YYYY' ), 'fmmm/dd/yy' ) settledate, price || '' dispbidyield FROM fo_futures_contract_m WHERE status = 'Y' ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'

sql.getRiskByBook = SELECT DISTINCT t.prodcode, t.producttype, t.bookid, t.bookname, SUM (POSITION) OVER (PARTITION BY prodcode, bookno) sumofpositionamt, SUM (netsettleposition) OVER (PARTITION BY prodcode, bookno) sumofnetsetts, SUM (nintydays) OVER (PARTITION BY prodcode, bookno) sumofnintydays, SUM (realizedpl) OVER (PARTITION BY prodcode, bookno) sumofrealizedpl, SUM (unrealizedpl) OVER (PARTITION BY prodcode, bookno) sumofunrealizedpl, SUM (pandl) OVER (PARTITION BY prodcode, bookno) sumofpandl, SUM (NVL(dv01,0)) OVER (PARTITION BY prodcode, bookno) total_dv01, SUM (NVL(cov01,0)) OVER (PARTITION BY prodcode, bookno) total_cov01, SUM(avgAmt) OVER (PARTITION BY prodcode, bookno) total_avg, SUM(amount) OVER (PARTITION BY prodcode, bookno) total_amt, SUM(avgAmt) OVER (PARTITION BY prodcode, bookno)/SUM(amount) OVER (PARTITION BY prodcode, bookno) wam from (SELECT tt.*, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01 FROM (SELECT a.coupon, a.bookid, a.prodcode, a.producttype, a.bookno, a.bookname, a.transtype, a.maturitydate, a.settledate, a.dispbidyield,a.amount, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl, avgAmt FROM (SELECT '0' coupon, trb.bookid, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL((ism.availablecredit * ( TO_DATE (to_char(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) union SELECT '0' coupon, trb.bookid, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL((ism.availablecredit * ( TO_DATE (to_char(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon, trb.bookid, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal, NVL((ism.availablecredit * ( TO_DATE (to_char(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon, trb.bookid, prd.prodcode, ism.producttype, bookno, bookname, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal, NVL((ism.availablecredit * ( TO_DATE (to_char(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE) ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
########################################################################################################################################
------------------------------------------------------- FRCP/FRCD Product -------------------------------------------------------------------------
########################################################################################################################################
sql.getCompletedSheets = SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY TO_DATE (a.maturitydate, 'mm/dd/yyyy' )) rnum FROM (SELECT DISTINCT prd.prodid prodid, prd.prodcode prodcode, cd.issueid, isr.programid, issuername, prd.prodname issuetype, isr.ticker ticker, cd.issuenumber, cd.cusip, cd.amount issuesize, price issueprice, TO_CHAR (cd.issuedate, 'fmmm/dd/yy' ) tradedate, TO_CHAR (cd.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (cd.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (cd.dateddate, 'fmmm/dd/yy' ) dateddate, (cd.maturitydate - cd.settlementdate ) noofdays, cd.spread spread, cd.accruedinterest, cd.dispbiddiscount initialcoupon, cd.coupon coupon, cd.availablecredit availablecredit, NVL (cd.availabletoday, 0) availabletoday, cd.bidyeild yield, cd.bid, cd.offer, NVL (cd.offeryeild, 0) offeryeild, NVL ( ( (amount * 1000) * ( TRUNC (SYSDATE) - cs.prevpaymentdate ) * NVL (cs.allin, 0) ) / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN ( ( (amount * 1000) * ( TRUNC (cs.prevpaymentdate ) - cd.issuedate ) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), ( (amount * 1000) * (TRUNC (SYSDATE) - cd.issuedate) * NVL (cd.bid, 0) ) / (100 * 360) ) todayaccruedinterest, cd.currencycode currencycode, cd.rolldate || CASE WHEN cd.rolldate = '1' OR cd.rolldate = '21' THEN 'st' WHEN cd.rolldate = '2' OR cd.rolldate = '22' THEN 'nd' WHEN cd.rolldate = '3' OR cd.rolldate = '23' THEN 'rd' ELSE 'th' END || ' of the Month' rolldate, CASE WHEN cd.rolltype = '30' THEN 'Monthly' WHEN cd.rolltype = '90' THEN 'Quarterly' WHEN cd.rolltype = '1' THEN 'Daily' ELSE 'At Mature date' END rolltype, CASE WHEN cd.libortype = '30' THEN '1 Month' WHEN cd.libortype = '90' THEN '3 Months' WHEN cd.libortype = '180' THEN 'Prime' WHEN cd.libortype = '270' THEN 'FF Open' WHEN cd.libortype = '360' THEN 'FFPD' WHEN cd.libortype = '400' THEN 'T-Bill' END libortype, isr.countrycode countrycode, offertype, cs.libor, cd.rolldate rolldatecomplete, cd.rolltype rolltypecomplete, cd.securitytype FROM fo_frtermsheets_m cd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_accountmaster_m am WHERE cd.programid = isr.programid AND prd.prodid = cd.producttype AND cs.issueid = cd.issueid AND cs.sortorder = 1 AND trb.bookid = isr.defaultbookid AND TRIM (cd.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND cd.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND cd.producttype = ? AND cd.refissueid <> '0000' AND cd.transtype = '10' AND cd.programid = ? AND cd.status = 'A' AND TRUNC (cd.maturitydate) > TO_DATE (?, ?)) a, fo_up_product_d UP, fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' ORDER BY TO_DATE (a.maturitydate, 'mm/dd/yyyy'))
sql.getProgramAcctDetails =  SELECT acctname, acctnbr, a.shortname, fn_decrypt (cassiiacctnbr, 1) cassiiacctnbr, fn_decrypt (subacctcassii, 1) subacctcassii, spn, defaultacct, issuername, ticker, twticker FROM fo_accountmaster_m a, fo_program_m i WHERE a.programid = i.programid AND a.programid = ? AND subacctcassii IS NULL AND a.status = 'Y' ORDER BY a.createddate DESC
sql.getIssuerDetForFr =  SELECT programid, issuerid, calendartype, PROGRAMACRONYM, ISSUERNAME , i.TICKER ,BBTICKER, TWTICKER , CASSII, (select ma.acctname from fo_masteraccounts_m ma where ma.refacctnbr = i.masteracctnumber and status='Y' and rownum=1) mastacctname, nvl(CUSIPBASEONE, '') CUSIPBASEONE , nvl(CUSIPBASETWO, '') CUSIPBASETWO, CUSIPISALGORITHMIC , SANDP , MOODYRATING,ltsandp,ltfitch,ltmoody, SHORTNAME, p.PRODNAME PRODUCT, PRODUCTTYPE, p.PRODCODE, replace(translate (initcap (upper(prodname)), ' abcdefghijklmnopqrstuvwxyz', ' '), ' ') PRODNAME, ISSUERTYPE, CPTYPE, i.TRADERID , SECTRADERID , OTHERTRADERIDS , DEFAULTBOOKID ,MAXNOFDAYS,RATING,DOMICILE ,INDUSTRY,creditwatch,nvl(i.MAXAMOUNT,0) MAXAMOUNT ,TO_CHAR(COUPONDATE,'fmmm/dd/yy') COUPONDATE ,COUPON ,SPREAD,nvl(MINSIZE,0) MINSIZE ,nvl(INCAMOUNT,0) INCAMOUNT, TO_CHAR(i.MODIFIEDDATE,'fmmm/dd/yy') MODIFIEDDATE , i.MODIFIEDBY , TO_CHAR(i.CREATEDDATE,'fmmm/dd/yy') CREATEDDATE , i.CREATEDBY ,i.ipa_number,i.dealerRelease, i.STATUS ,i.NOTES ,COUNTRYCODE ,b.bookno,b.bookcode ,b.BOOKNAME DESCR,OFFERLIMIT, PREMIUM, FEE,fitchrating,EPIMS,TO_CHAR(dateOpened,'fmmm/dd/yy') dateOpened,masteracctNumber,ALLIN,traderecap FROM fo_program_m i , fo_product_m p ,FO_TRADER_BOOKS_M b where i.defaultbookid=b.bookid and i.producttype = p.prodid and p.status='Y' and i.status ='Y' and b.status ='Y' AND i.programid=? AND producttype=? ORDER BY createddate
sql.saveFRSheetDetails = Insert into fo_frtermsheets_m (ISSUEID, programid, REFISSUEID, ISSUETYPE, TRANSTYPE, ISSUENUMBER, PRODUCTTYPE, CUSIP, AMOUNT, SETTLE, SETTLEMENTDATE, MATURITYDATE, LIBORTYPE, ROLLDATE, ROLLTYPE, SPREAD, PRICE, COUPON, BID, OFFER, SECURITYTYPE, FLIPPER, RELONBBG, SALESPREAD, SALEPRICE, TRADEVALUE, CLIENTVALUE, NOTES, TRADERID, TRADERLOGINNAME, SPLOGINID, SPLOGINNAME, MODIFIEDDATE, MODIFIEDBY, CREATEDDATE, CREATEDBY, CURRENCYCODE, SOURCE, DESKID, PRODID, ACCTNBR, ISSUEDATE, DATEDDATE, OFFERFLAG, PUBLISHED, ROOTCUSIP, STOPTRADING, AVAILABLECREDIT, INTERESTAMOUNT, DISPBIDDISCOUNT, DISPOFFERDISCOUNT, OFFERTYPE, BIDYEILD, OFFERYEILD, DISPOFFERYIELD, DISPBIDYIELD, ACCRUEDINTEREST, STATUS, filename,disclaimer) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, to_date(?,?), to_date(?,?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, to_date(?,?), ?, to_date(?,?), ?, ?, ?, ?, ?, ?, to_date(?,?), to_date(?,?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
sql.getHolidaysForIssuerId = SELECT to_char(h.hdate,'fmmm/dd/yy') hdate  FROM fo_program_m a, fo_product_m b, fo_group_m grp, fo_holiday_m h,FO_ISSUERCALENDER_D Cl WHERE a.producttype = b.PARENTID AND grp.prodid = b.prodid AND h.groupid = grp.groupid AND cl.CALENDERCODE = grp.CURRENCYCODE and cl.programid = a.programid  AND a.programid = ? AND grp.status = 'Y' AND b.status = 'Y'
sql.insertfrSchedule =INSERT INTO fo_fr_schedules_d (issueid, programid,paymentdate, determinationdate, modifieddate, modifiedby,sortorder) VALUES (?,?, TO_DATE (?, ?),	TO_DATE (?, ?), TO_DATE (?, ?), ?, ?	)
sql.insertfrCouponSchedule = INSERT INTO fo_coupon_schedules_d (issueid, programid, libortype, rolldate,libor, spread, allin, busdate,interestamt,paymentdate, determinationdate, modifieddate, modifiedby,  prevpaymentdate, sortorder) VALUES (?,?,?,?,?,?,?,TO_DATE (?, ?),	?, TO_DATE (?, ?), TO_DATE (?, ?),TO_DATE (?, ?), ?, TO_DATE (?, ?),?	)
sql.getFRIssueDetails = SELECT DISTINCT cd.issuenumber, cd.issueid, iss.programid, issuername, p.prodname issuetype, cd.filename,cd.disclaimer, cd.producttype, cd.bidyeild, iss.ticker ticker, cd.cusip, cd.amount issuesize, cd.flipper, TRIM (cd.offertype) offertype, cd.sploginid, cd.tradevalue, cd.salespread, cd.saleprice, cd.securitytype, cd.clientvalue, cd.notes, cd.relonbbg, cd.price issueprice, cd.rolldate, cd.rolltype, sc.libor, ROUND ((((cd.amount * 1000) * NVL (cd.price, 0))) / 100, 2 ) netmoney, TO_CHAR (cd.dateddate, 'fmmm/dd/yy') dateddate, TO_CHAR (cd.settlementdate, 'fmmm/dd/yy') setdate, TO_CHAR (cd.maturitydate, 'fmmm/dd/yy') matdate, TO_CHAR (cd.issuedate, 'fmmm/dd/yy') issuedate, TO_CHAR (cd.issuedate, 'Month dd, yyyy') tradedate, TO_CHAR (cd.settlementdate, 'Month dd, yyyy') settlementdate, TO_CHAR (cd.maturitydate, 'Month dd, yyyy') maturitydate, CASE WHEN cd.rolltype = '30' THEN 'Monthly' WHEN cd.rolltype = '90' THEN 'Quarterly' WHEN cd.rolltype = '1' THEN 'Daily' ELSE 'At Mature date' END || CASE WHEN cd.rolltype = '1' THEN ' from ' ELSE ' on ' END || CASE WHEN (cd.rolltype <> '1000' AND cd.rolltype <> '1') THEN CONCAT (cd.rolldate, CONCAT (CASE WHEN cd.rolldate = '1' OR cd.rolldate = '21' THEN 'st' WHEN cd.rolldate = '2' OR cd.rolldate = '22' THEN 'nd' WHEN cd.rolldate = '3' OR cd.rolldate = '23' THEN 'rd' ELSE 'th' END, ' of each month commencing ' ) ) END || TO_CHAR (sc.paymentdate, 'Month dd, yyyy') interestpaymentdates, ((cd.maturitydate - cd.settlementdate)) noofdays, CASE WHEN  cd.libortype = '180' THEN 'SOFR' WHEN cd.libortype = '270' THEN 'Prime' WHEN cd.libortype = '360' THEN 'FF Eff' WHEN cd.libortype = '400' THEN 'FF Open' WHEN cd.libortype = '440' THEN 'T-Bill' END referenceindex, cd.rolldate || CASE WHEN cd.rolldate = '1' OR cd.rolldate = '21' THEN 'st' WHEN cd.rolldate = '2' OR cd.rolldate = '22' THEN 'nd' WHEN cd.rolldate = '3' OR cd.rolldate = '23' THEN 'rd' ELSE 'th' END || ' of the Month' rolldatedesc, cd.libortype, cd.spread, cd.dispbiddiscount initialcoupon, TO_CHAR (sc.paymentdate, 'Month dd, yyyy') firstpaymentdate FROM fo_frtermsheets_m cd, fo_product_m p, fo_program_m iss, fo_coupon_schedules_d sc WHERE cd.producttype = p.parentid AND cd.programid = iss.programid AND sc.issueid = cd.issueid AND sc.sortorder = 1 AND cd.issueid = ?
sql.getCouponSchedulesDetails = SELECT libortype, rolldate, libor, spread, allin,to_char(busdate,?) busdate, interestamt,to_char(paymentdate, ?) paymentdate, to_char(determinationdate, ?) determinationdate, to_char(prevpaymentdate, ?) prevpaymentdate, sortorder FROM fo_coupon_schedules_d  WHERE issueid = ? Order by  sortorder
sql.updateFRIssueDetails = UPDATE fo_frtermsheets_m SET cusip = ?,status = ?,published = ? where issueid = ?
sql.getDeleteFRTermSheets = delete fo_frtermsheets_m where issueid = ?
sql.deletefrSchedule = DELETE from fo_fr_schedules_d where issueid = ?
sql.deletefrCouponSchedule = DELETE from fo_coupon_schedules_d where issueid = ?
sql.getPendingFRTermSheets = SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY TO_DATE (a.maturitydate, 'mm/dd/yyyy' )) rnum FROM (SELECT DISTINCT prd.prodid prodid, prd.prodcode prodcode, cd.issueid, isr.programid, issuername, prd.prodname issuetype, isr.ticker ticker, cd.flipper, cd.securitytype, cd.relonbbg, cd.saleprice, cd.salespread, cd.clientvalue, cd.notes, cd.tradevalue, cd.issuenumber, cd.cusip, cd.amount issuesize, price issueprice, TO_CHAR (cd.issuedate, 'fmmm/dd/yy' ) tradedate, TO_CHAR (cd.settlementdate, 'fmmm/dd/yy' ) settlementdate, TO_CHAR (cd.maturitydate, 'fmmm/dd/yy' ) maturitydate, TO_CHAR (cd.dateddate, 'fmmm/dd/yy' ) dateddate, (cd.maturitydate - cd.settlementdate ) noofdays, cd.spread spread, cd.accruedinterest, cd.dispbiddiscount initialcoupon, cd.coupon coupon, cd.availablecredit availablecredit, NVL (cd.availabletoday, 0) availabletoday, cd.bidyeild yield, cd.bid, cd.offer, NVL (cd.offeryeild, 0) offeryeild, NVL ( ( (amount * 1000) * ( TRUNC (SYSDATE) - cs.prevpaymentdate ) * NVL (cs.allin, 0) ) / (100 * 360) + (CASE WHEN cs.sortorder = 1 THEN ( ( (amount * 1000) * ( TRUNC (cs.prevpaymentdate ) - cd.issuedate ) * NVL (cs.allin, 0) ) / (100 * 360) ) ELSE 0 END ), ( (amount * 1000) * (TRUNC (SYSDATE) - cd.issuedate) * NVL (cd.bid, 0) ) / (100 * 360) ) todayaccruedinterest, cd.currencycode currencycode, cd.rolldate || CASE WHEN cd.rolldate = '1' OR cd.rolldate = '21' THEN 'st' WHEN cd.rolldate = '2' OR cd.rolldate = '22' THEN 'nd' WHEN cd.rolldate = '3' OR cd.rolldate = '23' THEN 'rd' ELSE 'th' END || ' of the Month' rolldatedesc, CASE WHEN cd.rolltype = '30' THEN 'Monthly' WHEN cd.rolltype = '90' THEN 'Quarterly' WHEN cd.rolltype = '1' THEN 'Daily' ELSE 'At Mature date' END rolltypedesc, CASE WHEN cd.libortype = '30' THEN '1 Month' WHEN cd.libortype = '90' THEN '3 Months' WHEN cd.libortype = '180' THEN 'Prime' WHEN cd.libortype = '270' THEN 'FF Open' WHEN cd.libortype = '360' THEN 'FFPD' WHEN cd.libortype = '400' THEN 'T-Bill' END libortypedesc, isr.countrycode countrycode, TRIM (offertype) offertype, cs.libor, cd.rolldate, cd.rolltype, cd.libortype, cd.sploginid, cd.disclaimer FROM fo_frtermsheets_m cd, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_coupon_schedules_d cs, fo_accountmaster_m am WHERE cd.programid = isr.programid AND prd.prodid = cd.producttype AND cs.issueid = cd.issueid AND cs.sortorder = 1 AND trb.bookid = isr.defaultbookid AND TRIM (cd.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND cd.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND cd.producttype = ? AND cd.refissueid <> '0000' AND cd.transtype = '10' AND cd.programid = ? AND cd.status = 'P') a, fo_up_product_d UP, fo_group_m g WHERE UP.loginid = ? AND g.companyid = ? AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' ORDER BY TO_DATE (a.maturitydate, 'mm/dd/yyyy'))
sql.getFROfferings = SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT isr.programid programid, isr.cassii, ism.cusip, isr.issuername issuername, ism.currencycode, TO_CHAR (ism.createddate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.ticker ticker, prd.prodname prodname, prd.prodid prodid, trb.bookno bookno, DECODE (ism.securitytype, 'fx', 'Fixed', 'fl', 'Float' ) securitytype, '' bidyeild, '' coupon, '' dispbiddiscount, DECODE (ism.callable, 'N', 'No', 'Y', 'Yes' ) callable, '' dispbidyield, '' dispofferdiscount, ism.libortype libortype, CASE WHEN ism.libortype = '180' THEN 'SOFR' WHEN ism.libortype = '270' THEN 'Prime' WHEN ism.libortype = '360' THEN 'FF Eff' WHEN ism.libortype = '400' THEN 'FF Open' WHEN ism.libortype = '440' THEN 'T-Bill' END libordesc, '' dispofferyield, ism.amountflag, ism.rateflag, ism.issueid, ism.refissueid, prd.prodcode, trb.bookid, ism.amount amount, ism.availablecredit availablecredit, ism.availabletoday availabletoday, '0' offeryield, '0' bidyield, '' maturityenddate, '' mat, ism.settlementdate dsettlementdate, TO_CHAR (ism.settlementdate, 'fmmm/dd' ) settlementdatestr, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settlementdate, settle, '' offeringlimit, '' minimumpiecesize, isr.cptype, '' offerflag, published, ism.createddate, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, mat3m rate3mmat, mat4m rate4mmat, mat5m rate5mmat, mat6m rate6mmat, mat7m rate7mmat, mat8m rate8mmat, mat9m rate9mmat, mat10m rate10mmat, mat11m rate11mmat, mat12m rate12mmat, matflag3m rate3mflag, matflag4m rate4mflag, matflag5m rate5mflag, matflag6m rate6mflag, matflag7m rate7mflag, matflag8m rate8mflag, matflag9m rate9mflag, matflag10m rate10mflag, matflag11m rate11mflag, matflag12m rate12mflag FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_frgrid_m ism WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND NVL (ism.availablecredit, 0) > 0 AND published = 'Y' 
sql.getFROfferingsFinal =  AND g.prodid = a.prodid AND g.groupid = UP.groupid AND g.status = 'Y' AND UP.status = 'Y') ORDER BY dsettlementdate, prodname
sql.publishOffer = UPDATE fo_frissues_m SET  offerflag = ?, ACCRUEDINTEREST=?, PRICE=?, BIDYEILD =?, DISPBIDYIELD =?, OFFER = ?, OFFERYEILD = ?, DISPOFFERYIELD = ?, AvailableToday = ? where issueid = ?
sql.updateOffer = UPDATE fo_trading_t SET    ACCRUEDINTEREST=?, PRICE=?, BIDYEILD =?, DISPBIDYIELD =?, OFFER = ?, OFFERYEILD = ?, DISPOFFERYIELD = ?, AvailableToday = ? where refissueid = ?
sql.insertFRBuy = INSERT INTO fo_frissues_m (issueid, programid, refissueid, transtype, issuenumber, amount, producttype, cusip, settle, settlementdate, maturitydate, availablecredit, availabletoday, status, bid, offer, bidyeild, minamount, maxamount, accruedinterest, spreadretain, retainedincome, trmarkup, salescramount, trmarkupamount, totalsalescr, traderid, traderloginname, modifieddate, modifiedby, createddate, createdby, currencycode, issuedate, deskid, prodid, acctnbr, dispbiddiscount, dispbidyield, dispofferdiscount, dispofferyield, price, issuetype, dateddate, coupon, rootcusip, originalsettlementdate, ticketnumber, buyscnt, salescnt, investoracctnbr, interestamount, allocationflag, prevpaymentdate, securitytype, callable, libortype, rolldate, rolltype ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, ?, TO_DATE(?,?), ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, ? )
sql.cdTotalPossion = SELECT NVL (net90day, 0) net90day, NVL (total_position, 0) totalposition, NVL (pnl, 0) pnl FROM (SELECT ROUND (SUM (sumofavailcreditrange) / 90, 2) net90day, SUM (sumofavailablecredit) total_position, SUM (pnl) pnl FROM (SELECT b.availablecredit availablecredit, SUM (b.availablecredit) OVER (PARTITION BY b.issueid)sumofavailablecredit, (SUM (b.availablecredit) OVER (PARTITION BY b.issueid)) * (b.maturitydate - b.settlementdate)sumofavailcreditrange, (SELECT NVL (SUM (iss.retainedincome),0) retainedincome FROM fo_cd_trading_t iss WHERE iss.refissueid = b.issueid AND status IN ('A') AND ISSUETYPE='I' AND iss.transtype = '85' ) pnl 
sql.cdTotalPossionOne = fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE b.programid = isr.programid AND prd.prodid = b.producttype AND b.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND b.ACCTNBR = am.ACCTNBR AND am.status = 'Y' AND isr.status = 'Y'  AND b.status IN ('A') and    SUBACCTCASSII is null
sql.cpTotalPossion = SELECT NVL (net90day, 0) net90day, NVL (total_position, 0) totalposition, NVL (pnl, 0) pnl FROM (SELECT ROUND (SUM (sumofavailcreditrange) / 90, 2) net90day, SUM (sumofavailablecredit) total_position, SUM (pnl) pnl FROM (SELECT a.availablecredit availablecredit, SUM (a.availablecredit) OVER (PARTITION BY a.issueid) sumofavailablecredit, (SUM (a.availablecredit) OVER (PARTITION BY a.issueid) ) * (a.maturitydate - a.settlementdate) sumofavailcreditrange, (SELECT DISTINCT SUM (iss.realunreal) OVER (ORDER BY modifieddate DESC) retainedincome FROM fo_cpissues_tracking_d iss WHERE iss.issueid = b.issueid AND ROWNUM = 1) pnl FROM (SELECT m.* FROM fo_issues_m m WHERE m.transtype = '10' AND m.status IN ('A') AND m.tradingflag = 'Y') a, fo_issues_m b, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE a.issueid = b.issueid AND a.programid = isr.programid AND prd.prodid = a.producttype AND a.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND a.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND a.status IN ('A') AND b.status IN ('A') AND subacctcassii IS NULL
sql.getFRGridFirst =  SELECT a.*, COUNT (*) OVER () AS cnt, ROWNUM rnum FROM (SELECT isr.issuerid missuerid, isr.issuername, isr.maxamount isrmaxamount, NVL (isr.incamount, 1000) incamount, isr.minsize minsize, isr.cusipbaseone, isr.ticker, cdis.amount amt, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') setdate, cdis.*, CASE WHEN cdis.callable = 'Y' THEN 'Yes' ELSE 'No' END callabledesc, CASE WHEN cdis.securitytype = 'fx' THEN 'Fixed' ELSE 'Float' END securitydesc, CASE WHEN cdis.libortype = '180' THEN 'SOFR' WHEN cdis.libortype = '270' THEN 'Prime' WHEN cdis.libortype = '360' THEN 'FF Eff' WHEN cdis.libortype = '400' THEN 'FF Open' WHEN cdis.libortype = '440' THEN 'T-Bill' END libordesc FROM fo_program_m isr, fo_frgrid_m cdis WHERE cdis.programid = isr.programid AND isr.status = 'Y' AND cdis.status = 'A' AND cdis.refissueid = '0000' AND cdis.producttype = ?
sql.getFRGridLast = order by isr.issuername ASC  ) a
sql.saveFRGridData= INSERT INTO fo_frgrid_m (issueid, programid, refissueid, issuenumber, amount, producttype, currencycode, deskid, prodid, cusip, securitytype, callable, libortype, settle, settlementdate, availablecredit, availabletoday, traderid, traderloginname, modifieddate, modifiedby, createddate, createdby, rate3m, rate4m, rate5m, rate6m, rate7m, rate8m, rate9m, rate10m, rate11m, rate12m, mat3m, mat4m, mat5m, mat6m, mat7m, mat8m, mat9m, mat10m, mat11m, mat12m, acctnbr, originalsettlementdate, ticketnumber, published, status ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ?, ?, TO_DATE (?, ?), ?, TO_DATE (?, ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, TO_DATE (?, ?), ?, ?, ? )
sql.updateFRGridData = UPDATE fo_frgrid_m SET availablecredit = ?, amountflag = SIGN (? - availablecredit), amount = ?, availabletoday = ?, modifiedby = ?, modifieddate = TO_DATE (?, ?), settlementdate = TO_DATE (?, ?), rate3m = ?, rate4m = ?, rate5m = ?, rate6m = ?, rate7m = ?, rate8m = ?, rate9m = ?, rate10m = ?, rate11m = ?, rate12m = ?, settle = ? WHERE issueid = ? AND producttype = ? AND status = 'A'
sql.deleteFRGridData = UPDATE fo_frgrid_m set status ='D' , published ='N' , MODIFIEDDATE = to_date(?,?),  MODIFIEDBY =	?  WHERE issueid = ?
sql.publishFRGrids = UPDATE fo_frgrid_m SET PUBLISHED = ?, MODIFIEDDATE = to_date(?,?), MODIFIEDBY = ? WHERE producttype = ? and issueid = ?
sql.updateFRSellOne= cusip = ?, refissueid = ?, issuetype = ?, traderid = ?, traderloginname = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?
sql.updateFRSellTwo= amount = ?, cusip = ?, settle = ?, originalsettlementdate = TO_DATE (?, ?), settlementdate = TO_DATE (?, ?), dateddate = TO_DATE (?, ?), maturitydate = TO_DATE (?, ?), availablecredit = ?, availabletoday = ?, status = ?, offeryeild = ?, bidyeild = ?, maxamount = ?, accruedinterest = ?, retainedincome = ?, traderid = ?, traderloginname = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?, dispbiddiscount = ?, dispbidyield = ?, price = ?, interestamount = ?, coupon = ?
sql.deleteFROffer= DELETE fo_frissues_m WHERE  cusip = ? AND  status = 'A'  
sql.updateFRSellCusip = UPDATE fo_trading_t SET cusip = ?, refissueid = ?, issuetype = ?, traderid = ?, traderloginname = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE refissueid = ?
#################
 #######
sql.getPendingCusipTradesReport =  SELECT * FROM (SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.maturitydate >= TRUNC (SYSDATE) AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.maturitydateflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, '' SOURCE FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND refissueid <> '00000000' AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y') a ORDER BY a.issuedate DESC
sql.getTraderRolelinks = SELECT level levelid, t.linkid linkid, a.descr descr, a.parentid parentid, a.sortorder sortorder, a.image, a.TYPE FROM (select * from fo_wf_links_m where status = 'Y' order by sortorder) a, (select b.linkid from (SELECT   ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_linkgroup_d ud, fo_wf_linkgroup_m um WHERE um.linkgroupid = ud.linkgroupid AND um.membercatid = 2 AND ud.status = 'Y' GROUP BY ud.linkid, ud.status) b WHERE  b.status = 'Y' AND b.linkid IN ( SELECT linkid FROM fo_wf_prodlinks_d a, (SELECT DISTINCT d.parentid FROM fo_up_product_d a, fo_group_m c, fo_product_m d WHERE a.loginid = ? AND a.status = 'Y' AND c.groupid = a.groupid AND c.status = 'Y' AND d.prodid = c.prodid AND d.status = 'Y') b WHERE a.prodid = b.parentid AND a.membercatid = 2))t where a.linkid = t.linkid START WITH a.parentid = '0000' CONNECT BY a.parentid = PRIOR a.linkid order siblings by  sortorder,a.linkid
sql.getSupportRolelinks = SELECT level levelid, t.linkid linkid, a.descr descr, a.parentid parentid, a.sortorder sortorder, a.image, a.TYPE FROM (select * from fo_wf_links_m where status = 'Y' order by sortorder) a, (select b.linkid from (SELECT   ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_linkgroup_d ud, fo_wf_linkgroup_m um WHERE um.linkgroupid = ud.linkgroupid AND um.membercatid = 5 AND ud.status = 'Y' GROUP BY ud.linkid, ud.status) b WHERE  b.status = 'Y' )t where a.linkid = t.linkid START WITH a.parentid = '0000' CONNECT BY a.parentid = PRIOR a.linkid order siblings by  sortorder,a.linkid
sql.getAdminRolelinks = SELECT level levelid, t.linkid linkid, a.descr descr, a.parentid parentid, a.sortorder sortorder, a.image, a.TYPE FROM (select * from fo_wf_links_m where status = 'Y' order by sortorder) a, (select b.linkid from (SELECT   ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_linkgroup_d ud, fo_wf_linkgroup_m um WHERE um.linkgroupid = ud.linkgroupid AND um.membercatid = 1 AND ud.status = 'Y' GROUP BY ud.linkid, ud.status) b WHERE  b.status = 'Y')t where a.linkid = t.linkid and a.linkid <> '10000078' START WITH a.parentid = '0000' CONNECT BY a.parentid = PRIOR a.linkid order siblings by  sortorder,a.linkid
sql.getSalesPersonlinks = SELECT level levelid, t.linkid linkid, a.descr descr, a.parentid parentid, a.sortorder sortorder, a.image, a.TYPE FROM (select * from fo_wf_links_m where status = 'Y' order by sortorder) a, (select b.linkid from (SELECT   ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_linkgroup_d ud, fo_wf_linkgroup_m um WHERE um.linkgroupid = ud.linkgroupid AND um.membercatid = 3 AND ud.status = 'Y' GROUP BY ud.linkid, ud.status) b WHERE  b.status = 'Y' )t where a.linkid = t.linkid START WITH a.parentid = '0000' CONNECT BY a.parentid = PRIOR a.linkid order siblings by  sortorder,a.linkid
sql.getPendingCusipTrades = SELECT * FROM (SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, ism.SOURCE FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.maturitydate >= TRUNC (SYSDATE) AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.maturitydateflag = 'N' UNION SELECT ism.createddate, isr.ticker ticker, ism.issuedate, isr.issuername issuername, ism.ticketnumber, ism.amount, ism.cusip, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, bookname, prd.prodcode, '' SOURCE FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE prd.prodid = ism.producttype AND ism.programid = isr.programid AND st.statusid = TRIM (ism.status) AND trb.bookid = isr.defaultbookid AND ism.acctnbr = am.acctnbr AND ism.status NOT IN ('AT', 'AC') AND ism.maturitydate >= TRUNC (SYSDATE) AND subacctcassii IS NULL AND refissueid <> '00000000' AND st.status = 'Y' AND am.status = 'Y' AND am.status = 'Y') a ORDER BY a.issuedate DESC
#######################################################################################################################################
------------------------------------------------------- ADN Product -------------------------------------------------------------------------
########################################################################################################################################
sql.getADNPrimaryOffers = SELECT * FROM (SELECT am.companyid,salescnt, ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, ism.settlementdate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') matdate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.maturityenddate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') matenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy') ) FROM DUAL) maturityenddatestr, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, gridissueid, 0 retainedincome, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT m.* FROM fo_adn_issues_m m WHERE m.transtype = ? AND m.status IN ('A', 'S') START WITH m.refissueid = '0000' CONNECT BY PRIOR m.issueid = m.refissueid ORDER SIBLINGS BY m.maturitydate, m.refissueid) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND maturitydate > TRUNC (SYSDATE) AND ism.status IN ('S', 'A')
sql.getADNPrimaryOffersOne =  ) START WITH refissueid = '0000' CONNECT BY PRIOR issueid = refissueid ORDER SIBLINGS BY programid, refissueid, issueid
sql.getADNInventories = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, NVL(ism.availabletoday,0)availabletoday, ism.minamount, ism.maxamount, ism.bid, NVL(ism.offer,0)offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND ism.refissueid = '0000' AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND (ism.availablecredit != 0 OR ism.availabletoday != 0 ) AND ism.maturitydate > TRUNC (SYSDATE)
sql.getADNBuyDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL AND (ism.availablecredit != 0 OR ism.availabletoday != 0 ) AND ism.status IN ('A','S')
sql.getADNInventoriesOne  =   ORDER BY ism.maturitydate ASC ) a	
sql.getADNPublishedGridsDetInit=SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROWNUM rnum FROM (SELECT isr.programid missuerid, isr.issuername,isr.shortname, isr.cusipbaseone, isr.TICKER, TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy') setdate,  fn_get_dispdate (TO_CHAR (cdis.settlementdate, 'fmmm/dd/yy')) dispsettlementdate, fn_get_dispdate (TO_CHAR (cdis.dateddate, 'fmmm/dd/yy')) dispdateddate,  cdis.*, CASE WHEN ( RTRIM (REGEXP_SUBSTR (cdis.rate1m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate2m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate3m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate4m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate5m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate6m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate7m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate8m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate9m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate10m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate11m, '[^:]+', 1, 1), '.0') > 0 OR RTRIM (REGEXP_SUBSTR (cdis.rate12m, '[^:]+', 1, 1), '.0') > 0 ) THEN 'TRUE' ELSE 'FALSE' END rate_flag
sql.getADNPublishedGridsDetInitFinal = ORDER BY cdis.settlementdate ASC) a)
sql.getADNPublishedGridsDetFinal=WHERE cdis.programid = isr.programid AND isr.status = ? AND cdis.refissueid = '0000' AND cdis.transtype = '10' AND cdis.offerflag = 'Y'
sql.getADNPublishedOffers = AND (ism.availablecredit != 0 OR ism.availabletoday != 0) AND offerflag = 'Y' AND ism.tradingflag = 'Y' AND availabletoday IS NOT NULL
sql.getADNHomeTradesFields=SELECT * FROM (SELECT a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum FROM (SELECT ism.prodid, prd.prodname prodname, prd.prodcode,ism.availableCredit,ism.availabletoday,ism.producttype, isr.ticker ticker, ism.programid, ism.issuenumber, isr.shortname isrshrtname, ism.issueid, isr.issuername, trb.bookid, bookname, ism.refissueid, ism.createddate, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, ism.amount, am.shortname, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.cusip, ism.settlementdate settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) matdatestr, ism.bid, ism.transtype, ism.issuetype, ism.dispbiddiscount, ism.dispbidyield, ism.status, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.currencycode, st.descr, st.dispdescr, ism.price, TO_NUMBER (prd.sortorder) sortorder, ism.dispbiddiscount coupon, ism.dispbidyield yield
sql.getADNHomeTradesFieldsOne = and  (trunc(ism.createddate) BETWEEN TO_DATE(?,?) AND TO_DATE(?,?)) 
sql.getADNHomeTradesFieldsTwo  =    and  trunc(ism.createddate) = trunc(SYSDATE)
sql.getADNHomeTradesFieldsFinal  =   ) a  ORDER BY a.createddate DESC) WHERE rnum BETWEEN 0 AND 5
sql.getADNHomeTradeTableJoins=fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.status NOT IN ('AT', 'AC')) AND am.programid IS NULL AND subacctcassii IS NULL
sql.getADNPrograms=SELECT i.programid programid, i.issuername, tb.bookname, tb.bookid, i.spread, i.fee,i.allin, i.premium, i.ticker ticker, traderecap  FROM fo_program_m i, fo_trader_books_m tb   WHERE i.defaultbookid = tb.bookid
sql.getADNProgramsFinal =    and ( i.spread IS  NULL or i.fee IS NULL) 
sql.getADNOfferings= SELECT * FROM (SELECT salescnt,BUYSCNT,ism.deskid,TO_CHAR(ism.asofdate,'fmmm/dd/yy') asofdatestr,ism.ASSETBACKED,isr.COUNTRYCODE,st.DESCR,st.DISPDESCR ,TO_CHAR (MAX(ism.maturityenddate) over(partition BY ism.programid), 'fmmm/dd/yy') maxmaturityenddate ,ism.MINIMUMPIECE,ism.MSGTYPE,ism.QUANTITYFLAG ,ism.REQTIMESTAMP, published,ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, ism.settle settle, ism.settlementdate, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, ism.maturitydate, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') matdate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.maturityenddate, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') matenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy') ) FROM DUAL) maturityenddatestr, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.traderId)traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, gridissueid, 0 retainedincome, isr.spread,isr.allin, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT m.* FROM fo_adn_issues_m m WHERE m.transtype = ? 
sql.getADNOfferingsOne= START WITH m.refissueid = '0000' CONNECT BY PRIOR m.issueid = m.refissueid ORDER SIBLINGS BY m.maturitydate, m.refissueid) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL AND maturitydate > TRUNC (SYSDATE)  AND ism.status IN ('S')
sql.getADNOfferingsFinal = ) START WITH refissueid = '0000'  CONNECT BY PRIOR issueid = refissueid  ORDER SIBLINGS BY refissueid,issueid desc ,maturitydate asc
sql.deleteADNIssue=UPDATE fo_adn_issues_m set status ='D' ,MODIFIEDDATE  = to_date(?,?), MODIFIEDBY  =?  WHERE  ISSUEID = ?  and transType='10'
sql.getADNRelatedIssues=SELECT issueid,refissueid       FROM fo_adn_issues_m     WHERE maturitydate = (SELECT MIN (b.maturitydate)  FROM fo_adn_issues_m a,           fo_adn_issues_m b         WHERE a.issueid = ?           AND a.refissueid = '0000'          AND b.refissueid = a.issueid          AND b.status = 'S')      AND status = 'S'      AND refissueid = ?
sql.updateADNRelatedIssues=UPDATE fo_adn_issues_m           SET refissueid = '0000',       MODIFIEDDATE     = to_date(?,?),      MODIFIEDBY      = ?         WHERE issueid = ?  and transType='10'         AND status in ('A','S') 
sql.updateADNRefIssues=UPDATE fo_adn_issues_m  SET refissueid = ?	,MODIFIEDDATE  = to_date(?,?), MODIFIEDBY  =? WHERE refissueid = ?	and transType='10'	
sql.updateADNTradesRelatedToIssue=Merge INTO FO_CLIENT_TRADING_T a USING (SELECT transid FROM fo_client_trading_t WHERE INSTRUMENTCODE IN   (SELECT cusip   FROM fo_adn_issues_m   WHERE ISSUEID IN     ( SELECT DISTINCT m.issueid     FROM       (SELECT issueid,         refissueid,         transtype       FROM fo_adn_issues_m       WHERE transtype            = '10'       AND status                IN ('A', 'S')         START WITH issueid       = ?         CONNECT BY PRIOR issueid = refissueid       )t,       fo_adn_issues_m m     WHERE m.transtype            = '10'     AND m.status                IN ('A', 'S')     AND m.transtype              = t.transtype       START WITH m.issueid       = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)       CONNECT BY PRIOR m.issueid = m.refissueid     )   ) )b ON( a.transid=b.transid) WHEN matched THEN   UPDATE   SET status     =? ,     POPUP        =? ,     MODIFIEDDATE = SYSDATE,     MODIFIEDBY   = ?
sql.updateADNIssue=UPDATE fo_adn_issues_m SET  REFISSUEID = ?,   OFFERFLAG = ? ,  AFR = ? ,   SETTLE = ?,  EXDATES = ?,  PROCEEDSFLAG = ?,  SUBJECTFLAG = ?,  ORGSETTLETDATE = to_date(?,?),  SETTLEMENTDATE = to_date(?,?),  MATURITYDATE = to_date(?,?), MATURITYENDDATE = to_date(?,?), AMOUNT = ?,  MAXAMOUNT = ?,   AVAILABLECREDIT = ?,  AVAILABLETODAY = ?,   OFFER = ?,  OFFERYIELD = ?,   DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,  DISPOFFERDISCOUNT = ?,  DISPOFFERYIELD = ?,   AVGBID = ? ,    BID = ?  , BIDYIELD = ?, MATCODE=?   ,ACCRUEDINTEREST = ? , TRADERACRUEDINT=?, NOTES=? ,  amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - bid), MODIFIEDDATE =to_date(?,?),  MODIFIEDBY =?  ,OFFERINGLIMIT =? ,MINIMUMPIECESIZE =? ,QUANTITYFLAG=? ,ACCTNBR=? ,BUYSCNT=?,SALESCNT =?, CUSIP = UPPER(?) ,  PREVPAYMENTDATE =to_date(?,?),  DISPSETTLEMENTDATE = fn_get_DISPDATE(?), DISPMATURITYDATE = fn_get_DISPDATE(?), DISPMATURITYENDDATE = fn_get_DISPDATE(?), DISPEXDATES = fn_get_exdates(?), SPLOGINID = ? WHERE ISSUEID = ? AND PRODUCTTYPE = ? AND programid = ?  
sql.insertADNIssue= INSERT INTO fo_adn_issues_m   (ISSUEID ,programid,REFISSUEID, EXDATES, PROCEEDSFLAG ,SUBJECTFLAG,   ISSUENUMBER ,   AFR ,   AMOUNT ,ACCTNBR,   AVAILABLECREDIT,   AVAILABLETODAY,   MINAMOUNT ,   MAXAMOUNT ,   PRODUCTTYPE ,  CUSIP,   SETTLE,ORGSETTLETDATE, SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,   AVGBID, BID ,OFFER , NOTES, PUBLISHED, TRANSTYPE,   TRADERID ,    TRADERLOGINNAME ,    ACCRUEDINTEREST ,    SALESCRAMOUNT ,    SALESCR ,    TRMARKUP ,    TRMARKUPAMOUNT ,   TOTALSALESCR , RETAINEDINCOME , SPREADRETAIN , ASOFDATE, ISSUEDATE,  MODIFIEDDATE ,   MODIFIEDBY ,   CREATEDDATE ,   CREATEDBY ,    STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD ,DISPOFFERDISCOUNT ,DISPOFFERYIELD ,BIDYIELD,OFFERYIELD ,MSGTYPE,MATCODE    , ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON  ,TRADERACRUEDINT ,    CURRENCYCODE,TICKETNUMBER,ISIN,BUYSCNT,SALESCNT,INVESTORACCTNBR, TRADINGFlAG,GRIDISSUEID,PREVPAYMENTDATE, PRICE,  DISPSETTLEMENTDATE, DISPMATURITYDATE, DISPMATURITYENDDATE, DISPEXDATES,SPLOGINID  )    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',?  , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?, fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_DISPDATE(?), fn_get_exdates(?),? ) 
sql.updateADNIssueTradeDetails= UPDATE fo_adn_trading_t SET     BOOKID = (select defaultbookid from fo_program_m where programid = ? and rownum=1), OFFERFLAG = ?,  AFR = ?,    SETTLE   = ?,   EXDATES   = ?,   SETTLEMENTDATE   = to_date(?,?),   MATURITYDATE  = to_date(?,?), MATURITYENDDATE  = to_date(?,?),     ,AMOUNT = ?,     MAXAMOUNT = ?, AVAILABLECREDIT = ?,     AVAILABLETODAY = ?, OFFER   = ?,  OFFERYIELD   = ?,  DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,     DISPOFFERDISCOUNT   = ?,  DISPOFFERYIELD   = ?,  ,BID   = ?     , BIDYIELD   = ?, MATCODE=?  ,ACCRUEDINTEREST   = ? ,  tRADERACRUEDINT= ?  ,NOTES=? ,    amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - offer),     MODIFIEDDATE   =to_date(?,?),     MODIFIEDBY   =?  ,OFFERINGLIMIT =? ,MINIMUMPIECESIZE  =? ,QUANTITYFLAG=? ,ACCTNBR=?, PRICE=?,SPLOGINID=?,voicetrade=?,voiceInvestor=?  WHERE ISSUEID = ?  AND PRODUCTTYPE = ? AND programid = ?  
sql.insertADNIssuerTradeDetails=   INSERT INTO fo_adn_trading_t   (ISSUEID ,programid,REFISSUEID,  EXDATES,  ISSUENUMBER ,    AFR ,     AMOUNT  ,ACCTNBR,   AVAILABLECREDIT,   AVAILABLETODAY,   MINAMOUNT  ,   MAXAMOUNT  ,   PRODUCTTYPE , CUSIP,     SETTLE, ORGSETTLETDATE,SETTLEMENTDATE , MATURITYDATE ,MATURITYENDDATE ,    BID ,OFFER , NOTES, PUBLISHED,  TRANSTYPE,     TRADERID  ,   TRADERLOGINNAME  ,   ACCRUEDINTEREST  ,   SALESCRAMOUNT  ,   SALESCR  ,   TRMARKUP  ,   TRMARKUPAMOUNT  ,      TOTALSALESCR  ,    RETAINEDINCOME , SPREADRETAIN ,   ASOFDATE, ISSUEDATE,     MODIFIEDDATE   ,    MODIFIEDBY   ,      CREATEDDATE   ,     CREATEDBY   ,  STATUS ,DESKID,PRODID,ISSUETYPE,DISPBIDDISCOUNT ,DISPBIDYIELD  ,DISPOFFERDISCOUNT ,DISPOFFERYIELD  ,BIDYIELD,OFFERYIELD,MSGTYPE,MATCODE, ASSETBACKED,REQTIMESTAMP,OFFERFLAG,SUBJECTTOCALL,OFFERINGLIMIT,MINIMUMPIECESIZE,QUANTITYFLAG,SOURCE,REJECTREASON    ,TRADERACRUEDINT   ,  CURRENCYCODE ,TICKETNUMBER,ISIN,      TEMPCUSIP, PRICE,SPLOGINID,BOOKID,voicetrade,voiceInvestor  )   VALUES  (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),to_date(?,?),to_date(?,?),to_date(?,?),?,?,?,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,to_date(?,?),?,to_date(?,?),?,? ,?,?,?,?,?,?,?,?,?,'P',? , 'N',sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,(select defaultbookid from fo_program_m where programid = ? and rownum=1),?,?)  
sql.updateADNTemplateMaster=UPDATE fo_template_m  SET   templatename = ? WHERE	templateid=?	and status=?	
sql.insertADNTemplateMaster=INSERT INTO fo_template_m(templateid,templatename,companyid, programid,status) VALUES (?, ?, ?,?,?)
sql.updateADNTemplateDetails= UPDATE fo_template_d  set AMOUNT = ?,MATURITYDATE = to_date(?,?),MATURITYENDDATE = to_date(?,?)	,OFFER = ?,BID = ?,NOTES = ?,	QUANTITYFLAG = ?,TRADERLOGINNAME = ?,MODIFIEDDATE = to_date(?,?),MODIFIEDBY = ?,CREATEDDATE = to_date(?,?),CREATEDBY = ?,EXDATES = ?,PROCEEDS = ?,SUBJECT  = ?,deskid  = ?  WHERE	templateid=? AND	rownumber=?	
sql.insertADNTemplateDetails=  INSERT INTO fo_template_d( TEMPLATEID, ROWNUMBER,  AMOUNT, MATURITYDATE, MATURITYENDDATE, OFFER, BID, NOTES, QUANTITYFLAG, TRADERLOGINNAME, MODIFIEDDATE, MODIFIEDBY, CREATEDDATE, CREATEDBY, EXDATES, PROCEEDS, SUBJECT,deskid) VALUES ( ?, ?, ?, to_date(?,?), to_date(?,?), ?, ?, ?, ?, ?, to_date(?,?), ?, to_date(?,?), ?, ?, ?, ?,? ) 
sql.getADNTemplateDetails=SELECT AMOUNT,QUANTITYFLAG,ROWNUMBER,	PROCEEDS,SUBJECT,TO_CHAR (MATURITYDATE,'fmmm/dd/yy') maturitydate,TO_CHAR (MATURITYENDDATE,'fmmm/dd/yy') MATURITYENDDATE,OFFER,BID,NOTES,b.templateid,b.templatename FROM   FO_TEMPLATE_D a, fo_template_m b   WHERE  a.TEMPLATEID=? and a.templateid=b.templateid	 
sql.publishADNIssue=update fo_adn_issues_m set published=?,offer=?,offeringlimit=?,availabletoday=?,offerflag='Y' where issueid=?
sql.cancelADNBuyTrade=UPDATE fo_adn_issues_m SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND transType = ?
sql.cancelADNSellTrade=UPDATE fo_adn_trading_t SET status = ?, rejectreason = ?, modifieddate = TO_DATE (?, ?), modifiedby = ? WHERE issueid = ? AND transType = ?
sql.updateADNIssueWhenCancel = UPDATE fo_adn_issues_m SET amount = ?, availablecredit = ?, amountflag = SIGN (? - availablecredit), rateflag = '0', availabletoday = ?, offeringlimit = ?, sploginid = ?, buyscnt = ?, salescnt = ?, offerflag = ?, modifieddate = TO_DATE (?, ?), modifiedby = ?
sql.updateADNIssueWhenCancelWhere = issueid IN ( SELECT DISTINCT m.issueid FROM (SELECT issueid, refissueid, transtype FROM fo_adn_issues_m WHERE transtype = '10' AND status IN ('A', 'S') START WITH issueid = ? CONNECT BY PRIOR issueid = refissueid) t, fo_adn_issues_m m WHERE m.transtype = '10' AND m.status IN ('A', 'S') AND m.transtype = t.transtype START WITH m.issueid = DECODE (t.refissueid, '0000', t.issueid, t.refissueid ) CONNECT BY PRIOR m.issueid = m.refissueid)
sql.getADNTemplates=SELECT DISTINCT templateid, companyid,a.programid, templatename FROM fo_template_m a, fo_program_m b WHERE a.status = ?	AND a.programid = b.programid AND a.programid = ?
sql.deleteTemplateMaster=DELETE fo_template_m  WHERE  templateid = ? 
sql.deleteTemplateDetails=DELETE fo_template_d  WHERE  templateid = ? 
sql.getADNSalesIssuesProceedsAmount=SELECT   SUM (amount - (accruedinterest/1000)) amount      FROM vw_adntradehistory_t     WHERE refissueid IN (   SELECT DISTINCT m.issueid    FROM (SELECT     issueid, refissueid, transtype      FROM fo_adn_issues_m     WHERE transtype = '10'    AND status ='S'        AND  issueType= 'S'START WITH issueid = ?CONNECT BY PRIOR issueid = refissueid) t,         fo_adn_issues_m m   WHERE m.transtype = '10'    AND m.status ='S'     AND m.issueType= 'S'     AND m.transtype = t.transtype        START WITH m.issueid =  DECODE (t.refissueid,'0000', t.issueid,t.refissueid         )         CONNECT BY PRIOR m.issueid = m.refissueid)      AND transtype = '85' GROUP BY refissueid 
sql.getADNSellDetails = SELECT distinct a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT pm.*,ROWNUM rowno FROM fo_adn_trading_t pm   WHERE pm.status ='A' AND pm.transtype = '85'  ) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL  AND ism.status IN ('A','S')
sql.getADNIssuesProceedsAmount = SELECT   SUM (amount*1000 - accruedinterest)/1000 amount FROM fo_adn_issues_m   WHERE issueId IN (
sql.updateADNIssueAvailableOne=UPDATE fo_adn_issues_m SET       amount=?,availablecredit = ?,       amountflag = SIGN(? - AVAILABLECREDIT),  rateflag = '0',  availabletoday = ?, OFFERINGLIMIT =? ,SPLOGINID=?,      MODIFIEDDATE    = to_date(?,?),  MODIFIEDBY     = ?    WHERE   ISSUEID   in (  select  distinct m.issueid  from (  SELECT     issueid, refissueid, transtype      FROM fo_adn_issues_m     WHERE transtype = '10'     AND status IN ('A', 'S') START WITH issueid = ? CONNECT BY PRIOR issueid = refissueid)t,fo_adn_issues_m m WHERE m.transtype = '10'       AND m.status IN ('A', 'S') and m.transtype = t.transtype START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid) CONNECT BY PRIOR m.issueid = m.refissueid   )
sql.updateADNIssueAvailableTwo=UPDATE fo_adn_issues_m SET buyscnt = ?, salescnt =?  WHERE	 ISSUEID  = ? 
sql.updateADNIssueAvailableThree= UPDATE fo_adn_issues_m SET    OFFERFLAG = 'N',    MODIFIEDDATE    = to_date(?,?),     MODIFIEDBY     = ? WHERE ISSUEID   in (      select  distinct m.issueid  from (     SELECT     issueid, refissueid, transtype   FROM fo_adn_issues_m  WHERE transtype = '10' AND status IN ('A', 'S')    START WITH issueid = ?    CONNECT BY PRIOR issueid = refissueid)t,fo_adn_issues_m m    WHERE m.transtype = '10' AND m.status IN ('A', 'S')    and m.transtype = t.transtype    START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)    CONNECT BY PRIOR m.issueid = m.refissueid      )  
sql.updateADNConvertSalesRefIssuedsWithNewTicket= UPDATE  	fo_adn_trading_t set refIssueid = ?  	,cusip =?	,issuetype ='F'  ,status='A' WHERE    ISSUEID = ?       and transType='85'  
sql.saveADNCommitmentConvertAssoDetails=INSERT INTO FO_COMMITMENT_CONVERT_ASSOC_D  (ISSUEID,CONVERTREFID,CREATEDDATE,CREATEDBY,STATUS)  VALUES  (?,?,to_date(?,?),?,?  ) 
sql.disRegardADNOne=  UPDATE   fo_adn_issues_m   set status ='D' ,  CONVERTFLAG=?, ASOFDATE= ?,REJECTREASON =?,     MODIFIEDDATE     = to_date(?,?),      MODIFIEDBY      = ?         WHERE ISSUEID   in (       select  distinct m.issueid  from (      SELECT     issueid, refissueid, transtype          FROM fo_adn_issues_m         WHERE transtype = '10' AND status IN ('A', 'S')     START WITH issueid = ?     CONNECT BY PRIOR issueid = refissueid)t,fo_adn_issues_m m     WHERE m.transtype = '10' AND m.status IN ('A', 'S')     and m.transtype = t.transtype     START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)     CONNECT BY PRIOR m.issueid = m.refissueid       )  
sql.disRegardADNTwo=    select transid from fo_client_trading_t where INSTRUMENTCODE in  (     select cusip from fo_adn_issues_m  WHERE    ISSUEID   in (       select  distinct m.issueid  from (         SELECT     issueid, refissueid, transtype          FROM fo_adn_issues_m         WHERE transtype = '10' AND status IN ('A', 'S')     START WITH issueid = ?     CONNECT BY PRIOR issueid = refissueid)t,fo_adn_issues_m m     WHERE m.transtype = '10' AND m.status IN ('A', 'S')     and m.transtype = t.transtype     START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)     CONNECT BY PRIOR m.issueid = m.refissueid       )) 
sql.updateADNTradeStatus=UPDATE  	FO_CLIENT_TRADING_T	set status =? ,	 POPUP =? ,	REJECTREASON =?,  REJECTEDTIME  = to_date(?,?),REJECTEDBY  =	?,   MODIFIEDDATE  = to_date(?,?), 	 MODIFIEDBY   =	?  WHERE  TRANSID = ?  		
sql.getADNTodaysMaturities= select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM   fo_adn_issues_m ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '10'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.issuetype NOT IN ('S'))     AND ism.refissueid = '0000'     AND ism.availablecredit > 0     AND (TRUNC (ism.createddate) BETWEEN TO_DATE    (?,?) AND TO_DATE(?,?)) union select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM  fo_adn_trading_t ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '85'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.status NOT IN ('AT', 'AC'))     AND subacctcassii IS NULL     
sql.getADNBooKViewInventoryDetails=  SELECT *  FROM (SELECT   a.*, COUNT (*) OVER () AS cnt     FROM (      SELECT ism.prodid, ism.programid,   ism.ISSUENUMBER , isr.shortname isrshrtname,   (select STSANDP from fo_ratings_d where RATINGID= isr.sandp) sandp,      (select STFITCH from fo_ratings_d where RATINGID= isr.fitchrating) fitchrating,        (select STMOODY from fo_ratings_d where RATINGID= isr.moodyrating) moodyrating,        (select LTSANDP from fo_ratings_d where RATINGID= isr.ltsandp) ltsandp,       (select LTFITCH from fo_ratings_d where RATINGID= isr.ltfitch) ltfitch,       (select LTMOODY from fo_ratings_d where RATINGID= isr.ltmoody) ltmoody,      ism.ISSUEID ,   ism.REFISSUEID, TO_CHAR (ism.ISSUEDATE, 'fmmm/dd/yy') ISSUEDATE, 'NEWSEARCH' cpaction  ,  isr.ISSUERNAME,isr.TICKER ticker,ism.ticketnumber, am.shortname ,    ism.AMOUNT  , fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr, am.acctNbr,am.acctname, TO_CHAR(ism.SETTLEMENTDATE,?) SETTLEDATE, ism.settlementdate,   ism.settle  settle,        (SELECT fn_get_dispdate   (TO_CHAR (ism.settlementdate,  'mm/dd/yyyy'))   FROM DUAL) settlementdatestr,      TO_CHAR(ism.MATURITYDATE,?) MATURITYDATE ,     ism.maturitydate maturitydatens ,        TO_CHAR(ism.MATURITYENDDATE,?) MATURITYENDDATE ,     TO_CHAR (max(ism.maturityenddate) over(partition by ism.programid), 'fmmm/dd/yy') maxmaturityenddate ,     TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate,    decode(trunc(ism.createddate,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.createddate,'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy'))trd,         decode(trunc(ism.MATURITYDATE,'YYYY'),trunc(sysdate,'YYYY'),to_char(ism.MATURITYDATE,'fmmm/dd'), TO_CHAR (ism.MATURITYDATE, 'fmmm/dd/yy'))mat,        DECODE(ism.maturitydate,ism.maturityenddate, (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))FROM DUAL),       DECODE(TO_CHAR (ism.maturitydate, 'fmmm'),TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate(TO_CHAR(ism.maturitydate,'mm/dd/yyyy'))      FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL),        (SELECT fn_get_dispdate(TO_CHAR (ism.maturitydate,'mm/dd/yyyy'))FROM DUAL)|| '-'|| (SELECT fn_get_dispdate(TO_CHAR (ism.maturityenddate,'mm/dd/yyyy'))FROM DUAL))) formatmatdate,      ism.AVAILABLECREDIT,  ism.AVAILABLETODAY,  ism.MINAMOUNT  , ism.MAXAMOUNT,     ism.BID, ism.OFFER ,   ism.ACCRUEDINTEREST,NVL((amount*1000 - accruedinterest),0) moneyamt, to_char(ism.asofdate,'fmmm/dd/yy') asofdatestr,       ism.NOTES , ism.TRANSTYPE ,ism.OFFERFLAG ,     ism.ROOTCUSIP,ism.ISSUETYPE,ism.RATEFLAG,ism.AMOUNTFLAG,      isr.COUNTRYCODE,     ism.DISPBIDDISCOUNT ,ism.DISPBIDYIELD  ,ism.DISPOFFERDISCOUNT ,ism.DISPOFFERYIELD,      bookno,bookname  ,ism.status  ,prd.prodcode,      ism.source,ism.REJECTREASON  ,ism.TRADERID  ,ism.TRADERLOGINNAME,ism.SPLOGINID, (select fn_decrypt(loginname,1) from fo_member_m where loginid=ism.sploginid) sploginname,ism.OFFERINGLIMIT,ism.MINIMUMPIECESIZE,    ism.currencycode,isr.cptype,prd.prodname prodname,trb.bookid      ,isr.MAXAMOUNT ISRMAXAMOUNT ,         nvl(MINSIZE,0) MINSIZE  ,nvl(INCAMOUNT,0) INCAMOUNT       ,       BUYSCNT, salescnt  ,   (Select NVL (SUM (iss.retainedincome), 0) retainedincome  from fo_adn_trading_t iss where iss.refissueid=ism.issueid AND STATUS in ('A','SC') AND iss.transtype = '85'   AND trunc(createddate) = to_date(?, 'fmmm/dd/yy' ))   pnl     ,isr.SPREAD, PREMIUM, FEE ,ism.ALLOCATIONFLAG,to_number(prd.sortorder) sortorder     FROM  fo_adn_issues_m ism,        fo_program_m isr, FO_TRADER_BOOKS_M trb, fo_product_m prd , fo_accountmaster_m am , fo_tm_tradestatus_m st      WHERE ism.programid = isr.programid      AND  prd.prodid = ism.producttype AND ism.producttype = isr.producttype      AND trb.BOOKID = isr.DEFAULTBOOKID  AND ism.status = st.statusid   AND ism.ACCTNBR = am.ACCTNBR and ism.refissueid ='0000'   AND am.status = 'Y' AND isr.status = 'Y'     AND PUBLISHED ='Y'     and    SUBACCTCASSII is null   AND ism.status in ('A' )  AND (ism.availablecredit != 0 OR ism.availabletoday    != 0) 
sql.getADNpublishEcpInvBookView = UPDATE fo_adn_issues_m SET REFISSUEID = ?, OFFERFLAG = ? ,  SETTLE = ?,  MAXAMOUNT = ?, AVAILABLECREDIT = ?, AVAILABLETODAY = ?, OFFER = ?, OFFERYIELD = ?, DISPBIDDISCOUNT =? ,DISPBIDYIELD =?, DISPOFFERDISCOUNT = ?, DISPOFFERYIELD = ?, AVGBID = ? , BID = ? , BIDYIELD = ?,ACCRUEDINTEREST = ? ,  amountflag = SIGN(? - AVAILABLECREDIT), rateflag = SIGN(? - bid), MODIFIEDDATE =to_date(?,?), MODIFIEDBY =?  WHERE ISSUEID = ? AND PRODUCTTYPE = ? AND programid = ?
sql.updateADNTemplateName=UPDATE fo_template_m set templatename=? WHERE  templateid = ? 
sql.getADNMaturityDatesOne=SELECT   TO_CHAR (maturitydate, 'mm/dd/yyyy') || '-'|| TO_CHAR (maturityenddate, 'mm/dd/yyyy') matrange	FROM fo_adn_issues_m WHERE status IN ('S')	AND TRANSTYPE ='10' AND issuetype=UPPER('S') AND programid = ? 		
sql.getADNMaturityDatesTwo=AND ISSUEID not  in (    select  distinct m.issueid  from ( 	  SELECT     issueid, refissueid, transtype   FROM fo_adn_issues_m   WHERE transtype = '10' AND status IN ('A', 'S')   START WITH issueid = ?   CONNECT BY PRIOR issueid = refissueid)t,fo_adn_issues_m m   WHERE m.transtype = '10' AND m.status IN ('A', 'S')   and m.transtype = t.transtype   START WITH m.issueid = DECODE(t.refissueid,'0000',t.issueId,t.refissueid)   CONNECT BY PRIOR m.issueid = m.refissueid   ) 
sql.updateADNDeleteSecurities = UPDATE  	FO_SECURITIES_M	 set status =? ,  MODIFIEDDATE   		= to_date(?,?),  MODIFIEDBY   			=	?  WHERE  ( ISSUEID = ?  )       
sql.saveADNRfqData=INSERT INTO FO_CLIENT_RFQ_D( rfqseq, PROGRAMID, ticker, SENDERLOGINID, RECEIVERLOGINID, PRODUCTTYPE, CURRENCYCODE, SETTLEDATE, MATURITYDATE, TRADEAMOUNT, RATE, status,CASSII,createddate ,TRADEVIEW,CLIENTVIEW)  VALUES (?,  ?,  ?,  ?,  ?,  ?,  ?, to_date(?,?), to_date(?,?),?,?,?,?,sysdate,'Y','N') 
sql.getADNCusipDetails=select amount,ism.producttype,ticker,ism.programId,bid,   TO_CHAR (settlementdate,'fmmm/dd/yy' ) settledate,   TO_CHAR (maturitydate,'fmmm/dd/yy' ) maturitydate   from fo_adn_issues_m ism,fo_program_m fm     where issuetype=? and cusip=?        and refissueid=? and ism.PROGRAMID=fm.PROGRAMID    union    select amount,ism.producttype,ticker,ism.programId,bid,   TO_CHAR (settlementdate,'fmmm/dd/yy' ) settledate,   TO_CHAR (maturitydate,'fmmm/dd/yy' ) maturitydate   from fo_securities_m ism,fo_program_m fm     where issuetype=? and cusip=?        and refissueid=? and ism.PROGRAMID=fm.PROGRAMID
sql.updateADNAllocationIssueDetails=UPDATE fo_adn_issues_m SET SETTLE = ?, ORGSETTLETDATE = to_date(?,?),SETTLEMENTDATE = to_date(?,?),	DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,BID =?, BIDYIELD =? WHERE REFISSUEID=?   
sql.updateADNAllocationTradeDetails=UPDATE fo_adn_trading_t SET SETTLE = ?, ORGSETTLETDATE = to_date(?,?),SETTLEMENTDATE = to_date(?,?),	DISPBIDDISCOUNT =? ,DISPBIDYIELD =?,BID =?, BIDYIELD =? WHERE REFISSUEID=?   
sql.updateADNBuysCusip= UPDATE fo_adn_issues_m set CUSIP =UPPER(?) WHERE refissueid=?
sql.getADNVenueDetails=select distinct source from vw_cptradehistory_t ORDER BY case SOURCE when 'DOMES' then 1 when 'PORTAL' then 2 when 'MERCURY' then 3 when 'BOOM' then 4 when 'TWEB' then 5 else 6 end  ASC
sql.getADNMergeConvertionOne   =      SELECT aa.prodid, aa.programid, aa.issuenumber, aa.refissueid, aa.issuedate, aa.issuername, aa.issuerid, ticker, bid, offer, producttype, cusip,prodcode, settledate, settlementdate, settle, aa.createddate, mat, aa.maturitydate, sumofamt, accruedinterest,currencycode,dispbidyield,price,ticketnumber,bookname,issuetype,status,shortname, NVL ((sumofamt * 1000 - accruedinterest), 0) moneyamt, aa.transtype FROM (SELECT DISTINCT a.prodid, a.programid, a.issuenumber, a.refissueid,a.issuername, a.issuerid, a.issuedate, ticker, bid, offer, producttype, cusip, settledate, settlementdate, settle, a.createddate, mat, a.maturitydate, SUM (amount) OVER (PARTITION BY ticker, mat, bid, refissueid, settledate) sumofamt, a.transtype, a.accruedinterest,a.currencycode,a.dispbidyield,a.price,a.prodcode,a.ticketnumber,bookname ,a.issuetype,a.status,a.shortname FROM (SELECT ism.prodid, prd.prodcode,ism.programid, ism.issuenumber, ism.currencycode, ism.issueid, ism.refissueid,isr.issuerid, isr.issuername, isr.ticker ticker, ism.amount, ism.producttype, ism.cusip, TO_CHAR (ism.issuedate, 'fmmm/dd/yy' ) issuedate, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) settledate, ism.orgsettletdate settlementdate, ism.settle settle, TRUNC (ism.createddate) createddate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) ) mat, ism.bid, ism.offer, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.accruedinterest, ism.transtype,ism.dispbidyield,ism.price,ism.ticketnumber,trb.bookname,ism.issuetype ,ism.status,am.shortname FROM fo_adn_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'S' AND ism.status = 'A' AND subacctcassii IS NULL
sql.getADNMergeConvertionTwo   =     ) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getADNConvertionDetailsOne = 	SELECT * FROM (SELECT   a.*, COUNT (*) OVER () AS cnt, ROW_NUMBER () OVER (ORDER BY a.createddate DESC) rnum FROM (SELECT ism.prodid, ism.programid, ism.issuenumber,isr.issuerid, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid,  ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') settledate, ism.orgsettletdate settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.orgsettletdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, ism.createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, '' proceedsflag, '' subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, 0 traderacruedint, '' exdates, 0 offeryield, bidyield, '' tempcusip, '' subjecttocall, '' msgtype, '' matcode, st.descr, st.dispdescr, '' quantityflag, SYSDATE reqtimestamp, '' assetbacked, 0 minimumpiece, ism.price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, '' gridissueid, 0 retainedincome, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_adn_trading_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND ism.issuetype = 'S' AND ism.status = 'A' AND subacctcassii IS NULL 
sql.getADNConvertionDetailsTwo = 	) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y' 
sql.deleteADNTemplateMaster=DELETE fo_template_m  WHERE  templateid = ? 
sql.deleteADNTemplateDetails=DELETE fo_template_d  WHERE  templateid = ? 
sql.getTodaysADNMaturities= select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM   fo_adn_issues_m ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '10'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.issuetype NOT IN ('S'))     AND ism.refissueid = '0000'     AND ism.availablecredit > 0     AND (TRUNC (ism.createddate) BETWEEN TO_DATE    (?,?) AND TO_DATE(?,?)) union select ism.prodid, ism.programid, ism.issuenumber,    isr.shortname isrshrtname, ism.issueid,BID,ism.transtype,     ism.refissueid, isr.TICKER ticker, ism.ticketnumber, am.shortname,   ism.amount,TO_CHAR (ism.orgsettletdate,     'fmmm/dd/yy'      ) orgsettletdate, ism.availablecredit, ism.availabletoday,ism.status FROM  fo_adn_trading_t ism,      fo_program_m isr,      fo_accountmaster_m am      WHERE ism.programid = isr.programid     AND ism.transtype = '85'     AND isr.status = 'Y'      AND published = 'Y'      AND ism.acctnbr = am.acctnbr     AND am.status = 'Y'      AND (ism.status NOT IN ('AT', 'AC'))     AND subacctcassii IS NULL     
sql.getADNTradeOne=sysdate dateddate, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, afr, epimstatus, ism.offeryield, ism.bidyield
sql.getADNTradeBuys= ,ism.notes FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '10' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND (ism.issuetype NOT IN ('S')) AND ism.tradingflag = 'N'
sql.getADNTradeSells=,'' notes FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.transtype = '85' AND st.status = 'Y' AND ism.status NOT IN ('AT', 'AC') AND subacctcassii IS NULL AND isr.status = 'Y' AND published = 'Y' AND ism.acctnbr = am.acctnbr AND am.status = 'Y'
sql.getADNSecurityDetailsOne =  SELECT ism.issueid, ism.refissueid, isr.programid, isr.maxnofdays, isr.issuername, isr.ticker ticker, isr.shortname isrshrtname, isr.cptype, isr.countrycode, '' voiceinvestor, '' voicetrade, TO_CHAR (avgbid) avgbid, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, ism.prodid, ism.issuenumber, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid), ism.traderid) traderloginname, ism.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid),ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, gridissueid, 0 retainedincome, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder, NVL ( ( (amount * 1000) * (TRUNC (ism.maturitydate) - ism.prevpaymentdate) * NVL (ism.bid, 0) ) / (100 * 360), 0 ) todaynetamt, TO_CHAR (ism.prevpaymentdate, 'fmmm/dd/yy') offerprevpaymentdate, 0 todayaccruedinterest FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('M', 'A', 'S', 'P', 'W', 'R', 'C', 'E') AND published = 'Y'
sql.getADNSecurityDetailsTwo = SELECT ism.issueid, ism.refissueid, isr.programid, isr.maxnofdays, isr.issuername, isr.ticker ticker, isr.shortname isrshrtname, isr.cptype, isr.countrycode, ism.voiceinvestor, ism.voicetrade, '' avgbid, isr.spread, premium, fee, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, DECODE (industry, 'I1', 'Bank/Finance', 'I2', 'Govt', 'I3', 'Industrial' ) industryname, (SELECT ma.acctname FROM fo_masteraccounts_m ma WHERE ma.refacctnbr = isr.masteracctnumber AND status = 'Y' AND ROWNUM = 1) mastacctname, ism.prodid, ism.issuenumber, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy') maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM') createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd'), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd'), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.traderid), ism.traderid) traderloginname, ism.sploginid, NVL((SELECT (fn_decrypt (firstname, 1) || ' ' || fn_decrypt (lastname, 1) ) FROM fo_member_m WHERE loginid = ism.sploginid),ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, ism.traderacruedint, exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, '' gridissueid, 0 retainedincome, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder, NVL ( ( (amount * 1000) * (TRUNC (ism.maturitydate) - ism.orgsettletdate) * NVL (ism.bid, 0) ) / (100 * 360), 0 ) todaynetamt, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy') offerprevpaymentdate, 0 todayaccruedinterest FROM vw_adntradehistory_t ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND isr.defaultbookid = trb.bookid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND ism.status = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND st.status = 'Y' AND subacctcassii IS NULL AND ism.status IN ('M', 'A', 'S', 'P', 'W', 'R', 'C', 'E') AND published = 'Y'
sql.getADNProfitAndLossDeta = SELECT   t.issueid, programid, (originalamount* 1000)originalamount, dollarpx, currentbid,	      remainingdays, TO_CHAR (settlementdate, 'fmmm/dd/yy') settlementdate,	      TO_CHAR (maturitydate, 'fmmm/dd/yy') maturitydate,	      NVL (currentamount*1000, 0) currentamount,	      ((currentamount - originalamount)*1000) sellamount,	      (NVL (accretion, 0)*1000) accretion, (NVL (realized, 0)*1000) realized,	      (NVL (unrealized, 0)*1000) unrealized, (markingpandl*1000)markingpandl,	      TO_CHAR (modifieddate, 'fmmm/dd/yy') modifieddate, (realizedfromsell*1000)realizedfromsell,	      (realunreal*1000)realunreal, (accumulativeunreal*1000)accumulativeunreal,	      (accumulativereal*1000)accumulativereal,	      (accumulativeunreal+accumulativereal)*1000 accumulativerealunreal,count(*) over (order by modifieddate desc ) rn	      FROM fo_adnissues_tracking_d t	      WHERE transactiontype = 'E' AND issueid = ?	      ORDER BY settlementdate
sql.getADNBuyAndSell = SELECT  *      FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.orgsettletdate, 'fmmm/dd/yy') orgsettletdate ,   createddate,  TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate,   a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status,  a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount, a.bid, 'B' AS transtype, (SELECT avgbid FROM fo_adn_issues_m WHERE issueid = ?) avgbid, (SELECT amount FROM fo_adn_issues_m	  WHERE issueid = ?) totamt, (SELECT bid FROM fo_adn_issues_m	 WHERE issueid = ?) masterbid  FROM fo_adn_issues_m a	  WHERE a.status = 'A' AND a.refissueid = ?  UNION   SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.orgsettletdate, 'fmmm/dd/yy') orgsettletdate, createddate,	 TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate, b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status, b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid  FROM vw_adntradehistory_t b  WHERE b.status = 'A' AND b.refissueid = ?) ORDER BY orgsettletdate,transtype
sql.getADNBuyAndSellOne = SELECT  * FROM (SELECT TO_CHAR (a.settlementdate, 'fmmm/dd/yy') settlementdate,	0 RETAINEDINCOME, TO_CHAR (a.orgsettletdate, 'fmmm/dd/yy') orgsettletdate , a.createddate,a.cusip,fm.ISSUERNAME, trb.bookname,prd.prodname,ticker,a.availablecredit, TO_CHAR (a.maturitydate, 'fmmm/dd/yy') maturitydate, a.source,a.currencycode,a.traderloginname,a.SPLOGINNAME,a.ticketNumber,a.status, a.maturitydate - a.settlementdate daystomaturity, nvl(a.amount, 0) * 1000 amount, a.bid, 'B' AS transtype,(SELECT avgbid  FROM fo_adn_issues_m  WHERE issueid = ?) avgbid,(SELECT amount FROM fo_adn_issues_m  WHERE issueid = ?) totamt,(SELECT bid  FROM fo_adn_issues_m WHERE issueid = ?) masterbid  FROM fo_adn_issues_m a ,fo_product_m prd,fo_trader_books_m trb,  fo_program_m fm	  
sql.getADNBuyAndSellFinal = AND prd.prodid = a.producttype AND trb.BOOKID = fm.DEFAULTBOOKID   AND a.PROGRAMID = fm.PROGRAMID UNION    SELECT TO_CHAR (b.settlementdate, 'fmmm/dd/yy') settlementdate,	RETAINEDINCOME,	TO_CHAR (b.orgsettletdate, 'fmmm/dd/yy') orgsettletdate,b.createddate,b.cusip,prg.ISSUERNAME, trab.bookname,pord.prodname,ticker,b.availablecredit,  TO_CHAR (b.maturitydate, 'fmmm/dd/yy') maturitydate,  b.source,b.currencycode,b.traderloginname,b.SPLOGINNAME,b.ticketNumber,b.status,  b.maturitydate - b.settlementdate daystomaturity, nvl(b.amount, 0) * 1000 amount,	                  b.bid, 'S' AS transtype, 0 avgbid, 0 totamt, 0 masterbid  FROM vw_adntradehistory_t b ,fo_product_m pord,  fo_trader_books_m trab,  fo_program_m prg   WHERE b.status = 'A' AND b.refissueid = ? AND pord.prodid = b.producttype	 AND trab.BOOKID = prg.DEFAULTBOOKID AND b.PROGRAMID = prg.PROGRAMID)  ORDER BY orgsettletdate,transtype
sql.getADNBuyAndSellThree = WHERE a.status = 'A' AND a.refissueid = '0000'  AND a.issuetype = 'F'	 and a.issueid=?
sql.getADNBuyAndSellFour  =  WHERE a.status = 'A' AND a.refissueid = ?
sql.getRiskByDepartment = SELECT DISTINCT t.newprod prodcode, SUM (POSITION) OVER (PARTITION BY newprod) sumofprod_positionamt, SUM (netsettleposition) OVER (PARTITION BY newprod) sumofprod_netsetts, SUM (nintydays) OVER (PARTITION BY newprod) sumofprod_sumofnintydays, SUM (unrealizedpl) OVER (PARTITION BY newprod) sumofprod_sumofunrealizedpl, SUM (realizedpl) OVER (PARTITION BY newprod) sumofprod_sumofrealizedpl, SUM (pandl) OVER (PARTITION BY newprod) sumofprod_sumofpandl, SUM (NVL(dv01,0)) OVER (PARTITION BY newprod) sumprod_dv01, SUM (NVL(cov01,0)) OVER (PARTITION BY newprod) sumprod_cov01,   SUM(avgAmt) OVER (PARTITION BY newprod)/SUM(amount) OVER (PARTITION BY newprod)sumprod_weightavg FROM (SELECT tt.*, decode(prodcode,'ADN','ADN Department','ECP' ,'EURO Short Term','ECD' ,'EURO Short Term','MCP' ,'Muni', 'CP','US Short Term','YCD','US Short Term','FRCP','US Short Term','FRCD','US Short Term') newprod,case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( - ( (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) else ROUND ( - ( (tt.coupon+1)* (1 / 10000) * ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) ) / 360 * POSITION, 2 ) end dv01, case when tt.producttype in ('1200', '1600', '2700', '2900', '1400') then ROUND ( (2 * (dispbidyield / 100)) * ( (1 / 100) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) ) * 2 * POSITION, 2 ) else ROUND ( (2 * (tt.coupon +1) * (dispbidyield / 100)) * ( ( TO_DATE (maturitydate, 'fmmm/dd/yy') - TO_DATE (to_char(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy') ) / 360 ) * 2 * POSITION, 2 ) end cov01 FROM (SELECT a.coupon,a.producttype, a.prodcode, a.bookno, a.transtype, a.maturitydate, a.settledate, a.dispbidyield,a.amount, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A'), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A'), 0 ) ) POSITION, a.amount - NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cp_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), NVL ((SELECT SUM (NVL (amount, 0)) FROM fo_cd_trading_t WHERE refissueid = a.issueid AND status = 'A' AND settlementdate <= TRUNC (SYSDATE)), 0 ) ) netsettleposition, ROUND ( SUM (sumofavailcreditrange) OVER (PARTITION BY a.issueid) / 90, 2 ) nintydays, NVL (realunreal, 0) pandl, realized realizedpl, unrealized unrealizedpl,avgamt FROM (SELECT '0' coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal,  NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) union SELECT '0' coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal,  NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_adn_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.issuetype = 'F' AND ism.tradingflag = 'Y' AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (realizedfromsell, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (unrealized, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cpissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, 0 realunreal,   NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_frissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND isr.status = 'Y' AND ism.status IN ('A') AND am.status = 'Y' AND subacctcassii IS NULL AND ism.acctnbr = am.acctnbr AND ism.maturitydate > TRUNC (SYSDATE) UNION SELECT ism.coupon,ism.producttype, prd.prodcode, bookno, ism.prodid, ism.transtype, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy' ) maturitydate, ism.issueid, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy' ) settledate, ism.amount, ism.dispbidyield, (SUM (ism.availablecredit) OVER (PARTITION BY ism.issueid) ) * ( ism.maturitydate - ism.settlementdate ) sumofavailcreditrange, NVL ((SELECT t.realized FROM (SELECT NVL (accumulativereal, 0 ) realized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realized, NVL ((SELECT t.unrealized FROM (SELECT NVL (accumulativeunreal, 0 ) unrealized, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) unrealized, NVL ((SELECT t.realunreal FROM (SELECT NVL (realunreal, 0 ) realunreal, issueid, ROW_NUMBER () OVER (PARTITION BY issueid ORDER BY modifieddate DESC) AS rn FROM fo_cdissues_tracking_d iss WHERE TRUNC (modifieddate) = TRUNC (SYSDATE)) t WHERE t.issueid = ism.issueid AND t.rn = 1), 0 ) realunreal,NVL((ism.availablecredit * ( TO_DATE (TO_CHAR(ism.maturitydate, 'fmmm/dd/yy'), 'fmmm/dd/yy') - TO_DATE (TO_CHAR(sysdate,'fmmm/dd/yy') , 'fmmm/dd/yy'))), 0 ) avgAmt FROM fo_cdissues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_tm_tradestatus_m st, fo_accountmaster_m am WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND st.status = 'Y' AND isr.status = 'Y' AND ism.published = 'Y' AND ism.status = 'A' AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND subacctcassii IS NULL AND TRIM (am.programid) IS NOT NULL AND ism.maturitydateflag = 'M' AND ism.issuetype = 'I' AND ism.transtype = '10' AND ism.maturitydate > TRUNC (SYSDATE)) a, fo_up_product_d UP, fo_group_m g WHERE g.prodid = a.prodid AND g.groupid = UP.groupid AND g.currencycode = a.currencycode AND g.status = 'Y' AND UP.status = 'Y'
sql.getADNCusipMaturityExpDatesMap = SELECT issueid,exdates maturityexpdates FROM fo_adn_issues_m ism, fo_program_m isr WHERE ism.programid = isr.programid and ism.status ='Y' and isr.status ='Y'
sql.getADNCusipMaturities = SELECT to_char(maturitydate, ?) min_mdate, to_char(maturityenddate, ?) max_mdate FROM fo_adn_issues_m WHERE cusip = ? and transtype='10' AND maturityenddate > SYSDATE AND TRADINGFLAG='Y'
sql.getCPBuyIssueDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, buyscnt, salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM fo_issues_m ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL
sql.getCPSellIssueDetails = SELECT a.*, COUNT (*) OVER () AS cnt FROM (SELECT ism.prodid, ism.programid, ism.issuenumber, isr.shortname isrshrtname, (SELECT stsandp FROM fo_ratings_d WHERE ratingid = isr.sandp) sandp, (SELECT stfitch FROM fo_ratings_d WHERE ratingid = isr.fitchrating) fitchrating, (SELECT stmoody FROM fo_ratings_d WHERE ratingid = isr.moodyrating) moodyrating, (SELECT ltsandp FROM fo_ratings_d WHERE ratingid = isr.ltsandp) ltsandp, (SELECT ltfitch FROM fo_ratings_d WHERE ratingid = isr.ltfitch) ltfitch, (SELECT ltmoody FROM fo_ratings_d WHERE ratingid = isr.ltmoody) ltmoody, ism.issueid, ism.refissueid, TO_CHAR (ism.issuedate, 'fmmm/dd/yy') issuedate, 'NEWSEARCH' cpaction, isr.issuername, isr.ticker ticker, ism.ticketnumber, am.shortname, ism.amount, fn_decrypt (am.cassiiacctnbr, 1) cassiiacctnbr, am.acctnbr, am.acctname, ism.producttype, ism.cusip, TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') settledate, ism.settlementdate, ism.settle settle, (SELECT fn_get_dispdate (TO_CHAR (ism.settlementdate, 'mm/dd/yyyy') ) FROM DUAL) settlementdatestr, TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') maturitydate, ism.maturitydate maturitydatens, TO_CHAR (ism.maturityenddate, 'fmmm/dd/yy' ) maturityenddate, TO_CHAR (MAX (ism.maturityenddate) OVER (PARTITION BY ism.programid), 'fmmm/dd/yy' ) maxmaturityenddate, TO_CHAR (ism.createddate, 'fmmm/dd/yy HH:MI:SS AM' ) createddate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.createddate, 'fmmm/dd' ), TO_CHAR (ism.createddate, 'fmmm/dd/yy') ) trd, ism.dispmaturitydate mat, DECODE (ism.maturitydate, ism.maturityenddate, (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL), DECODE (TO_CHAR (ism.maturitydate, 'fmmm'), TO_CHAR (ism.maturityenddate, 'fmmm'), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL), (SELECT fn_get_dispdate (TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) ) FROM DUAL) || '-' || (SELECT fn_get_dispdate (TO_CHAR (ism.maturityenddate, 'mm/dd/yyyy' ) ) FROM DUAL) ) ) formatmatdate, ism.availablecredit, ism.availabletoday, ism.minamount, ism.maxamount, ism.bid, ism.offer, ism.accruedinterest, NVL ((amount * 1000 - accruedinterest), 0) moneyamt, TO_CHAR (ism.asofdate, 'fmmm/dd/yy') asofdatestr, ism.notes, ism.transtype, ism.offerflag, ism.rootcusip, ism.issuetype, ism.rateflag, ism.amountflag, isr.countrycode, ism.dispbiddiscount, ism.dispbidyield, ism.dispofferdiscount, ism.dispofferyield, bookno, bookname, ism.status, prd.prodcode, ism.SOURCE, ism.rejectreason, ism.traderid, ism.traderloginname, ism.sploginid, (SELECT fn_decrypt (loginname, 1) FROM fo_member_m WHERE loginid = ism.sploginid) sploginname, ism.offeringlimit, ism.minimumpiecesize, ism.currencycode, isr.cptype, prd.prodname prodname, trb.bookid, isr.maxamount isrmaxamount, NVL (minsize, 0) minsize, NVL (incamount, 0) incamount, ism.proceedsflag, ism.subjectflag, TO_CHAR (ism.orgsettletdate, 'fmmm/dd/yy' ) orgsettletdate, ism.traderacruedint, fn_get_exdates (exdates) exdates, ism.offeryield, ism.bidyield, ism.tempcusip, ism.subjecttocall, ism.msgtype, ism.matcode, st.descr, st.dispdescr, ism.quantityflag, ism.reqtimestamp, ism.assetbacked, ism.minimumpiece, NVL (ism.price, '') price, 0 bidyeild, '' dateddate, 0 buyscnt, 0 salescnt, isr.spread, premium, fee, ism.allocationflag, TO_NUMBER (prd.sortorder) sortorder FROM (SELECT pm.*,ROWNUM rowno FROM FO_CP_TRADING_T pm   WHERE pm.status ='A' AND pm.transtype = '85'  ) ism, fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr  AND am.status = 'Y' AND isr.status = 'Y' AND published = 'Y' AND subacctcassii IS NULL 
sql.getECPIssueInit = SELECT * FROM (SELECT a.* , count(*) over() as cnt, ROWNUM rnum FROM ( SELECT isr.programid mprogramid,fn_decrypt(am.cassiiacctnbr,1) cassiiacctnbr,st.descr,prd.prodcode, bookno,  TO_CHAR (cdis.createddate,	'fmmm/dd/yy') issuedate,isr.issuername, isr.shortname shortname, isr.issuerid, isr.maxamount isrmaxamount, NVL(isr.incamount, 1000) incamount, isr.minsize minsize, isr.cusipbaseone, isr.TICKER, to_char(cdis.settlementdate, 'fmmm/dd/yy') setdate, cdis.* FROM fo_program_m isr
sql.getECPIssueOne =  WHERE cdis.programid(+) = isr.programid AND isr.status = 'Y' AND cdis.status = 'A' AND cdis.refIssueid = '0000' AND cdis.transType='10' AND cdis.ACCTNBR =  am.ACCTNBR  AND am.status = 'Y'	AND cdis.status = st.statusid AND st.status = 'Y' AND prd.prodid = cdis.producttype AND cdis.producttype = isr.producttype	AND isr.defaultbookid = b.bookid
sql.getSellsONE = SELECT DISTINCT TO_CHAR (ism.maturitydate, 'mm/dd/yyyy' ) matdate, ism.prodid, prodname, ism.issueid, ism.status, ism.SOURCE, ism.amount, ism.refissueid, ism.programid, ism.cusip, ism.transtype, ism.ticketnumber, ism.currencycode, am.acctname cassii, isr.shortname isrshrtname, isr.issuername, isr.producttype, st.descr, st.dispdescr, nvl((SELECT fn_decrypt (firstname,1 ) || ' ' || fn_decrypt (lastname,1) FROM fo_member_m WHERE loginid = nvl(ism.sploginid, ism.createdby) ), 'N/A') salesperson, ism.dispbiddiscount, ism.dispbidyield, DECODE (TRUNC (ism.settlementdate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.settlementdate, 'fmmm/dd' ), TO_CHAR (ism.settlementdate, 'fmmm/dd/yy') ) settlementdate, DECODE (TRUNC (ism.maturitydate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.maturitydate, 'fmmm/dd' ), TO_CHAR (ism.maturitydate, 'fmmm/dd/yy') ) maturitydate, DECODE (TRUNC (ism.createddate, 'YYYY'), TRUNC (SYSDATE, 'YYYY'), TO_CHAR (ism.issuedate, 'fmmm/dd' ), TO_CHAR (ism.issuedate, 'fmmm/dd/yy') ) tradedate FROM fo_program_m isr, fo_trader_books_m trb, fo_product_m prd, fo_accountmaster_m am, fo_tm_tradestatus_m st,
sql.getSellsTwo= WHERE ism.programid = isr.programid AND prd.prodid = ism.producttype AND ism.producttype = isr.producttype AND trb.bookid = isr.defaultbookid AND TRIM (ism.status) = st.statusid AND ism.acctnbr = am.acctnbr AND am.status = 'Y' AND isr.status = 'Y' AND subacctcassii IS NULL  AND ism.maturitydate >= TRUNC (SYSDATE) AND ism.refissueid <> '0000' AND st.status = 'Y'

sql.cdCusip = SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM fo_cdissues_m WHERE status NOT IN ('AT', 'AC') AND maturitydateflag = 'M' UNION SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM vw_cdtradehistory_t WHERE status NOT IN ('AT', 'AC')
sql.cpCusip = SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate  FROM fo_issues_m WHERE status NOT IN ('AT', 'AC') AND issuetype = 'F' UNION SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM vw_cptradehistory_t WHERE status NOT IN ('AT', 'AC')
sql.frCusip = SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM fo_frissues_m WHERE status NOT IN ('AT', 'AC') UNION SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM vw_tradehistory_t WHERE status NOT IN ('AT', 'AC')
sql.adnCusip = SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM fo_adn_issues_m WHERE status NOT IN ('AT', 'AC') AND issuetype = 'F' UNION SELECT DISTINCT cusip, issueid, createddate, programid,maturitydate FROM vw_adntradehistory_t WHERE status NOT IN ('AT', 'AC')

sql.getMemberInfo = SELECT m.companyid, m.roletypeid, m.membercatid, u.description, c.companycatid, m.loginid, r.roledesc, m.passwordexpdate, fn_decrypt(firstname,1) firstname, fn_decrypt(middlename,1) middlename, fn_decrypt(lastname,1) lastname, m.language, locale, (SELECT javatzcode FROM fo_timezone_m tm WHERE tm.tzcode = c.tzcode AND tm.status   = 'Y' )tzcode FROM fo_member_m m, fo_company_m c, fo_usercategory_m u, fo_roletypes_m r WHERE m.companyid=c.companyid AND r.roletypeid =m.roletypeid AND m.membercatid=u.membercatid
sql.getTraderForTicker= SELECT distinct bk.traderid FROM fo_program_m pr, fo_member_m m, (SELECT trb.traderid, trb.bookid FROM fo_trader_books_m trb WHERE trb.status = 'Y' UNION SELECT pr.traderid, trb.bookid FROM fo_program_m pr, fo_trader_books_m trb WHERE trb.bookid = pr.defaultbookid AND trb.status = 'Y' AND pr.status = 'Y' UNION SELECT mb.loginid, trb.bookid FROM fo_member_m mb, fo_trader_books_m trb WHERE trb.bookid = mb.defaultbookid AND trb.status = 'Y' AND mb.status = 'Y') bk WHERE pr.defaultbookid = bk.bookid AND pr.ticker = ? AND m.loginid = bk.traderid AND m.status = 'Y'
sql.getHolidaysForCurrency=SELECT companyid, trunc(hdate)hdate,to_char(hdate, 'dd/mm/yyyy' ) holiday,   description  , hyear ,currencyCode  FROM   fo_holiday_new_m 
